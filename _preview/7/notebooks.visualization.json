{"version":2,"kind":"Notebook","sha256":"605955d18801934481a8ae5ac38fe918e0b1a454f9073b9d5bb43e99c003e6b2","slug":"notebooks.visualization","location":"/notebooks/visualization.ipynb","dependencies":[],"frontmatter":{"title":"Interactive Visualizion with Open Altimetry & Google Earth Engine","content_includes_title":false,"kernelspec":{"name":"python3","display_name":"is2cb","language":"python"},"authors":[{"nameParsed":{"literal":"ICESat-2 team","given":"ICESat-2","family":"team"},"name":"ICESat-2 team","id":"contributors-myst-generated-uid-0"}],"open_access":true,"license":{"content":{"id":"CC-BY-4.0","url":"https://creativecommons.org/licenses/by/4.0/","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true},"code":{"id":"Apache-2.0","url":"https://opensource.org/licenses/Apache-2.0","name":"Apache License 2.0","free":true,"osi":true}},"github":"https://github.com/ICESAT-2HackWeek/icesat2-cookbook","copyright":"2025","affiliations":[{"id":"UAlbany","name":"University at Albany (SUNY)","department":"Atmospheric and Environmental Sciences","url":"https://www.albany.edu/daes"},{"id":"CISL","name":"NSF National Center for Atmospheric Research","department":"Computational and Information Systems Lab","url":"https://www.cisl.ucar.edu"},{"id":"Unidata","name":"NSF Unidata","url":"https://www.unidata.ucar.edu"},{"id":"Argonne","name":"Argonne National Laboratory","department":"Environmental Science Division","url":"https://www.anl.gov/evs"},{"id":"CarbonPlan","name":"CarbonPlan","url":"https://carbonplan.org"},{"id":"NVIDIA","name":"NVIDIA Corporation","url":"https://www.nvidia.com/"}],"numbering":{"title":{"offset":1}},"edit_url":"https://github.com/ICESAT-2HackWeek/icesat2-cookbook/blob/HEAD/notebooks/visualization.ipynb","thumbnail":"/icesat2-cookbook/_preview/7/build/b785ddce6158c1efca3b023af48fd454.jpeg","exports":[{"format":"ipynb","filename":"visualization.ipynb","url":"/icesat2-cookbook/_preview/7/build/visualization-00f2e4089f8984210d1eb8288d0afcf3.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","data":{"tags":[],"user_expressions":[]},"children":[{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"By Philipp Arndt, Chancelor Roberts ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"F4RaqPpvAx"},{"type":"break","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"YOt1T7BCIO"},{"type":"text","value":"Scripps Institution of Oceanography, University of California San Diego ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"WMKYKSwang"},{"type":"break","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"ix9ed38Q4i"},{"type":"text","value":"Github: ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"ELAFkUws8W"},{"type":"link","url":"https://github.com/fliphilipp","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"cite","identifier":"fliphilipp","label":"fliphilipp","kind":"narrative","position":{"start":{"line":3,"column":122},"end":{"line":3,"column":133}},"error":"not found","key":"Nal23JsTQl"}],"urlSource":"https://github.com/fliphilipp","error":true,"key":"naLIVMDrZl"},{"type":"text","value":", ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"AG6w9TkTkl"},{"type":"link","url":"https://github.com/chancelorr","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"cite","identifier":"chancelorr","label":"chancelorr","kind":"narrative","position":{"start":{"line":3,"column":168},"end":{"line":3,"column":179}},"error":"not found","key":"QBCuhkm7Ot"}],"urlSource":"https://github.com/chancelorr","error":true,"key":"rx5CTaP7Za"},{"type":"text","value":" ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"TxNPdRDNgy"},{"type":"break","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"T45CGyvdQs"},{"type":"text","value":"Contact: ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"GbfLYTdoQV"},{"type":"link","url":"mailto:ccroberts@ucsd.edu","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"ccroberts@ucsd.edu","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"orKY5o534X"}],"urlSource":"mailto:ccroberts@ucsd.edu","key":"uJX23FtdEv"}],"key":"jn3Ewy20HM"},{"type":"heading","depth":2,"position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Learning Objectives","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"zI2ISRAeaI"}],"identifier":"learning-objectives","label":"Learning Objectives","html_id":"learning-objectives","implicit":true,"key":"KAAMsVx30z"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":10,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"Discover some interesting ICESat-2 data by browsing ","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"Xn1i0Src58"},{"type":"link","url":"https://openaltimetry.org/data/icesat2/","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"OpenAltimetry","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"l9qez6MRpY"}],"urlSource":"https://openaltimetry.org/data/icesat2/","key":"W445WNKJV4"}],"key":"zesGz6tthr"},{"type":"listItem","spread":true,"position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"Get the data into a Jupyter Notebook, plot it and overlay the ground track on a map","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"Bh57G9AqDL"}],"key":"CdygTrSCkp"},{"type":"listItem","spread":true,"position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"text","value":"Use ","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"PesR0a5WCV"},{"type":"link","url":"https://earthengine.google.com/","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"text","value":"Google Earth Engine","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"qnqh3Y4JMY"}],"urlSource":"https://earthengine.google.com/","key":"tICkzrQVVW"},{"type":"text","value":" to find the closest-in-time Sentinel-2 image that is cloud-free along ICESat-2’s gound track","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"oTxJnbohxc"}],"key":"r1wGkcHzQd"},{"type":"listItem","spread":true,"position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"text","value":"Make a plot from ICESat-2 data and contemporaneous imagery in Jupyter/matplotlib","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"mTC7dd02ZV"}],"key":"SkqFsqlD0w"},{"type":"listItem","spread":true,"position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"text","value":"Bonus Code: Use Google Earth Engine to extract Sentinel-2 data along the ICESat-2 ground track","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"zc4c7W9WgU"}],"key":"mlrPdTqzD2"}],"key":"T9qo8cLa2Q"}],"visibility":"show","key":"utv66MQ5qa"},{"type":"block","kind":"notebook-content","data":{"user_expressions":[]},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Computing environment","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"yhC5FLX1dN"}],"identifier":"computing-environment","label":"Computing environment","html_id":"computing-environment","implicit":true,"key":"M1UTu5f0n9"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"We’ll be using the following Python libraries in this notebook:","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"GghtDFT5db"}],"key":"lfxqc34VT5"}],"key":"Og1RX0BuD4"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"","key":"CyhCnOMsVL"},{"type":"output","id":"FDk7VYjQCyBVTL6WuRLiL","data":[],"key":"gaSGN1xZcF"}],"key":"GwrmLmwtdx"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"#%matplotlib widget \nimport os\nimport ee\nimport geemap\nimport requests\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pylab as plt\nfrom datetime import datetime\nfrom datetime import timedelta\nfrom ipywidgets import Layout\nimport rasterio as rio\nfrom rasterio import plot as rioplot\nfrom rasterio import warp","visibility":"show","key":"x6y9Ulq64q"},{"type":"output","id":"ev-yv_GpKbSX1rt9TUZBz","data":[{"output_type":"error","traceback":"\u001b[31m---------------------------------------------------------------------------\u001b[39m\n\u001b[31mModuleNotFoundError\u001b[39m                       Traceback (most recent call last)\n\u001b[36mCell\u001b[39m\u001b[36m \u001b[39m\u001b[32mIn[1]\u001b[39m\u001b[32m, line 3\u001b[39m\n\u001b[32m      1\u001b[39m \u001b[38;5;66;03m#%matplotlib widget \u001b[39;00m\n\u001b[32m      2\u001b[39m \u001b[38;5;28;01mimport\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01mos\u001b[39;00m\n\u001b[32m----> \u001b[39m\u001b[32m3\u001b[39m \u001b[38;5;28;01mimport\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01mee\u001b[39;00m\n\u001b[32m      4\u001b[39m \u001b[38;5;28;01mimport\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01mgeemap\u001b[39;00m\n\u001b[32m      5\u001b[39m \u001b[38;5;28;01mimport\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01mrequests\u001b[39;00m\n\n\u001b[31mModuleNotFoundError\u001b[39m: No module named 'ee'","ename":"ModuleNotFoundError","evalue":"No module named 'ee'"}],"visibility":"show","key":"CwU7wDTa4D"}],"visibility":"show","key":"l1QSIlxIDr"},{"type":"block","kind":"notebook-content","data":{"user_expressions":[]},"children":[{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"The import below is a class that I wrote myself. It helps us read and store data from the OpenAltimetry API.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"cn5ALXnJ0J"},{"type":"break","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"ixE5UHlNrP"},{"type":"text","value":"If you are interested in how this works, you can find the code in ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"hbbxagA9CC"},{"type":"inlineCode","value":"utils/oa.py","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"bvdfk87XuI"},{"type":"text","value":".","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"OgWor6HZZV"}],"key":"zUgpOyWQXv"}],"key":"N6ZoGrhBUJ"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"import utils.oa as oa\nfrom utils.oa import dataCollector\n\n%load_ext autoreload\n%autoreload 2","visibility":"show","key":"Tq0ptsfyOU"},{"type":"output","id":"8gmmIqnn_6DhMRMh1eWuO","data":[],"visibility":"show","key":"U1TFegOdbD"}],"visibility":"show","key":"tAMysxhJcz"},{"type":"block","kind":"notebook-content","data":{"user_expressions":[]},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Google Earth Engine Authentication and Initialization","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"gWvrFMrJag"}],"identifier":"google-earth-engine-authentication-and-initialization","label":"Google Earth Engine Authentication and Initialization","html_id":"google-earth-engine-authentication-and-initialization","implicit":true,"key":"LXyatT5a1E"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"GEE requires you to authenticate your access, so if ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"yy4B3N8zru"},{"type":"inlineCode","value":"ee.Initialize()","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"HRhfbDmgN5"},{"type":"text","value":" does not work you first need to run ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"kfP69b8QZb"},{"type":"inlineCode","value":"ee.Authenticate()","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"wFn3axSBi2"},{"type":"text","value":". This gives you a link at which you can use your google account that is associated with GEE to get an authorization code. Copy the authorization code into the input field and hit ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"OsNTHkI3yt"},{"type":"emphasis","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"enter","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"TnU1s8bPEq"}],"key":"mOTl6Eodip"},{"type":"text","value":" to complete authentication.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"oG6cAxuOpn"}],"key":"rQQpOMAQer"}],"key":"dZmaeUmfIv"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"try:\n    ee.Initialize()\nexcept: \n    ee.Authenticate()\n    ee.Initialize()","visibility":"show","key":"qhNqAvTaw2"},{"type":"output","id":"G-ayKqYWFA9YKvN8s_oa_","data":[],"visibility":"show","key":"WTFm4YMNDZ"}],"visibility":"show","key":"o5Wjk9niiF"},{"type":"block","kind":"notebook-content","data":{"user_expressions":[]},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Downloading data from the OpenAltimetry API","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"idUZUWoFsQ"}],"identifier":"downloading-data-from-the-openaltimetry-api","label":"Downloading data from the OpenAltimetry API","html_id":"downloading-data-from-the-openaltimetry-api","implicit":true,"key":"OK0RnrMUfC"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Let’s say we have found some data that looks weird to us, and we don’t know what’s going on.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"eOe3NCC29i"}],"key":"cyRj2XuKaH"},{"type":"image","url":"/icesat2-cookbook/_preview/7/build/b785ddce6158c1efca3b023af48fd454.jpeg","alt":"image showing OpenAltimetry screenshot","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"kRUJrUJnNk","urlSource":"https://raw.githubusercontent.com/fliphilipp/images/main/oa-data.jpg"},{"type":"heading","depth":3,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"A short explanation of how I got the data:","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"ayMQnAEdfx"}],"identifier":"a-short-explanation-of-how-i-got-the-data","label":"A short explanation of how I got the data:","html_id":"a-short-explanation-of-how-i-got-the-data","implicit":true,"key":"JZ5pkDiM9m"},{"type":"paragraph","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"I went to ","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"Y5hpbLo2uV"},{"type":"link","url":"https://openaltimetry.org/","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"openaltimetry.org","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"ml3fyNEXiy"}],"urlSource":"https://openaltimetry.org/","key":"EjjlEo6Cou"},{"type":"text","value":" and selected ","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"XaclzMdRIR"},{"type":"strong","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"BROWSE ICESAT-2 DATA","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"mlEcw0ziuO"}],"key":"ZJQiNzFYMG"},{"type":"text","value":". Then I selected ","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"CIGP72T9SC"},{"type":"strong","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"ATL 06","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"McAENpwpwY"}],"key":"x8zbcAewPs"},{"type":"text","value":" (Land Ice Height) on the top right, and switched the projection🌎 to ","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"dUe0hxtCcP"},{"type":"strong","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Arctic","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"T6g7tzy9Fe"}],"key":"yX3GVz9qix"},{"type":"text","value":". Then I selected ","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"rsFyXdqeF5"},{"type":"strong","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"August 22, 2021","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"giKTaMoiSI"}],"key":"f3GzCoBxIi"},{"type":"text","value":" in the calendar📅 on the bottom left, and toggled the ","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"MljYhZRZ43"},{"type":"strong","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"cloud","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"X9hTdHGPkF"}],"key":"vxT4v5Da2A"},{"type":"text","value":"☁️ button to show MODIS imagery of that date. I then zoomed in on my region of interest.","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"Hqsq9kGM7v"}],"key":"qGJUFquojF"},{"type":"paragraph","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"To find out what ICESat-2 has to offer here, I clicked on ","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"hlPAiSvSmT"},{"type":"strong","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"SELECT A REGION","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"bQVVv1pvnX"}],"key":"ajPJGksKrY"},{"type":"text","value":" on the top left, and drew a rectangle around that mysterious cloud. When right-clicking on that rectangle, I could select ","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"E8YyNHPdYm"},{"type":"strong","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"View Elevation profile","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"TsciZpg4lY"}],"key":"Z5Y9uhle0S"},{"type":"text","value":". This opened a new tab, and showed me ATL06 and ATL08 elevations.","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"m4QvLgXiqS"}],"key":"q1YvLpX14C"},{"type":"paragraph","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"text","value":"It looks like ATL06 can’t decide where the surface is, and ATL08 tells me that there’s a forest canopy on the Greenland Ice Sheet? To get to the bottom of this, I scrolled all the way down and selected 🛈","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"CQng5mxXIc"},{"type":"strong","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"text","value":"Get API URL","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"gGx19BNcSi"}],"key":"GsAvAr5Glm"},{"type":"text","value":". The website confirms that the ","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"kGjwhUJr0j"},{"type":"emphasis","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"text","value":"“API endpoint was copied to clipboard.”","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"mcdBpMlBa1"}],"key":"dq80htJAD0"},{"type":"text","value":" Now I can use this to access the data myself.","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"LwahDCElFX"}],"key":"kDAdLAdlvW"},{"type":"paragraph","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"emphasis","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"text","value":"Note: Instead of trying to find this region yourself, you can access the OpenAltimetry page shown above by going to ","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"j5RCNGXW9c"},{"type":"link","url":"http://openaltimetry.org/data/icesat2/?annoId=580&shareKey=d8bebfb8251a69b5b7e2e05df6fd5ca5","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"text","value":"this annotation🏷️","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"iVPmKZKm4c"}],"urlSource":"http://openaltimetry.org/data/icesat2/?annoId=580&shareKey=d8bebfb8251a69b5b7e2e05df6fd5ca5","key":"aFKdS1YApe"},{"type":"text","value":". Just left-click on the red box and select “View Elevation Profile”.","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"uIhTwSx3qF"}],"key":"Ve4YnJ2deY"}],"key":"tqUxsu6y1k"}],"key":"EmCNqNlI2m"},{"type":"block","kind":"notebook-content","data":{"user_expressions":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Getting the OpenAltimetry info into python","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"TjRT9V7JEB"}],"identifier":"getting-the-openaltimetry-info-into-python","label":"Getting the OpenAltimetry info into python","html_id":"getting-the-openaltimetry-info-into-python","implicit":true,"key":"hiMGDa0wqv"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"All we need to do is to paste the API URL that we copied from the webpage into a string.\nWe also need to specify which beam we would like to look at. The ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"VVZwjSIbDN"},{"type":"strong","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"GT1R","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"SKznjoEhHB"}],"key":"Fac3In05rF"},{"type":"text","value":" ground track looks funky, so let’s look at that one!","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"ANFMwsQdFx"}],"key":"HbYmdYjZo8"}],"key":"Ko23F5GGr7"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"# paste the API URL from OpenAltimetry below, and specify the beam you are interested in\noa_api_url = 'https://openaltimetry.earthdatacloud.nasa.gov/data/icesat2/elevation?minx=-25.4835556641541&miny=76.44321462688005&maxx=-21.976284749133928&maxy=77.33633089376721&zoom_level=5&beams=1,2,3,4,5,6&tracks=1236&date=2024-09-06&product=ATL06&mapType=arctic'\ngtx = 'gt1r'","visibility":"show","key":"TnT2XqR3mu"},{"type":"output","id":"3tl-kc6KTSzJBlhOhD1ea","data":[],"visibility":"show","key":"ci5bYpWaeL"}],"visibility":"show","key":"nepkDibR5W"},{"type":"block","kind":"notebook-content","data":{"user_expressions":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"We can now initialize a ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"zwyc5BG4LR"},{"type":"inlineCode","value":"dataCollector","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ljHyQxxzoZ"},{"type":"text","value":" object, using the copy-pasted OpenAltimetry API URL, and the beam we would like to look at. ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"A7o4Hh5DcK"},{"type":"break","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ygnFKQXo68"},{"type":"emphasis","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"(Again, I defined this class in ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"IcWAByLH2i"},{"type":"inlineCode","value":"utils/oa.py","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"HtMjndfhtY"},{"type":"text","value":" to do some work for us in the background.)","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"av6zy3rfvA"}],"key":"KEifOYUHxK"}],"key":"Cxc5tjqsCW"}],"key":"QfKZ0fGVcB"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"is2data = dataCollector(oaurl=oa_api_url, beam=gtx, verbose=True)","visibility":"show","key":"EZ04kR6DOc"},{"type":"output","id":"Ls10QZ2TA6yMgTPmX8f11","data":[],"visibility":"show","key":"sg1yHXjmCA"}],"visibility":"show","key":"roStlv6TZ0"},{"type":"block","kind":"notebook-content","data":{"user_expressions":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Alternatively, we could use a date, track number, beam, and lat/lon bounding box as input to the ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"LwKWt6evV7"},{"type":"inlineCode","value":"dataCollector","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"j7rPrCAvV7"},{"type":"text","value":".","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"rdLA4voBcy"}],"key":"ucyl12ThLb"}],"key":"O0znUPYj4o"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"date = '2021-08-22'\nrgt = 909\nbeam = 'gt1r'\nlatlims = [77.5326, 77.5722]\nlonlims = [-23.9891, -23.9503]\nis2data = dataCollector(date=date, latlims=latlims, lonlims=lonlims, track=rgt, beam=beam, verbose=True)","visibility":"show","key":"JpDh6XfUc9"},{"type":"output","id":"j2CuJQV1Qp966RhkuBkQD","data":[],"visibility":"show","key":"NvJHQ5By6H"}],"visibility":"show","key":"LMG25rnKB9"},{"type":"block","kind":"notebook-content","data":{"user_expressions":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Note that this also constructs the API url for us.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"PCLWq96rc6"}],"key":"v1YqcZZezb"}],"key":"R8IJgHhv3u"},{"type":"block","kind":"notebook-content","data":{"user_expressions":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Requesting the data from the OpenAltimetry API","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ZxrQYI0zcn"}],"identifier":"requesting-the-data-from-the-openaltimetry-api","label":"Requesting the data from the OpenAltimetry API","html_id":"requesting-the-data-from-the-openaltimetry-api","implicit":true,"key":"fcNMC8d5jX"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Here we use the ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"CeXM3BLPzz"},{"type":"inlineCode","value":"requestData()","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"AaHMjmjxxw"},{"type":"text","value":" function of the ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"a420rceJpo"},{"type":"inlineCode","value":"dataCollector","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"atH0ZNER9w"},{"type":"text","value":" class, which is defined in ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"PS7hUjRkhT"},{"type":"inlineCode","value":"utils/oa.py","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"VsVAsIJOVh"},{"type":"text","value":". It downloads all data products that are available on OpenAltimetry based on the inputs with which we initialized our ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"pIj2XkZ79f"},{"type":"inlineCode","value":"dataCollector","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"En0PtnYquB"},{"type":"text","value":", and writes them to pandas dataframes.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"eyQIGp4h1N"}],"key":"RUR5HCquAk"}],"key":"GhxuKUs5X0"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"is2data.requestData(verbose=True)","visibility":"show","key":"G1ir60TY0d"},{"type":"output","id":"5h0rFWzv8ZqBDOmWwJplq","data":[],"visibility":"show","key":"MUNIOoyEwx"}],"visibility":"show","key":"kZPpnk45Sd"},{"type":"block","kind":"notebook-content","data":{"user_expressions":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"The data are now stored as data frames in our ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"K8uS72MQyM"},{"type":"inlineCode","value":"dataCollector","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Eiyf1sxJJN"},{"type":"text","value":" object. To verify this, we can run the cell below.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ihSajiaeTH"}],"key":"y1pbSn3KA5"}],"key":"njp9BJFwhk"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"vars(is2data)","visibility":"show","key":"PHwMIO6LiI"},{"type":"output","id":"OLGcm82vg_tbLI3eF2SG8","data":[],"visibility":"show","key":"XrFNkcRyGE"}],"visibility":"show","key":"pUiJnH71rj"},{"type":"block","kind":"notebook-content","data":{"user_expressions":[]},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Plotting the ICESat-2 data","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"wmkl3DA53W"}],"identifier":"plotting-the-icesat-2-data","label":"Plotting the ICESat-2 data","html_id":"plotting-the-icesat-2-data","implicit":true,"key":"FZoJPWOJFh"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Now let’s plot this data. Here, we are just creating an empty figure ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"qLP8zTNo9I"},{"type":"inlineCode","value":"fig","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"myX7qkoUAn"},{"type":"text","value":" with axes ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"XjnUJY73rE"},{"type":"inlineCode","value":"ax","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"XtEa92XGcI"},{"type":"text","value":".","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"zq6PViNshk"}],"key":"w1S27cc7TZ"}],"key":"TNNLAdyfNf"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"# create the figure and axis\nfig, ax = plt.subplots(figsize=[9,5])\n\n# plot the data products\natl06, = ax.plot(is2data.atl06.lat, is2data.atl06.h, c='C0', linestyle='-', label='ATL06')\natl08, = ax.plot(is2data.atl08.lat, is2data.atl08.h, c='C2', linestyle=':', label='ATL08')\nif np.sum(~np.isnan(is2data.atl08.canopy))>0:\n    atl08canopy = ax.scatter(is2data.atl08.lat, is2data.atl08.h+is2data.atl08.canopy, s=2, c='C2', label='ATL08 canopy')\n\n# add labels, title and legend\nax.set_xlabel('latitude')\nax.set_ylabel('elevation in meters')\nax.set_title('Some ICESat-2 data I found on OpenAltimetry!')\nax.legend(loc='upper left')\n\n# add some text to provide info on what is plotted\ninfo = 'ICESat-2 track {track:d}-{beam:s} on {date:s}\\n({lon:.4f}E, {lat:.4f}N)'.format(track=is2data.track, \n                                                                                        beam=is2data.beam.upper(), \n                                                                                        date=is2data.date, \n                                                                                        lon=np.mean(is2data.lonlims), \n                                                                                        lat=np.mean(is2data.latlims))\ninfotext = ax.text(0.01, -0.08, info,\n                   horizontalalignment='left', \n                   verticalalignment='top', \n                   transform=ax.transAxes,\n                   fontsize=7,\n                   bbox=dict(edgecolor=None, facecolor='white', alpha=0.9, linewidth=0))\n\n# set the axis limits\nax.set_xlim((is2data.atl03.lat.min(), is2data.atl03.lat.max()))\nax.set_ylim((741, 818));","visibility":"show","key":"LqGiMfxaoy"},{"type":"output","id":"eZLdjZhFXE8qvD3gUPb7U","data":[],"visibility":"show","key":"GSQhsiNL2V"}],"visibility":"show","key":"NkuMdF1VBV"},{"type":"block","kind":"notebook-content","data":{"user_expressions":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Let’s add the ATL03 photons to better understand what might be going on here.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"gHbh12SJvr"}],"key":"bdITSXIWEm"}],"key":"sbU2sZGVuN"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"atl03 = ax.scatter(is2data.atl03.lat, is2data.atl03.h, s=1, color='black', label='ATL03', zorder=-1)\nax.legend(loc='upper left')\nfig.tight_layout()\ndisplay(fig)","visibility":"show","key":"hXQgqsMm1h"},{"type":"output","id":"3kGjNR_ezjPZnSn5CT70w","data":[],"visibility":"show","key":"BKVFUug4qE"}],"visibility":"show","key":"HxQ5QKv0cF"},{"type":"block","kind":"notebook-content","data":{"user_expressions":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Saving the plot to a file","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"JCGroLGItB"}],"identifier":"saving-the-plot-to-a-file","label":"Saving the plot to a file","html_id":"saving-the-plot-to-a-file","implicit":true,"key":"avKvpJlFfe"}],"key":"fZhUzrME46"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"fig.savefig('my-plot.jpg', dpi=300)","visibility":"show","key":"GPnu6aa2OA"},{"type":"output","id":"JxRLcsSm37u0RJdpNxp8A","data":[],"visibility":"show","key":"jHIMX5lx8j"}],"visibility":"show","key":"PKos4ZB1PQ"},{"type":"block","kind":"notebook-content","data":{"user_expressions":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"To make plots easier to produce, the ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"uJR2QIy3BE"},{"type":"inlineCode","value":"dataCollector","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ygRu0O5Tjw"},{"type":"text","value":" class also has a method to plot the data that we downloaded.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"lBBJvt1lRQ"}],"key":"I4WcoCwSpY"}],"key":"YYGWcmtArL"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"fig = is2data.plotData();\nfig","visibility":"show","key":"FLGeAg7Whr"},{"type":"output","id":"vYV-jrqB6wigxLusrs1ib","data":[],"visibility":"show","key":"bbdWjP2FBP"}],"visibility":"show","key":"dLx1T72JOs"},{"type":"block","kind":"notebook-content","data":{"tags":[],"user_expressions":[]},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Ground Track Stats","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"hob3xNWsr2"}],"identifier":"ground-track-stats","label":"Ground Track Stats","html_id":"ground-track-stats","implicit":true,"key":"hFLGADTUsr"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"So far we have only seen the data in elevation vs. latitude space. It’s probably good to know what the scale on the x-axis is here in units that we’re familiar with.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"rx3TftxCG7"}],"key":"ty5jmbVjLt"}],"visibility":"show","key":"jnJMp6dTRu"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"def dist_latlon2meters(lat1, lon1, lat2, lon2):\n    # returns the distance between two coordinate points - (lon1, lat1) and (lon2, lat2) along the earth's surface in meters.\n    R = 6371000\n    def deg2rad(deg):\n        return deg * (np.pi/180)\n    dlat = deg2rad(lat2-lat1)\n    dlon = deg2rad(lon2-lon1)\n    a = np.sin(dlat/2) * np.sin(dlat/2) + np.cos(deg2rad(lat1)) * np.cos(deg2rad(lat2)) * np.sin(dlon/2) * np.sin(dlon/2)\n    c = 2 * np.arctan2(np.sqrt(a), np.sqrt(1-a))\n    return R * c\n\nlat1, lat2 = is2data.atl08.lat[0], is2data.atl08.lat.iloc[-1]\nlon1, lon2 = is2data.atl08.lon[0], is2data.atl08.lon.iloc[-1]\n\nground_track_length = dist_latlon2meters(lat1, lon1, lat2, lon2)\nprint('The ground track is about %.1f kilometers long.' % (ground_track_length/1e3))","visibility":"show","key":"cuBUwx54II"},{"type":"output","id":"Oq_hVbEqc-9zKKd2vSfwD","data":[],"visibility":"show","key":"qP1VOCBDDY"}],"visibility":"show","key":"nVED3i0Ktp"},{"type":"block","kind":"notebook-content","data":{"user_expressions":[]},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Google Earth Engine","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"IqeAp4hbQV"}],"identifier":"google-earth-engine","label":"Google Earth Engine","html_id":"google-earth-engine","implicit":true,"key":"KOHw9EmuMl"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Google Earth Engine (GEE) has a large ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"uLjiRcBs5S"},{"type":"link","url":"https://developers.google.com/earth-engine/datasets","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"catalog","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"s13d57rkcJ"}],"urlSource":"https://developers.google.com/earth-engine/datasets","key":"JeP4YaTY1i"},{"type":"text","value":" of geospatial raster data, which is ready for analysis in the cloud. It also comes with an online JavaScript code editor.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"bbcDVlhR77"},{"type":"break","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"tG83c3qBq6"},{"type":"image","url":"/icesat2-cookbook/_preview/7/build/697fd195613a884d70f9711b06c8e49f.png","alt":"gif showing how to get to the data in OpenAltimetry","width":"400px","key":"wchS5UKsVB","urlSource":"https://raw.githubusercontent.com/fliphilipp/images/main/gee_codeeditor.png"},{"type":"text","value":"\nBut since we all seem to be using python, it would be nice to have these capabilities available in our Jupyter comfort zone...","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"FJG2bdpMR1"}],"key":"yhQS16TR7M"},{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Thankfully, there is a ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"JbeXGr8c1w"},{"type":"link","url":"https://developers.google.com/earth-engine/tutorials/community/intro-to-python-api","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"python API for GEE","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"wV7DF9yHOC"}],"urlSource":"https://developers.google.com/earth-engine/tutorials/community/intro-to-python-api","key":"HRZxAEP1Hk"},{"type":"text","value":", which we have imported using ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"v5YPYCNZnZ"},{"type":"inlineCode","value":"import ee","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"HNH3VYKNuR"},{"type":"text","value":" earlier. It doesn’t come with an interactive map, but the python package ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"YhHpPmFFd4"},{"type":"link","url":"https://geemap.org/","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"geemap","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"q6kqaYXGUk"}],"urlSource":"https://geemap.org/","key":"EpmPkqhceJ"},{"type":"text","value":" has us covered!","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"wAmAlItai0"}],"key":"sO7OJHwqhC"}],"key":"w1M84cM2Qk"},{"type":"block","kind":"notebook-content","data":{"user_expressions":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Show a ground track on a map","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"znR9CEZeof"}],"identifier":"show-a-ground-track-on-a-map","label":"Show a ground track on a map","html_id":"show-a-ground-track-on-a-map","implicit":true,"key":"tajPsIh8pU"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"We can start working on our map by calling ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"bKVyrh8GrG"},{"type":"inlineCode","value":"geemap.Map()","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"egmwnPe9yO"},{"type":"text","value":". This just gives us a world map with a standard basemap.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"w1tZbxywqM"}],"key":"MZceeZRzmh"}],"key":"GnKCVtvADw"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"from ipywidgets import Layout\nMap = geemap.Map(layout=Layout(width='70%', max_height='450px'))\nMap","visibility":"show","key":"oW7LggFuLs"},{"type":"output","id":"Pd9E2US0mtOAUqwI_iI3-","data":[],"visibility":"show","key":"mCRXYo5GMH"}],"visibility":"show","key":"YsK8DpXHy4"},{"type":"block","kind":"notebook-content","data":{"user_expressions":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Now we need to add our ICESat-2 gound track to that map. Let’s use the lon/lat coordinates of the ATL08 data product for this.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"HO7brOwANt"},{"type":"break","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"HatDlfhGtc"},{"type":"text","value":"We also need to specify which ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"RvBxVt4RGC"},{"type":"strong","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Coordinate Reference System (CRS)","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"bcvdKvA44z"}],"key":"YcjJuE9paG"},{"type":"text","value":" our data is in. The longitude/latitude system that we are all quite familiar with is referenced by ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"a295DtfmjA"},{"type":"link","url":"https://epsg.io/4326","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"inlineCode","value":"EPSG:4326","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"mjTC4wWlbE"}],"urlSource":"https://epsg.io/4326","key":"te0OCmbMba"},{"type":"text","value":". To add the ground track to the map we need to turn it into an ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"SqXtC8DAPF"},{"type":"link","url":"https://developers.google.com/earth-engine/guides/feature_collections","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Earth Engine “Feature Collection”","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"zjxT7wIF6r"}],"urlSource":"https://developers.google.com/earth-engine/guides/feature_collections","key":"dsliWw55Tm"},{"type":"text","value":".","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"PvkMceoMCF"}],"key":"zr7ztp6bMz"}],"key":"aNiTkdhcmC"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"ground_track_coordinates = list(zip(is2data.atl08.lon, is2data.atl08.lat))\nground_track_projection = 'EPSG:4326' # <-- this specifies that our data longitude/latitude in degrees [https://epsg.io/4326]\ngtx_feature = ee.FeatureCollection(ee.Geometry.LineString(coords=ground_track_coordinates, \n                                      proj=ground_track_projection, \n                                      geodesic=True))\ngtx_feature","visibility":"show","key":"ikOxVPEc8y"},{"type":"output","id":"QWVgQuMTwGWCksDaKpMme","data":[],"visibility":"show","key":"wbxEsS9p8m"}],"visibility":"show","key":"xZt6TTWunJ"},{"type":"block","kind":"notebook-content","data":{"user_expressions":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Now that we have it in the right format, we can add it as a ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"tt1NTEPlvQ"},{"type":"strong","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"layer","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"CVgBdbkkM8"}],"key":"CRi6WBn7lY"},{"type":"text","value":" to the map.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"qXbWeaJV0N"}],"key":"SzHOlUqHzP"}],"key":"unvo5YxPRO"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"Map.addLayer(gtx_feature, {'color': 'red'}, 'ground track')","visibility":"show","key":"eCqGQHRJgK"},{"type":"output","id":"b5aeUV12-Ot3NtIkBdAiF","data":[],"visibility":"show","key":"O3cS87FitA"}],"visibility":"show","key":"sMxiet2n0y"},{"type":"block","kind":"notebook-content","data":{"user_expressions":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"According to the cell above this should be a red line. But we still can’t see it, because we first need to tell the map where to look for it.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"RvUdNLpNbf"},{"type":"break","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Kky2OcIrFl"},{"type":"text","value":"Let’s calculate the center longitude and latitude, and center the map on it.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"gKb0OnA0N4"}],"key":"ZuWKXKvU0R"}],"key":"LV5FBnqwQh"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"center_lon = (lon1 + lon2) / 2\ncenter_lat = (lat1 + lat2) / 2\nMap.setCenter(center_lon, center_lat, zoom=7);","visibility":"show","key":"qvO6hJX4OL"},{"type":"output","id":"o3BJ3cJ5Wvo2nUm7bBxC2","data":[],"visibility":"show","key":"Acme4yHzrs"}],"visibility":"show","key":"cVayR5pHsA"},{"type":"block","kind":"notebook-content","data":{"user_expressions":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"So we actually couldn’t see it because it was in Greenland.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"lakQjDBVCQ"},{"type":"break","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"p2JZx2lfV3"},{"type":"text","value":"Unfortunately the basemap here doesn’t give us much more information. Let’s add a satellite imagery basemap.\nThis is a good time to look at the layer control on the top right.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"i7B059R17K"}],"key":"syhHW8Mzmb"}],"key":"FouqxmSkf4"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"Map.add_basemap('SATELLITE') # <-- this adds a layer called 'Google Satellite'\nMap.setCenter(center_lon, center_lat, zoom=7);\nMap.addLayer(gtx_feature,{'color': 'red'},'ground track')","visibility":"show","key":"se6NDsAycA"},{"type":"output","id":"sOq-L7ZZS3kg-en2GNrjY","data":[],"visibility":"show","key":"kIxp3JAJPu"}],"visibility":"show","key":"F2en2JPy6C"},{"type":"block","kind":"notebook-content","data":{"user_expressions":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"...looks like this basemap still doesn’t give us any more clues about the nature of this weird ICESat-2 data. Let’s dig deeper.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"FozJbyIXtR"}],"key":"yg1xSyeaYe"}],"key":"Zk3quf8WJN"},{"type":"block","kind":"notebook-content","data":{"user_expressions":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Query for Sentinel-2 images","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"rRRK4zOkL6"}],"identifier":"query-for-sentinel-2-images","label":"Query for Sentinel-2 images","html_id":"query-for-sentinel-2-images","implicit":true,"key":"UXE56qEpmB"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Both of these Sentinel-2 satellites take images of most places on our planet at least every week or so. Maybe these images can tell us what was happening here around the same time that ICESat-2 acquired our data?","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"ztnX801i9E"}],"key":"StOuzQgHKE"},{"type":"paragraph","position":{"start":{"line":4,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"The imagery scenes live in image collections on Google Earth Engine.","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"SohNepJNDa"},{"type":"break","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"yP8b49M9ME"},{"type":"text","value":"You can find all collections here: ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"WQo7WriIUF"},{"type":"link","url":"https://developers.google.com/earth-engine/datasets/catalog/","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"https://​developers​.google​.com​/earth​-engine​/datasets​/catalog/","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"JDogDkMmV7"}],"urlSource":"https://developers.google.com/earth-engine/datasets/catalog/","key":"c4ndwXjzCT"}],"key":"ah3q8WrgFw"}],"key":"YJQZl9thQM"},{"type":"block","kind":"notebook-content","data":{"user_expressions":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"The above link tells us we can find some images under ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"zxmabXkInc"},{"type":"inlineCode","value":"'COPERNICUS/S2_SR_HARMONIZED'","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ag2fkkVwfy"},{"type":"text","value":".","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ROXI4AUMPE"}],"key":"W6t7E8RCP3"}],"key":"DNWXzR7RxL"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"collection_name1 = 'COPERNICUS/S2_SR_HARMONIZED'  # Landsat 8 earth engine collection \n# https://developers.google.com/earth-engine/datasets/catalog/LANDSAT_LC08_C01_T2","visibility":"show","key":"bTHoRRlC8b"},{"type":"output","id":"41uO2zOewwWeInbHc_-Qe","data":[],"visibility":"show","key":"tdNAwGhoel"}],"visibility":"show","key":"u2lJ9d35jw"},{"type":"block","kind":"notebook-content","data":{"user_expressions":[]},"children":[{"type":"heading","depth":4,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Access an image collection","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"dnZiWzg4vr"}],"identifier":"access-an-image-collection","label":"Access an image collection","html_id":"access-an-image-collection","implicit":true,"key":"OXtWlwNYWB"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"To access the collection, we call ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"GTAQ7bPBKh"},{"type":"inlineCode","value":"ee.ImageCollection","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"IaJSEo4rr0"},{"type":"text","value":":","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"njEBhapGvJ"}],"key":"ExhTH4JgGJ"}],"key":"mh3G23FphB"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"collection = ee.ImageCollection(collection_name1)\ncollection","visibility":"show","key":"aIjXZC7s7i"},{"type":"output","id":"Hb9v9vP0YBemy_tNxruYp","data":[],"visibility":"show","key":"L5q117KipJ"}],"visibility":"show","key":"DnbM0yKfSC"},{"type":"block","kind":"notebook-content","data":{"user_expressions":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Can we find out how many images there are in total?","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"r7Qaq3Cx5c"}],"key":"Z3s95psrKO"}],"key":"dVgLfeckvq"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"number_of_scenes = collection.size()\nprint(number_of_scenes)","visibility":"show","key":"UpDG9CfUWL"},{"type":"output","id":"rnsf0HoS_ZYFtG-Fu_SzJ","data":[],"visibility":"show","key":"hajKgjl4Gj"}],"visibility":"show","key":"qbKGucHrU7"},{"type":"block","kind":"notebook-content","data":{"user_expressions":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"strong","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Actually, asking for the size of the collection does not do anything!","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"dVrukfNUzi"}],"key":"lqCa46GsUp"},{"type":"text","value":" 🤔","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"QJBlntIbti"}],"key":"vudcecZzW6"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"It just tells Earth Engine on the server-side that this variable refers to the size of the collection, which we may need later to do some analysis on the server. As long as this number is not needed, Earth Engine will not go through the trouble actually computing it.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"GknARltafJ"}],"key":"IpsntZL0kG"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"To force Earth Engine to compute and get any information on the client side (our local machine / Cryocloud), we need to call ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"jBtnCiXlYM"},{"type":"inlineCode","value":".getInfo()","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"Yvn4QVR685"},{"type":"text","value":". In this case that would be ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"YPooNxcRwy"},{"type":"inlineCode","value":"number_of_scenes = collection.size().getInfo()","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"ptP5eRNO0V"},{"type":"text","value":".","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"q1rBvnWeWS"}],"key":"itt1sm4tD8"},{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"emphasis","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Because this command would ask Earth Engine to count every single Sentinel-2 file that exists, this command would take a really long time to execute. I will avoid this here and just give you the answer from when I wrote this tutorial.","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"AROm6BolX2"}],"key":"I2XLJ6h7A2"}],"key":"exv3hkaOGQ"}],"key":"aSNAalHFk4"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"# number_of_scenes = collection.size().getInfo()\nnumber_of_scenes = 19323842\nprint('There are %i number of scenes in the image collection' % number_of_scenes)","visibility":"show","key":"qRgA6UODFt"},{"type":"output","id":"5QoaQPiIUbCDMeE4rCidp","data":[],"visibility":"show","key":"yCa4TFnlgh"}],"visibility":"show","key":"BxnxjVdkjy"},{"type":"block","kind":"notebook-content","data":{"user_expressions":[]},"children":[{"type":"heading","depth":4,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Filter an image collection by location and time","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"g6g8c9EVRj"}],"identifier":"filter-an-image-collection-by-location-and-time","label":"Filter an image collection by location and time","html_id":"filter-an-image-collection-by-location-and-time","implicit":true,"key":"M6PEDbnZAx"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Who wants to look at almost 20 million pictures? I don’t. So let’s try to narrow it down.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"wLF2swihpP"},{"type":"break","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"OvhA7v8qlo"},{"type":"text","value":"Let’s start with only images that overlap with the center of our ground track.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"rTq9PBpOHP"}],"key":"mBHe1YzzbP"}],"key":"VyCu0yxocJ"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"# the point of interest (center of the track) as an Earth Engine Geometry\npoint_of_interest = ee.Geometry.Point(center_lon, center_lat)","visibility":"show","key":"EqCsUBdiFK"},{"type":"output","id":"V3qEB7PXkGxa51LWizB6_","data":[],"visibility":"show","key":"QEEFQTvtpX"}],"visibility":"show","key":"n0GhuufMZd"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"collection = collection.filterBounds(point_of_interest)","visibility":"show","key":"yroXPPozWb"},{"type":"output","id":"whIm1uglqbuPhmCfdFzBC","data":[],"visibility":"show","key":"J3eWMlCBVF"}],"visibility":"show","key":"deBgTSirU3"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"print('There are {number:d} images in the spatially filtered collection.'.format(number=collection.size().getInfo()))","visibility":"show","key":"bZmhxU5Xb1"},{"type":"output","id":"g6G0nrEz72kkFFZKLSV7W","data":[],"visibility":"show","key":"sCW4skeHOg"}],"visibility":"show","key":"vfQJa623oo"},{"type":"block","kind":"notebook-content","data":{"user_expressions":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Much better! Now let’s only look at images that were taken soon before or after ICESat-2 passed over this spot.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"OAlaHUmr7E"}],"key":"k3qNGaN08e"}],"key":"UjvFcUUKzF"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"days_buffer_imagery = 6","visibility":"show","key":"k4vOoPdjpp"},{"type":"output","id":"7hlq2HUe_vlTx50QcyyjB","data":[],"visibility":"show","key":"qzvpyA7CSh"}],"visibility":"show","key":"aRq24tIxyX"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"dateformat = '%Y-%m-%d'\ndatetime_requested = datetime.strptime(is2data.date, dateformat)\nsearch_start = (datetime_requested - timedelta(days=days_buffer_imagery)).strftime(dateformat)\nsearch_end = (datetime_requested + timedelta(days=days_buffer_imagery)).strftime(dateformat)\nprint('Search for imagery from {start:s} to {end:s}.'.format(start=search_start, end=search_end))","visibility":"show","key":"p2xFoOxMpR"},{"type":"output","id":"maoTzzZD7-tAFd9wOzgZu","data":[],"visibility":"show","key":"BGSFmmlHem"}],"visibility":"show","key":"sXMiQuGnmG"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"collection = collection.filterDate(search_start, search_end)\nprint('There are {number:d} images in the spatially filtered collection.'.format(number=collection.size().getInfo()))","visibility":"show","key":"ZWbZUmQF4O"},{"type":"output","id":"64cdidCEB5X1ivBjRGqXv","data":[],"visibility":"show","key":"WJYIPJQg2Z"}],"visibility":"show","key":"k420aoQ3LR"},{"type":"block","kind":"notebook-content","data":{"user_expressions":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"We can also sort the collection by date (","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"lMbaPWdEh0"},{"type":"inlineCode","value":"'system:time_start'","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"gVcwCmBy0t"},{"type":"text","value":"), to order the images by acquisition time.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"TaWaQg5XVd"}],"key":"eZT7Ug9JpF"}],"key":"UJFHgX40f3"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"collection = collection.sort('system:time_start') ","visibility":"show","key":"GKlk5AFtCG"},{"type":"output","id":"2CFSiV7u0NkjdVmdqAJRB","data":[],"visibility":"show","key":"he74Jjmf2s"}],"visibility":"show","key":"GJzRzg9pJL"},{"type":"block","kind":"notebook-content","data":{"user_expressions":[]},"children":[{"type":"heading","depth":4,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Get image collection info","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"XolESgOMlw"}],"identifier":"get-image-collection-info","label":"Get image collection info","html_id":"get-image-collection-info","implicit":true,"key":"Xiy9MSnNK3"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Again, we need to use ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"jEQVa5xEmC"},{"type":"inlineCode","value":".getInfo()","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"Wxd09v8SZP"},{"type":"text","value":" to actually see any information on our end. This is a python dictionary.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"yraoJAggyy"}],"key":"QyWZOjPp4Y"}],"key":"Aa8rOqNEP3"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"info = collection.getInfo()\ntype(info)","visibility":"show","key":"Yr8071N7JV"},{"type":"output","id":"g62lnHV2aTEwmbRkCEjj-","data":[],"visibility":"show","key":"oNOWoA8AzJ"}],"visibility":"show","key":"BEcHUzJ0tV"},{"type":"block","kind":"notebook-content","data":{"user_expressions":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Let’s see what’s inside!","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"geM9T3YlNN"}],"key":"b8FcOusA6A"}],"key":"zEP14tanuW"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"info.keys()","visibility":"show","key":"pCCQbiOqE3"},{"type":"output","id":"L-w5suoVSuWHS7a-ostIN","data":[],"visibility":"show","key":"iN1HlStSYI"}],"visibility":"show","key":"zuS7lqYoi3"},{"type":"block","kind":"notebook-content","data":{"user_expressions":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"inlineCode","value":"'features'","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"hv96c24Fqt"},{"type":"text","value":" sounds like it could hold information about the images we are trying to find...","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Y14MnF8qvi"}],"key":"F6SNIMizNY"}],"key":"QUV1kVCqlw"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"len(info['features'])","visibility":"show","key":"gkzW1ycaxb"},{"type":"output","id":"uhPViBHy5WnHEdhOLojxl","data":[],"visibility":"show","key":"a0H5JCzaEc"}],"visibility":"show","key":"FByd748tae"},{"type":"block","kind":"notebook-content","data":{"user_expressions":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"A list of 34 things! Those are probably the 34 images in the collection. Let’s pick the first one and dig deeper!","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Oq69Jv3es9"}],"key":"Q90wmWQLm5"}],"key":"UaWyOWKDPm"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"feature_number = 0\ninfo['features'][0].keys()","visibility":"show","key":"QFLDT6IL7g"},{"type":"output","id":"zkQqZtRekpQwRfdju97a_","data":[],"visibility":"show","key":"nfO1hn2HCe"}],"visibility":"show","key":"DYfEFuAKpn"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"info['features'][feature_number]['id']","visibility":"show","key":"IKhTtRfn3j"},{"type":"output","id":"CfdGqoOCm_7dNe7teOoWy","data":[],"visibility":"show","key":"LI9LMVK6jG"}],"visibility":"show","key":"vpLisxC8eL"},{"type":"block","kind":"notebook-content","data":{"user_expressions":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Looks like we found a reference to a Sentinel-2 image! Let’s look at the ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"uDn2QFe5EG"},{"type":"inlineCode","value":"'bands'","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"s0PlYtAZ5q"},{"type":"text","value":".","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ussQtkak2k"}],"key":"lRiNwnAu0l"}],"key":"ixgrkr6e0u"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"for band in info['features'][feature_number]['bands']:\n    print(band['id'], end=', ')","visibility":"show","key":"kpu5UJPufq"},{"type":"output","id":"RGyIh7f3gt7gzjDxWUHlY","data":[],"visibility":"show","key":"I4dq89TV9i"}],"visibility":"show","key":"QwINU9lyOH"},{"type":"block","kind":"notebook-content","data":{"user_expressions":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"inlineCode","value":"'properties'","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"KXvoCI8y0f"},{"type":"text","value":" could be useful too!","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"qzULnDT1As"}],"key":"fFLbkYk0E7"}],"key":"YG51R55W1q"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"info['features'][0]['properties'].keys()","visibility":"show","key":"DZ7GtkUBy2"},{"type":"output","id":"2OCiNg5MdKnKi6ZHtaW57","data":[],"visibility":"show","key":"pCwv0ZWqPT"}],"visibility":"show","key":"sV1op1cMfP"},{"type":"block","kind":"notebook-content","data":{"user_expressions":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"That’s a lot going on right there! But ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"qNss1uxgQi"},{"type":"inlineCode","value":"'GRANULE_ID'","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"vCSZx8Etzl"},{"type":"text","value":" is probably useful. Let’s go through all our features and print the product id.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"zvDBSx2Rzc"}],"key":"col7Qbvk5k"}],"key":"Hw1a0aQDck"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"for feature in info['features']:\n    print(feature['properties']['GRANULE_ID'])","visibility":"show","key":"jkFFNyZKVH"},{"type":"output","id":"4NLXPQP-OyAAwvLZok2_K","data":[],"visibility":"show","key":"ren8ibYW4Q"}],"visibility":"show","key":"PmjHFJeXq2"},{"type":"block","kind":"notebook-content","data":{"user_expressions":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Add a Sentinel-2 image to the map","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"GUjDAv5Ams"}],"identifier":"add-a-sentinel-2-image-to-the-map","label":"Add a Sentinel-2 image to the map","html_id":"add-a-sentinel-2-image-to-the-map","implicit":true,"key":"aV6d70yNAO"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"The visible bands in Sentinel-2 are ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"NQFHsmlRpB"},{"type":"inlineCode","value":"'B2'","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"XqUMSrUEqk"},{"type":"text","value":":blue, ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"vX7e0Xp1Oq"},{"type":"inlineCode","value":"'B3'","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"yOJbBg2CYB"},{"type":"text","value":":green, ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"BqL22ijYcg"},{"type":"inlineCode","value":"'B4'","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"ULH1kIEjGn"},{"type":"text","value":":red.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"PZAx1QH97e"},{"type":"break","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"cSxe0HSHZR"},{"type":"text","value":"So to show a “true color” RGB composite image on the map, we need to select these bands in the R-G-B order:","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"oUpTBcKAA8"}],"key":"B1OhjKtUJT"}],"key":"OdgnhxM9LI"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"myImage = collection.first()\nmyImage_RGB = myImage.select('B4', 'B3', 'B2')\nvis_params = {'min': 0.0, 'max': 10000, 'opacity': 1.0, 'gamma': 1.5}\nMap.addLayer(myImage_RGB, vis_params, name='my image')\nMap.addLayer(gtx_feature,{'color': 'red'},'ground track')\nMap","visibility":"show","key":"TJVRERgqzL"},{"type":"output","id":"l7zumOnzLxPvZtoPfL9Zu","data":[],"visibility":"show","key":"uQMTDt44B6"}],"visibility":"show","key":"JlRDjgAqxS"},{"type":"block","kind":"notebook-content","data":{"user_expressions":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"This seems to have worked. But there’s clouds everywhere.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"kddd40HepA"}],"key":"t2Vd5J09FJ"}],"key":"oCYy6usrAI"},{"type":"block","kind":"notebook-content","data":{"user_expressions":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Calculate the along-track cloud probability","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"yet0rlmc2A"}],"identifier":"calculate-the-along-track-cloud-probability","label":"Calculate the along-track cloud probability","html_id":"calculate-the-along-track-cloud-probability","implicit":true,"key":"plkpl8gHs5"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"We need a better approach to get anywhere here. To do this, we use not only the ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"jr7usCjeUe"},{"type":"link","url":"https://developers.google.com/earth-engine/datasets/catalog/COPERNICUS_S2_SR_HARMONIZED","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Sentinel-2 Surface Reflectance image collection","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"q7uP67Rn0N"}],"urlSource":"https://developers.google.com/earth-engine/datasets/catalog/COPERNICUS_S2_SR_HARMONIZED","key":"KVCbH1i9Z8"},{"type":"text","value":", but also merge it with the ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"aYcMih8yQW"},{"type":"link","url":"https://developers.google.com/earth-engine/datasets/catalog/COPERNICUS_S2_CLOUD_PROBABILITY","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Sentinel-2 cloud probability collection","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"I5SvaCVSwn"}],"urlSource":"https://developers.google.com/earth-engine/datasets/catalog/COPERNICUS_S2_CLOUD_PROBABILITY","key":"vSqPqRuzca"},{"type":"text","value":", which can be accessed under ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"HSJVlXBKW3"},{"type":"inlineCode","value":"COPERNICUS/S2_CLOUD_PROBABILITY","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"vAaOnPYFRK"},{"type":"text","value":".","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"nwwtmakWoT"}],"key":"podam9A2ly"},{"type":"paragraph","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Let’s specify a function that adds the cloud probability band to each Sentinel-2 image and calcultes the mean cloud probability in the neighborhood of the ICESat-2 ground track, then map this function over our location/date filtered collection.","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"ryBUF2SqHL"}],"key":"n551BCxYrp"}],"key":"GiY4CIEps9"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"def get_sentinel2_cloud_collection(is2data, days_buffer=6, gt_buffer=100):\n    \n    # create the area of interest for cloud likelihood assessment\n    ground_track_coordinates = list(zip(is2data.atl08.lon, is2data.atl08.lat))\n    ground_track_projection = 'EPSG:4326' # our data is lon/lat in degrees [https://epsg.io/4326]\n    gtx_feature = ee.Geometry.LineString(coords=ground_track_coordinates,\n                                     proj=ground_track_projection,\n                                     geodesic=True)\n    area_of_interest = gtx_feature.buffer(gt_buffer)\n    \n    datetime_requested = datetime.strptime(is2data.date, '%Y-%m-%d')\n    start_date = (datetime_requested - timedelta(days=days_buffer)).strftime('%Y-%m-%dT%H:%M:%S')\n    end_date = (datetime_requested + timedelta(days=days_buffer)).strftime('%Y-%m-%dT%H:%M:%S')\n    print('Search for imagery from {start:s} to {end:s}.'.format(start=start_date, end=end_date))\n    \n    # Import and filter S2 SR HARMONIZED\n    s2_sr_collection = (ee.ImageCollection('COPERNICUS/S2_SR_HARMONIZED')\n        .filterBounds(area_of_interest)\n        .filterDate(start_date, end_date))\n\n    # Import and filter s2cloudless.\n    s2_cloudless_collection = (ee.ImageCollection('COPERNICUS/S2_CLOUD_PROBABILITY')\n        .filterBounds(area_of_interest)\n        .filterDate(start_date, end_date))\n\n    # Join the filtered s2cloudless collection to the SR collection by the 'system:index' property.\n    cloud_collection = ee.ImageCollection(ee.Join.saveFirst('s2cloudless').apply(**{\n        'primary': s2_sr_collection, 'secondary': s2_cloudless_collection,\n        'condition': ee.Filter.equals(**{'leftField': 'system:index','rightField': 'system:index'})}))\n\n    cloud_collection = cloud_collection.map(lambda img: img.addBands(ee.Image(img.get('s2cloudless')).select('probability')))\n    \n    def set_is2_cloudiness(img, aoi=area_of_interest):\n        cloudprob = img.select(['probability']).reduceRegion(reducer=ee.Reducer.mean(), \n                                                             geometry=aoi, \n                                                             bestEffort=True, \n                                                             maxPixels=1e6)\n        return img.set('ground_track_cloud_prob', cloudprob.get('probability'))\n    \n    return cloud_collection.map(set_is2_cloudiness)","visibility":"show","key":"XNiOMa3g5g"},{"type":"output","id":"WEkGdzsuM7WvW1uKQsMPL","data":[],"visibility":"show","key":"BPkaKKWC2C"}],"visibility":"show","key":"vyuTNXklsa"},{"type":"block","kind":"notebook-content","data":{"tags":[],"user_expressions":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Get this collection for our ICESat-2 data, and print all the granule IDs and associated cloudiness over the ground track.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"iWNXP9QlHN"}],"key":"V9WtCHfhWL"}],"visibility":"show","key":"Vf3FQQOiGe"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"collection = get_sentinel2_cloud_collection(is2data)\ninfo = collection.getInfo()\nfor feature in info['features']:\n    print('%s --> along-track cloud probability: %5.1f %%' % (feature['properties']['GRANULE_ID'],\n                                                              feature['properties']['ground_track_cloud_prob']))","visibility":"show","key":"LubHmq13oP"},{"type":"output","id":"1z5c0BUlp6DypEw2MeLwJ","data":[],"visibility":"show","key":"eR7KDUHOlf"}],"visibility":"show","key":"MhBw9LwVfe"},{"type":"block","kind":"notebook-content","data":{"tags":[],"user_expressions":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Filter cloudy images","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"wtiI2sKlla"}],"identifier":"filter-cloudy-images","label":"Filter cloudy images","html_id":"filter-cloudy-images","implicit":true,"key":"H2kxc8AMgF"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"We specify a certain cloud probability threshold, and then only keep the images that fall below it. Here we are choosing a quite aggressive value of maximum 5% cloud probability...","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"j3oiBNx4oS"}],"key":"MCmHyc5NDZ"}],"visibility":"show","key":"TTnLjpKNbU"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"# filter by maximum allowable cloud probability (in percent)\nMAX_CLOUD_PROB_ALONG_TRACK = 5\ncloudfree_collection = collection.filter(ee.Filter.lt('ground_track_cloud_prob', MAX_CLOUD_PROB_ALONG_TRACK))\nprint('There are %i cloud-free scenes.' % cloudfree_collection.size().getInfo())","visibility":"show","key":"typw6AEa9B"},{"type":"output","id":"_AiSCTdWM3oq4gT5ukoxs","data":[],"visibility":"show","key":"XhGSWeXIIB"}],"visibility":"show","key":"VTutOmFuoc"},{"type":"block","kind":"notebook-content","data":{"user_expressions":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Sort the collection by time difference from the ICESat-2 overpass","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"mBl5DqUhOt"}],"identifier":"sort-the-collection-by-time-difference-from-the-icesat-2-overpass","label":"Sort the collection by time difference from the ICESat-2 overpass","html_id":"sort-the-collection-by-time-difference-from-the-icesat-2-overpass","implicit":true,"key":"k7P7LGDZgD"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Using the image property ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"lCLOv2V6Iq"},{"type":"inlineCode","value":"'system:time_start'","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"JT8Q1bhfBm"},{"type":"text","value":" we can calculate the time difference from the ICESat-2 overpass and set it as a property. This allows us to sort the collection by it and to make sure that the first image in the collection is the closest-in-time to ICESat-2 image that is also cloud-free.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"o1ZSJrTSCE"}],"key":"zza14ZMHEN"}],"key":"KEbboxCXID"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"# get the time difference between ICESat-2 overpass and Sentinel-2 acquisitions, set as image property\nis2time = is2data.date + 'T12:00:00'\ndef set_time_difference(img, is2time=is2time):\n    timediff = ee.Date(is2time).difference(img.get('system:time_start'), 'second').abs()\n    return img.set('timediff', timediff)\ncloudfree_collection = cloudfree_collection.map(set_time_difference).sort('timediff')","visibility":"show","key":"poK9nzOytK"},{"type":"output","id":"P44XLznTRLcE7hlsZ16UT","data":[],"visibility":"show","key":"kJa9iejtbr"}],"visibility":"show","key":"P8ZY4HCeKE"},{"type":"block","kind":"notebook-content","data":{"user_expressions":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Print some stats for the final collection to make sure everything looks alright.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"n4NcSC0a6B"}],"key":"dHD6eIGgsS"}],"key":"xH0tNsgwG5"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"info = cloudfree_collection.getInfo()\nfor feature in info['features']:\n    s2datetime = datetime.fromtimestamp(feature['properties']['system:time_start']/1e3)\n    is2datetime = datetime.strptime(is2time, '%Y-%m-%dT%H:%M:%S')\n    timediff = s2datetime - is2datetime\n    timediff -= timedelta(microseconds=timediff.microseconds)\n    diffsign = 'before' if timediff < timedelta(0) else 'after'\n    print('%s --> along-track cloud probability: %5.1f %%, %s %7s ICESat-2' % (feature['properties']['GRANULE_ID'],\n              feature['properties']['ground_track_cloud_prob'],np.abs(timediff), diffsign))","visibility":"show","key":"RZjFXXlMUS"},{"type":"output","id":"MH6Itw-VIbPORq9xFXq64","data":[],"visibility":"show","key":"uqXxoNWnBP"}],"visibility":"show","key":"dDzftH09CX"},{"type":"block","kind":"notebook-content","data":{"user_expressions":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Show the final image and ground track on the map","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"BVqwupjlVs"}],"identifier":"show-the-final-image-and-ground-track-on-the-map","label":"Show the final image and ground track on the map","html_id":"show-the-final-image-and-ground-track-on-the-map","implicit":true,"key":"diRFzvlIjH"}],"key":"V6hz1U7mf1"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"first_image_rgb = cloudfree_collection.first().select('B4', 'B3', 'B2')\nMap = geemap.Map(layout=Layout(width='70%', max_height='450px'))\nMap.add_basemap('SATELLITE')\nMap.addLayer(first_image_rgb, vis_params, name='my image')\nMap.addLayer(gtx_feature,{'color': 'red'},'ground track')\nMap.centerObject(gtx_feature, zoom=12)\nMap","visibility":"show","key":"l0DZIKRHDh"},{"type":"output","id":"J7A1WEoebpBq2xsT0UPt8","data":[],"visibility":"show","key":"knWaqzNKvr"}],"visibility":"show","key":"kLyjzY8hvE"},{"type":"block","kind":"notebook-content","data":{"user_expressions":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Download images from Earth Engine","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"hHkyaKinrw"}],"identifier":"download-images-from-earth-engine","label":"Download images from Earth Engine","html_id":"download-images-from-earth-engine","implicit":true,"key":"iZx1rEnuUW"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"We can use ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"KxGAkgo9a3"},{"type":"link","url":"https://developers.google.com/earth-engine/apidocs/ee-image-getdownloadurl","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"inlineCode","value":".getDownloadUrl()","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"VHeikFXtGg"}],"urlSource":"https://developers.google.com/earth-engine/apidocs/ee-image-getdownloadurl","key":"J53DndXv7f"},{"type":"text","value":" on an Earth Engine image.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Un8jYPrWuf"}],"key":"mUdLdWSrSI"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"It asks for a scale, which is just the pixel size in meters (10 m for Sentinel-2 visible bands). It also asks for the region we would like to export; here we use a ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"NrULBynIaS"},{"type":"link","url":"https://developers.google.com/earth-engine/apidocs/ee-geometry-buffer","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"inlineCode","value":".buffer","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"KxJWEJJ558"}],"urlSource":"https://developers.google.com/earth-engine/apidocs/ee-geometry-buffer","key":"kwUIiK4Uhc"},{"type":"text","value":" around the center.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"JVSS0XpVDQ"}],"key":"cmngWszWSo"},{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"emphasis","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"(Note: This function can only be effectively used for small download jobs because there is a request size limit. Here, we only download a small region around the ground track, and convert the image to an 8-bit RGB composite to keep file size low. For larger jobs you should use ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"r1N3NTeRMe"},{"type":"link","url":"https://developers.google.com/earth-engine/apidocs/export-image-todrive","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"inlineCode","value":"Export.image.toDrive","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"XVaxcfn808"}],"urlSource":"https://developers.google.com/earth-engine/apidocs/export-image-todrive","key":"LrQaNYOJlU"},{"type":"text","value":")","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"lksGwHBtX8"}],"key":"xIu0xFSMYe"}],"key":"VwUzQmJSF9"}],"key":"W3Vimtcvvd"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"# create a region around the ground track over which to download data\npoint_of_interest = ee.Geometry.Point(center_lon, center_lat)\nbuffer_around_center_meters = ground_track_length*0.52\nregion_of_interest = point_of_interest.buffer(buffer_around_center_meters)\n\n# make the image 8-bit RGB\ns2rgb = first_image_rgb.unitScale(ee.Number(0), ee.Number(10000)).clamp(0.0, 1.0).multiply(255.0).uint8()\n\n# get the download URL\ndownloadURL = s2rgb.getDownloadUrl({'name': 'mySatelliteImage',\n                                          'crs': s2rgb.projection().crs(),\n                                          'scale': 10,\n                                          'region': region_of_interest,\n                                          'filePerBand': False,\n                                          'format': 'GEO_TIFF'})\ndownloadURL","visibility":"show","key":"GHdI7XjBl2"},{"type":"output","id":"mQa2VYFF1g71kMltGdc06","data":[],"visibility":"show","key":"HfMjTmYkTj"}],"visibility":"show","key":"fofhqlTqmK"},{"type":"block","kind":"notebook-content","data":{"user_expressions":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"We can save the content of the download URL with the ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"KTA8Zq0Hy5"},{"type":"link","url":"https://docs.python-requests.org/en/latest/","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"inlineCode","value":"requests","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"FyY27022it"}],"urlSource":"https://docs.python-requests.org/en/latest/","key":"CTdosM2eP4"},{"type":"text","value":" library.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"XImIrmpL2o"}],"key":"VUhuRRYpeR"}],"key":"Se0j0mhueI"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"response = requests.get(downloadURL)\nfilename = 'my-satellite-image.tif'\nwith open(filename, 'wb') as f:\n    f.write(response.content)\nprint('Downloaded %s' % filename)","visibility":"show","key":"DHqlpdXgEC"},{"type":"output","id":"yCMiCX_2oTmdZmiwi1sWO","data":[],"visibility":"show","key":"jXjLuFRINf"}],"visibility":"show","key":"XcjxirYNup"},{"type":"block","kind":"notebook-content","data":{"user_expressions":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Open a GeoTIFF in rasterio","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"zeHOxteeC9"}],"identifier":"open-a-geotiff-in-rasterio","label":"Open a GeoTIFF in rasterio","html_id":"open-a-geotiff-in-rasterio","implicit":true,"key":"lrmOgSey20"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Now that we have saved the file, we can open it locally with the ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"xcOYI5ep3v"},{"type":"link","url":"https://rasterio.readthedocs.io/en/latest/intro.html","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"inlineCode","value":"rasterio","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"qX5y9vrhlI"}],"urlSource":"https://rasterio.readthedocs.io/en/latest/intro.html","key":"ClRORAOl20"},{"type":"text","value":" library.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"gozXkccUUI"}],"key":"v8zhFXpgkL"}],"key":"khwwPNMf1N"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"myImage = rio.open(filename)\nmyImage","visibility":"show","key":"w7cISAyTpI"},{"type":"output","id":"XLryhLiYncR0c55xsEYKF","data":[],"visibility":"show","key":"vtcfZbEo24"}],"visibility":"show","key":"NEbPd9Ob4S"},{"type":"block","kind":"notebook-content","data":{"user_expressions":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Plot a GeoTIFF in Matplotlib","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"fXBCelRgbR"}],"identifier":"plot-a-geotiff-in-matplotlib","label":"Plot a GeoTIFF in Matplotlib","html_id":"plot-a-geotiff-in-matplotlib","implicit":true,"key":"pIJM0cEaQ1"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Now we can easily plot the image in a matplotlib figure, just using the ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"PTkPSOwpq8"},{"type":"link","url":"https://rasterio.readthedocs.io/en/latest/api/rasterio.plot.html","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"inlineCode","value":"rasterio.plot()","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"HRpCMX9s4o"}],"urlSource":"https://rasterio.readthedocs.io/en/latest/api/rasterio.plot.html","key":"tNOeECV92a"},{"type":"text","value":" module.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"V6rSZFQNja"}],"key":"cT0isSNSpi"}],"key":"Wl8uyPObB8"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"fig, ax = plt.subplots(figsize=[4,4])\nrioplot.show(myImage, ax=ax);","visibility":"show","key":"ZXw0ldmRlV"},{"type":"output","id":"KpzOeHHGTq4eI11KQVz82","data":[],"visibility":"show","key":"XGUhNdzZQV"}],"visibility":"show","key":"RNqggFWsEd"},{"type":"block","kind":"notebook-content","data":{"user_expressions":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"transform the ground track into the image CRS","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"KTuf5JzFFX"}],"identifier":"transform-the-ground-track-into-the-image-crs","label":"transform the ground track into the image CRS","html_id":"transform-the-ground-track-into-the-image-crs","implicit":true,"key":"wkRhDKvKer"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Because our plot is now in the Antarctic Polar Stereographic Coordrinate Reference System, we need to project the coordinates of the ground track from lon/lat values. The ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"dXJ8vwcw6K"},{"type":"link","url":"https://rasterio.readthedocs.io/en/latest/api/rasterio.warp.html","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"inlineCode","value":"rasterio.warp.transform","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"fUc7q0EcEZ"}],"urlSource":"https://rasterio.readthedocs.io/en/latest/api/rasterio.warp.html","key":"PK38qCcXq9"},{"type":"text","value":" function has us covered. From then on, it’s just plotting in Matplotlib.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"OoYyeIdB7R"}],"key":"JK8jknQxZo"}],"key":"nyk1AJrMuE"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"gtx_x, gtx_y = warp.transform(src_crs='epsg:4326', dst_crs=myImage.crs, xs=is2data.atl08.lon, ys=is2data.atl08.lat)\nax.plot(gtx_x, gtx_y, color='red', linestyle='-')\nax.axis('off')","visibility":"show","key":"EfEc6TcSlB"},{"type":"output","id":"G76djD6RHgk-TD1I5QmBW","data":[],"visibility":"show","key":"oMYHPTjHtX"}],"visibility":"show","key":"voFyj6KfD5"},{"type":"block","kind":"notebook-content","data":{"user_expressions":[]},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Summary","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"h2LfJ8E2s7"}],"identifier":"summary","label":"Summary","html_id":"summary","implicit":true,"key":"GIsbIvuF4c"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"🎉 Congratulations! You’ve completed this tutorial and have seen how we can put ICESat-2 photon-level data into context using Google Earth Engine and the OpenAltimetry API.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"K0rlcm4acb"}],"key":"metiizWT67"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"You can explore a few more use cases for this code (and possible solutions for Exercise 2) in ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"CV0Sxt7miy"},{"type":"link","url":"./use_examples.ipynb","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"this notebook","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"iNnWZRegc8"}],"urlSource":"./use_examples.ipynb","key":"V9C9ITUkGm"},{"type":"text","value":".","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"cjkmybh2yP"}],"key":"FB0ipgxtxx"}],"key":"fEVt8QP9Rz"},{"type":"block","kind":"notebook-content","data":{"user_expressions":[]},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"References","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"k2L9wXtWwk"}],"identifier":"references","label":"References","html_id":"references","implicit":true,"key":"XXWJeV7inC"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"To further explore the topics of this tutorial see the following detailed documentation:","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"dtox0NOdzd"}],"key":"w36VJgSHNE"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":5,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"link","url":"https://openaltimetry.org/data/swagger-ui/","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"The OpenAltimetry API","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"LMveVtO6Cy"}],"urlSource":"https://openaltimetry.org/data/swagger-ui/","key":"bpIGWqdtud"}],"key":"b4fGcIKmmD"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"link","url":"https://developers.google.com/earth-engine/guides","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Google Earth Engine JavaScript and Python Guides","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"e4YeID6Sig"}],"urlSource":"https://developers.google.com/earth-engine/guides","key":"PwyMc4jowa"}],"key":"AQuDll0NJj"},{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"link","url":"https://developers.google.com/earth-engine/tutorials/community/sentinel-2-s2cloudless","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Tutorial on Sentinel-2 cloud masking with s2cloudless","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"IWmArEipxX"}],"urlSource":"https://developers.google.com/earth-engine/tutorials/community/sentinel-2-s2cloudless","key":"Ihw5ztw3n9"}],"key":"joqPe7WkcY"},{"type":"listItem","spread":true,"position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"link","url":"https://geemap.org/","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"The geemap package","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"nm3t5LTdb9"}],"urlSource":"https://geemap.org/","key":"vKoHYcJOpv"},{"type":"text","value":" and ","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"tmDeILZq7y"},{"type":"link","url":"https://geemap.org/tutorials/","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"tutorials","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"Cr4toV0CIn"}],"urlSource":"https://geemap.org/tutorials/","key":"uvQ0SBDm83"}],"key":"CRrFaKTbeL"}],"key":"YYPT4A0zq8"}],"key":"CFycalk8eS"}],"key":"rn1Ta7vxVn"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Machine Learning","url":"/notebooks/machine-learning","group":"Foundations"},"next":{"title":"Land Ice Applications","url":"/notebooks/land-ice","group":"Example Workflows"}}},"domain":"http://localhost:3000"}