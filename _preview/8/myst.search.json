{"version":"1","records":[{"hierarchy":{"lvl1":"ICESat-2 Cookbook"},"type":"lvl1","url":"/","position":0},{"hierarchy":{"lvl1":"ICESat-2 Cookbook"},"content":"","type":"content","url":"/","position":1},{"hierarchy":{"lvl1":"ICESat-2 Cookbook"},"type":"lvl1","url":"/#icesat-2-cookbook","position":2},{"hierarchy":{"lvl1":"ICESat-2 Cookbook"},"content":"\n\n\n\n\n\n\n\nThis Project Pythia Cookbook is a compilation of tutorials developed from 2019\nto present as part of the NASA / UW eScience hackweek program. The purpose of\nthe tutorials is to help people with data access and to demonstrate a variety\nof disciplinary use cases.","type":"content","url":"/#icesat-2-cookbook","position":3},{"hierarchy":{"lvl1":"ICESat-2 Cookbook","lvl2":"Motivation"},"type":"lvl2","url":"/#motivation","position":4},{"hierarchy":{"lvl1":"ICESat-2 Cookbook","lvl2":"Motivation"},"content":"The ICESat-2 mission provides valuable data for measuring changes in glaciers,\nice sheets, sea ice, clouds and land surface systems. There are numerous data\nproducts and methods for accessing and analyzing data. The goal of these\ntutorials is to streamline data access, reduce duplication of effort and\nbuild an open science community around ICESat-2 algorithms and software.","type":"content","url":"/#motivation","position":5},{"hierarchy":{"lvl1":"ICESat-2 Cookbook","lvl2":"Authors"},"type":"lvl2","url":"/#authors","position":6},{"hierarchy":{"lvl1":"ICESat-2 Cookbook","lvl2":"Authors"},"content":"Ben Smith,\n\n\nMichalea King,\n\n\nTyler Sutterley,\n\n\nAnthony Arendt,\n\n\nJessica Scheick,\n\n\nMark Welden-Smith\n\nmore to be added","type":"content","url":"/#authors","position":7},{"hierarchy":{"lvl1":"ICESat-2 Cookbook","lvl3":"Contributors","lvl2":"Authors"},"type":"lvl3","url":"/#contributors","position":8},{"hierarchy":{"lvl1":"ICESat-2 Cookbook","lvl3":"Contributors","lvl2":"Authors"},"content":"","type":"content","url":"/#contributors","position":9},{"hierarchy":{"lvl1":"ICESat-2 Cookbook","lvl2":"Structure"},"type":"lvl2","url":"/#structure","position":10},{"hierarchy":{"lvl1":"ICESat-2 Cookbook","lvl2":"Structure"},"content":"This cookbook is broken up into two main sections - “Foundations”\nand “Example Workflows.”","type":"content","url":"/#structure","position":11},{"hierarchy":{"lvl1":"ICESat-2 Cookbook","lvl3":"Section 1: Foundations","lvl2":"Structure"},"type":"lvl3","url":"/#section-1-foundations","position":12},{"hierarchy":{"lvl1":"ICESat-2 Cookbook","lvl3":"Section 1: Foundations","lvl2":"Structure"},"content":"Mission Overview\n\nData Access\n\nFiltering\n\nGeospatial Transforms\n\nIntegration\n\nCloud Computing\n\nMachine Learning\n\nVisualization","type":"content","url":"/#section-1-foundations","position":13},{"hierarchy":{"lvl1":"ICESat-2 Cookbook","lvl3":"Section 2: Example Workflows for Specific Disciplines","lvl2":"Structure"},"type":"lvl3","url":"/#section-2-example-workflows-for-specific-disciplines","position":14},{"hierarchy":{"lvl1":"ICESat-2 Cookbook","lvl3":"Section 2: Example Workflows for Specific Disciplines","lvl2":"Structure"},"content":"Land Ice\n\nSea Ice\n\nInland Hydrology\n\nBathymetry\n\nSnowdepth","type":"content","url":"/#section-2-example-workflows-for-specific-disciplines","position":15},{"hierarchy":{"lvl1":"ICESat-2 Cookbook","lvl2":"Running the Notebooks"},"type":"lvl2","url":"/#running-the-notebooks","position":16},{"hierarchy":{"lvl1":"ICESat-2 Cookbook","lvl2":"Running the Notebooks"},"content":"You can either run the notebook using \n\nBinder or on your local machine.","type":"content","url":"/#running-the-notebooks","position":17},{"hierarchy":{"lvl1":"ICESat-2 Cookbook","lvl3":"Running on Binder","lvl2":"Running the Notebooks"},"type":"lvl3","url":"/#running-on-binder","position":18},{"hierarchy":{"lvl1":"ICESat-2 Cookbook","lvl3":"Running on Binder","lvl2":"Running the Notebooks"},"content":"The simplest way to interact with a Jupyter Notebook is through\n\n\nBinder, which enables the execution of a\n\n\nJupyter Book in the cloud. The details of how this works are not\nimportant for now. All you need to know is how to launch a Pythia\nCookbooks chapter via Binder. Simply navigate your mouse to\nthe top right corner of the book chapter you are viewing and click\non the rocket ship icon, (see figure below), and be sure to select\n“launch Binder”. After a moment you should be presented with a\nnotebook that you can interact with. I.e. you’ll be able to execute\nand even change the example programs. You’ll see that the code cells\nhave no output at first, until you execute them by pressing\nShift+Enter. Complete details on how to interact with\na live Jupyter notebook are described in \n\nGetting Started with\nJupyter.\n\nNote, not all Cookbook chapters are executable. If you do not see\nthe rocket ship icon, such as on this page, you are not viewing an\nexecutable book chapter.","type":"content","url":"/#running-on-binder","position":19},{"hierarchy":{"lvl1":"ICESat-2 Cookbook","lvl3":"Running on Your Own Machine","lvl2":"Running the Notebooks"},"type":"lvl3","url":"/#running-on-your-own-machine","position":20},{"hierarchy":{"lvl1":"ICESat-2 Cookbook","lvl3":"Running on Your Own Machine","lvl2":"Running the Notebooks"},"content":"If you are interested in running this material locally on your computer,\nyou will need to follow this workflow:\n\nClone the https://github.com/ProjectPythia/icesat2-cookbook repository: git clone https://github.com/ProjectPythia/icesat2-cookbook.git\n\nMove into the icesat2-cookbook directorycd cookbook-example\n\nCreate and activate your conda environment from the environment.yml fileconda env create -f environment.yml\nconda activate icesat2-cookbook\n\nMove into the notebooks directory and start up Jupyterlabcd notebooks/\njupyter lab","type":"content","url":"/#running-on-your-own-machine","position":21},{"hierarchy":{"lvl1":"ICESat-2 Cookbook","lvl3":"Running with Pixi","lvl2":"Running the Notebooks"},"type":"lvl3","url":"/#running-with-pixi","position":22},{"hierarchy":{"lvl1":"ICESat-2 Cookbook","lvl3":"Running with Pixi","lvl2":"Running the Notebooks"},"content":"Alternatively, you can use \n\nPixi for a more streamlined environment management experience:\n\nInstall Pixi following the \n\ninstallation instructions\n\nClone the https://github.com/ProjectPythia/icesat2-cookbook repository: git clone https://github.com/ProjectPythia/icesat2-cookbook.git\n\nMove into the icesat2-cookbook directorycd icesat2-cookbook\n\nInstall dependencies and start JupyterLab with a single command:pixi run start\n\nThis will automatically create the environment, install all dependencies, and launch JupyterLab in the notebooks directory.","type":"content","url":"/#running-with-pixi","position":23},{"hierarchy":{"lvl1":"ICESat-2 Cookbook","lvl4":"Exporting Conda Environment with Pixi","lvl3":"Running with Pixi","lvl2":"Running the Notebooks"},"type":"lvl4","url":"/#exporting-conda-environment-with-pixi","position":24},{"hierarchy":{"lvl1":"ICESat-2 Cookbook","lvl4":"Exporting Conda Environment with Pixi","lvl3":"Running with Pixi","lvl2":"Running the Notebooks"},"content":"If you’re using pixi and want to generate a conda-compatible environment.yml file for sharing or reproducibility:pixi run export-env\n\nThis command will export the pixi workspace to a conda environment file (environment.yml) that can be used with conda or mamba.","type":"content","url":"/#exporting-conda-environment-with-pixi","position":25},{"hierarchy":{"lvl1":"Bathymetry Applications"},"type":"lvl1","url":"/notebooks/bathymetry","position":0},{"hierarchy":{"lvl1":"Bathymetry Applications"},"content":"","type":"content","url":"/notebooks/bathymetry","position":1},{"hierarchy":{"lvl1":"Bathymetry Applications","lvl2":"Author(s)"},"type":"lvl2","url":"/notebooks/bathymetry#author-s","position":2},{"hierarchy":{"lvl1":"Bathymetry Applications","lvl2":"Author(s)"},"content":"Jonathan Markel","type":"content","url":"/notebooks/bathymetry#author-s","position":3},{"hierarchy":{"lvl1":"Bathymetry Applications","lvl2":"Existing Notebooks"},"type":"lvl2","url":"/notebooks/bathymetry#existing-notebooks","position":4},{"hierarchy":{"lvl1":"Bathymetry Applications","lvl2":"Existing Notebooks"},"content":"Bathymetry Applications","type":"content","url":"/notebooks/bathymetry#existing-notebooks","position":5},{"hierarchy":{"lvl1":"Bathymetry Applications","lvl2":"Learning Outcomes"},"type":"lvl2","url":"/notebooks/bathymetry#learning-outcomes","position":6},{"hierarchy":{"lvl1":"Bathymetry Applications","lvl2":"Learning Outcomes"},"content":"Learn what ICESat-2 bathymetry looks like, where to find it, and how to\nvisualize it\n\nUnderstand pros / cons of different signal finding approaches for bathymetry\n\nExtract water surface and seafloor returns from the photon data\n\nApply refraction correction to subsurface photon heights","type":"content","url":"/notebooks/bathymetry#learning-outcomes","position":7},{"hierarchy":{"lvl1":"Bathymetry Applications","lvl3":"Notes","lvl2":"Learning Outcomes"},"type":"lvl3","url":"/notebooks/bathymetry#notes","position":8},{"hierarchy":{"lvl1":"Bathymetry Applications","lvl3":"Notes","lvl2":"Learning Outcomes"},"content":"","type":"content","url":"/notebooks/bathymetry#notes","position":9},{"hierarchy":{"lvl1":"Cloud Computing"},"type":"lvl1","url":"/notebooks/cloud-computing","position":0},{"hierarchy":{"lvl1":"Cloud Computing"},"content":"","type":"content","url":"/notebooks/cloud-computing","position":1},{"hierarchy":{"lvl1":"Cloud Computing","lvl2":"Author(s)"},"type":"lvl2","url":"/notebooks/cloud-computing#author-s","position":2},{"hierarchy":{"lvl1":"Cloud Computing","lvl2":"Author(s)"},"content":"Aimee Barciauskas, Tasha Snow","type":"content","url":"/notebooks/cloud-computing#author-s","position":3},{"hierarchy":{"lvl1":"Cloud Computing","lvl2":"Existing Notebooks"},"type":"lvl2","url":"/notebooks/cloud-computing#existing-notebooks","position":4},{"hierarchy":{"lvl1":"Cloud Computing","lvl2":"Existing Notebooks"},"content":"Cloud Computing","type":"content","url":"/notebooks/cloud-computing#existing-notebooks","position":5},{"hierarchy":{"lvl1":"Cloud Computing","lvl2":"Learning Outcomes"},"type":"lvl2","url":"/notebooks/cloud-computing#learning-outcomes","position":6},{"hierarchy":{"lvl1":"Cloud Computing","lvl2":"Learning Outcomes"},"content":"What is cloud computing?\n\nWhat is cloud object storage and the difference between data stored in the\ncloud, data on a local file system and data stored in on-premise data centers.\n\nHow to optimize data for reading from cloud object storage.","type":"content","url":"/notebooks/cloud-computing#learning-outcomes","position":7},{"hierarchy":{"lvl1":"Cloud Computing","lvl3":"Notes","lvl2":"Learning Outcomes"},"type":"lvl3","url":"/notebooks/cloud-computing#notes","position":8},{"hierarchy":{"lvl1":"Cloud Computing","lvl3":"Notes","lvl2":"Learning Outcomes"},"content":"Unsure whether to point parts of this to an existing CryoCloud tutorial.\nThe content specific to ICESat-2 definitely belongs here.","type":"content","url":"/notebooks/cloud-computing#notes","position":9},{"hierarchy":{"lvl1":"Data Access"},"type":"lvl1","url":"/notebooks/data-access","position":0},{"hierarchy":{"lvl1":"Data Access"},"content":"","type":"content","url":"/notebooks/data-access","position":1},{"hierarchy":{"lvl1":"Data Access","lvl2":"Author(s)"},"type":"lvl2","url":"/notebooks/data-access#author-s","position":2},{"hierarchy":{"lvl1":"Data Access","lvl2":"Author(s)"},"content":"Rachel Wegener, Amy Steiker, Jessica Scheick, JP Swinski, many others","type":"content","url":"/notebooks/data-access#author-s","position":3},{"hierarchy":{"lvl1":"Data Access","lvl2":"Existing Notebooks"},"type":"lvl2","url":"/notebooks/data-access#existing-notebooks","position":4},{"hierarchy":{"lvl1":"Data Access","lvl2":"Existing Notebooks"},"content":"Accessing ICESat-2 Data\n\n(assuming that the 2024 notebook is most updated for now)","type":"content","url":"/notebooks/data-access#existing-notebooks","position":5},{"hierarchy":{"lvl1":"Data Access","lvl2":"Learning Outcomes"},"type":"lvl2","url":"/notebooks/data-access#learning-outcomes","position":6},{"hierarchy":{"lvl1":"Data Access","lvl2":"Learning Outcomes"},"content":"learn about all the tools currently available for accessing ICESat-2 data,\nand the decisions that influence which one to choose\n\nlearn recommended best practices for data access depending on your application","type":"content","url":"/notebooks/data-access#learning-outcomes","position":7},{"hierarchy":{"lvl1":"Data Access","lvl3":"Notes","lvl2":"Learning Outcomes"},"type":"lvl3","url":"/notebooks/data-access#notes","position":8},{"hierarchy":{"lvl1":"Data Access","lvl3":"Notes","lvl2":"Learning Outcomes"},"content":"Suggest we wait to work on these tutorials until after the 2025 Developers’\nHackweek in Seattle.","type":"content","url":"/notebooks/data-access#notes","position":9},{"hierarchy":{"lvl1":"Data Integration"},"type":"lvl1","url":"/notebooks/data-integration","position":0},{"hierarchy":{"lvl1":"Data Integration"},"content":"","type":"content","url":"/notebooks/data-integration","position":1},{"hierarchy":{"lvl1":"Data Integration","lvl2":"Author(s)"},"type":"lvl2","url":"/notebooks/data-integration#author-s","position":2},{"hierarchy":{"lvl1":"Data Integration","lvl2":"Author(s)"},"content":"Michalea King, Tyler Sutterley, Ian Joughin, Zach Fair, Tasha Snow","type":"content","url":"/notebooks/data-integration#author-s","position":3},{"hierarchy":{"lvl1":"Data Integration","lvl2":"Existing Notebooks"},"type":"lvl2","url":"/notebooks/data-integration#existing-notebooks","position":4},{"hierarchy":{"lvl1":"Data Integration","lvl2":"Existing Notebooks"},"content":"-\n\nData Integration Part 1\n\n-\n\nData Integration Part 2","type":"content","url":"/notebooks/data-integration#existing-notebooks","position":5},{"hierarchy":{"lvl1":"Data Integration","lvl2":"Learning Outcomes"},"type":"lvl2","url":"/notebooks/data-integration#learning-outcomes","position":6},{"hierarchy":{"lvl1":"Data Integration","lvl2":"Learning Outcomes"},"content":"Retrieve image mosaics from NSIDC\n\nSubset and view imagery with GrIMP and NISAR tools\n\nRetrieve customized ICESat-2 data with SlideRule\n\nSample imagery at ICESat-2 photon locations\n\nAccess NSIDC data sets and acquire IS-2 using icepyx\n\nAnalyze point and raster data together with IS-2\n\nAdvanced visualizations of multiple datasets","type":"content","url":"/notebooks/data-integration#learning-outcomes","position":7},{"hierarchy":{"lvl1":"Data Integration","lvl3":"Notes","lvl2":"Learning Outcomes"},"type":"lvl3","url":"/notebooks/data-integration#notes","position":8},{"hierarchy":{"lvl1":"Data Integration","lvl3":"Notes","lvl2":"Learning Outcomes"},"content":"","type":"content","url":"/notebooks/data-integration#notes","position":9},{"hierarchy":{"lvl1":"Cloud effects on ICESat-2 data,  and Data Filtering"},"type":"lvl1","url":"/notebooks/filtering","position":0},{"hierarchy":{"lvl1":"Cloud effects on ICESat-2 data,  and Data Filtering"},"content":"\n\n","type":"content","url":"/notebooks/filtering","position":1},{"hierarchy":{"lvl1":"Cloud effects on ICESat-2 data,  and Data Filtering","lvl3":"Overview"},"type":"lvl3","url":"/notebooks/filtering#overview","position":2},{"hierarchy":{"lvl1":"Cloud effects on ICESat-2 data,  and Data Filtering","lvl3":"Overview"},"content":"The ICESat-2 land-ice product (ATL06) was designed to measure the heights of snow and ice surfaces.  But when we’re making these measurements, sometimes clouds get in the way, and the measured heights aren’t as precise or accurate as we would like. This tutorial covers some of the reasons you might see weird results over ice when clouds start to blot out the surface signals.  The learning objectives I’d like to get to are:\n\nUnderstanding how clouds affect laser-altimetry signals\n\nRecognizing how these effects are manifest in the ATL06 product\n\nGaining familiarity with the ATL06 parameters that can identify cloudy returns\n\n","type":"content","url":"/notebooks/filtering#overview","position":3},{"hierarchy":{"lvl1":"Cloud effects on ICESat-2 data,  and Data Filtering","lvl4":"Prerequisites","lvl3":"Overview"},"type":"lvl4","url":"/notebooks/filtering#prerequisites","position":4},{"hierarchy":{"lvl1":"Cloud effects on ICESat-2 data,  and Data Filtering","lvl4":"Prerequisites","lvl3":"Overview"},"content":"Concepts\n\nImportance\n\nNotes\n\npandas\n\nNecessary\n\nICESat-2 data in this tutorial will appear as geopandas dataframes\n\nnumpy/matplotlib\n\nNecessary\n\nWe will do our plotting with matplotlib\n\nICESat-2 Mission Overview\n\nNecessary\n\nHere is where to go to understand the ICESat-2 mission and its goals\n\nTime to learn:  30 min.\n\nTip\n\nThis tutorial was developed on CryoCloud under the default environment.  If you’re using CryoCloud, you’ll need to pick an instance that uses at least 7 GB of memory to keep the kernel from running out of memory and resetting.\n\n\n\n","type":"content","url":"/notebooks/filtering#prerequisites","position":5},{"hierarchy":{"lvl1":"Cloud effects on ICESat-2 data,  and Data Filtering","lvl3":"Imports"},"type":"lvl3","url":"/notebooks/filtering#imports","position":6},{"hierarchy":{"lvl1":"Cloud effects on ICESat-2 data,  and Data Filtering","lvl3":"Imports"},"content":"We’ll use the \n\nSlideRule computational platfrom to access ATL06 segments and ATL03 photons, and will use an image of the ice shelf from the REMA project to visualize the location.\n\n# General packages for the tutorial\nimport pprint\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport geopandas as gpd\n%matplotlib widget\n\n# packages needed for the basemap \nimport PIL.Image\nimport urllib.request\nimport urllib.parse\n\n#sliderule\nfrom sliderule import icesat2\nimport sliderule\n# We'll initialize sliderule with the verbosity flag set to 'False.'  If you like to see lots of text scrolling by, set it to 'True'\nicesat2.init(\"slideruleearth.io\", False)\n\n","type":"content","url":"/notebooks/filtering#imports","position":7},{"hierarchy":{"lvl1":"Cloud effects on ICESat-2 data,  and Data Filtering","lvl2":"Background: ATL06 signal processing"},"type":"lvl2","url":"/notebooks/filtering#background-atl06-signal-processing","position":8},{"hierarchy":{"lvl1":"Cloud effects on ICESat-2 data,  and Data Filtering","lvl2":"Background: ATL06 signal processing"},"content":"\n\nRecall that ATL06 gives us surface heights based on the heights of collections of photons in a 40-m (horizontal) by w_surface_window (vertical) window.  It uses a variety of techniques to shrink the window to the smallest size that contains the surface without clipping off any signal photons.\n\nThere’s a general philosophy that went into the design of ATL06:\n\nUse the best available information to identiy the surface\n\nIf there’s a chance that we’ve found a weak surface return, report it\n\nProvide enough parameters that users can decide which returns are worth using, and which are not\n\nWhen there are no thick clouds between ICESat-2 and the surface, finding the surface return and reporting its height is straightforward: ATL03 provides a tight cluster of high-confidence photons, and ATL06 calculates a weighted average of their heights.\n\nOnce clouds start to block some of the laser light, the number of photons that return to ATLAS from each return becomes progressively smaller.  Unfortunately, even if there are no laser photons to measure, during daylight there is no shortage of other photons to track, which come primarily from sunlight reflecting ground and from clouds.  ATLAS does a very good job of filtering out almost all of these photons, but on a sunny day, over a white surface, the measured background rate can be as high as 12 MHz.  Converting to dimensions that we’ll be seeing this is:\\frac{1.2\\times10^7 photons}{second} \\times \\frac{1 second}{1.5\\times10^8 m} = \\frac{1 photon}{12.5 m}\n\nThis doesn’t sound like a lot, but over a 10-meter-high window that’s 40 m long (typical for the kind of windows you might use to look for the surface if you didn’t know where to find it) we can expect to find 45 photons.\n\nUnlike surface-return photons, background photons are uniformally distributed in height, and any clustering of these photons will be due to random chance.  When the signal quality is marginal, ATL03 may flag photons only as low- and medium- confidence for a particular segment, or may flag no photons at all.  If ATL03 hasn’t told ATL06 which photons are the surface, the algorithm uses a backup signal-finding strategy that initializes surface finding using the strongest cluster of photons available.  It then attempts to converge its surface window on a tight cluster of photons.  This occasionally works, but if there really is no signal, the size of the window generally remains large, and we can evaluate the results based on the signal-to-noise ratio (SNR) of whatever ends up inside the window.  Only those segments with at least 10 photons, for which the probability of converging to an SNR equal to the observed SNR or better for random-noise inputs is less thatn 5% are reported.  This cuts down on false positives considerably.\n\nLet’s take a look at some data from Antarctica to see what different problematic data might look like.\n\n","type":"content","url":"/notebooks/filtering#background-atl06-signal-processing","position":9},{"hierarchy":{"lvl1":"Cloud effects on ICESat-2 data,  and Data Filtering","lvl3":"Geographic Setting","lvl2":"Background: ATL06 signal processing"},"type":"lvl3","url":"/notebooks/filtering#geographic-setting","position":10},{"hierarchy":{"lvl1":"Cloud effects on ICESat-2 data,  and Data Filtering","lvl3":"Geographic Setting","lvl2":"Background: ATL06 signal processing"},"content":"We’ll be working on Cook Ice Shelf, a heavily crevassed and rifted ice shelf that drains East Antarctica.  I’ve defined a polygon that covers the transition between grounded ice (at the top) floating ice (within the polygon).  The region we’ll be working in is about 70 km x 60 km, and is covered by 20-30 ICESat-2 repeat tracks.  We can get an image of the shelf from the ArcticDEM project, using a urllib-based request.  Note: This code can be used to obtain a basic image for almost anywhere in the Arctic and Antarctic, which might be helpful in other work.\n\nThe location information is stored in a kml file in the assets directory, but you can substitute your own kml if you’d like to look at data from somewhere else.  Just make sure not to make your query too large to avoid running out of memory.\n\n# read in a polygon defining our area of interest:\ndf = gpd.read_file('assets/filtering/Cook_subset.kml')\ngeom_xy = df.to_crs(3031).geometry[0]\ngeom_ll = df.geometry[0]\n\n# get a shaded relief DEM to use as a basemap. This uses the ArcticDEM image server.\n\nHOST = 'https://elevation2.arcgis.com/arcgis/rest/services/Polar/AntarcticDEM/ImageServer/exportImage?'\nparams = []\nparams.append('bboxSR=3031')\nparams.append('imageSR=3031')\nparams.append('format=jpgpng')\nparams.append('noDataInterpretation=esriNoDataMatchAll')\nparams.append('f=image')\n\n[xmin, xmax], [ymin, ymax] = np.array(geom_xy.bounds).reshape(2,2).T\n# include a little bit more area at the top:\nymax += 2.e4 \nbbox = f'{xmin},{ymin},{xmax},{ymax}'\nparams.append(f'bbox={urllib.parse.quote(bbox)}')\n\nimage_service_url = HOST + '&'.join(params)\nshaded_relief_img = {'data': np.array(PIL.Image.open(urllib.request.urlopen(image_service_url))),\n    'extent':[xmin, xmax, ymin, ymax]}\nplt.figure()\nplt.imshow(shaded_relief_img['data'], extent=shaded_relief_img['extent'])\nx_poly, y_poly, _ = [*np.c_[geom_xy.exterior.coords].T]\nplt.plot(x_poly, y_poly,'r')\n\nplt.gca().set_xlabel('polar-stereographic E, m')\nplt.gca().set_xlabel('polar-stereographic N, m')\n\n","type":"content","url":"/notebooks/filtering#geographic-setting","position":11},{"hierarchy":{"lvl1":"Cloud effects on ICESat-2 data,  and Data Filtering","lvl3":"ICESat-2 data over Cook Ice Shelf","lvl2":"Background: ATL06 signal processing"},"type":"lvl3","url":"/notebooks/filtering#icesat-2-data-over-cook-ice-shelf","position":12},{"hierarchy":{"lvl1":"Cloud effects on ICESat-2 data,  and Data Filtering","lvl3":"ICESat-2 data over Cook Ice Shelf","lvl2":"Background: ATL06 signal processing"},"content":"For this tutorial, we’ll use the SlideRule service to download ATL06 (height measurements) and ATL03 (photon clouds).  SlideRule offers a quick and efficient way to search for and access data for limited areas of the ice sheet without the need to subset or download entire granules of data.","type":"content","url":"/notebooks/filtering#icesat-2-data-over-cook-ice-shelf","position":13},{"hierarchy":{"lvl1":"Cloud effects on ICESat-2 data,  and Data Filtering","lvl4":"Preliminary data download","lvl3":"ICESat-2 data over Cook Ice Shelf","lvl2":"Background: ATL06 signal processing"},"type":"lvl4","url":"/notebooks/filtering#preliminary-data-download","position":14},{"hierarchy":{"lvl1":"Cloud effects on ICESat-2 data,  and Data Filtering","lvl4":"Preliminary data download","lvl3":"ICESat-2 data over Cook Ice Shelf","lvl2":"Background: ATL06 signal processing"},"content":"Let’s begin by looking at the distibution of tracks for the region, using the ATL06 (land-ice height) product. We’ll first request a subset of data covering 2020.  To run SlideRule, we need a polygon (defined as a list of dictionaries, each of which has a ‘lat’ and a ‘lon’ element) and a start and stop time.  We’ll use the ATL06sp endpoint, which subsets all the granules in the region for a standard set of ATL06 fields.  The polygon we’re using comes from a kml file called Cook_subset.kml, which is in the assets/filtering directory.  You can substitute your own file if you want to work on a different area.\n\n# Define a polygon in sliderule format.\npoly=[{'lat':jj[1], 'lon':jj[0]} for jj in geom_ll.exterior.coords]\n\n#Define the request (a dictionary of parameters, \n#see: https://slideruleearth.io/web/rtd/user_guide/icesat2.html#parameters\nsliderule_parms= {\n    \"poly\":poly,\n    \"t0\": \"2020-01-01T01:00:00Z\",\n    \"t1\": \"2021-01-01T01:01:01Z\",\n  }\n# submit the request, which should take 10-15 seconds\nD6=icesat2.atl06sp(sliderule_parms)\n# transform the output to polar stereographic coordinates\nD6.to_crs(3031, inplace=True)\n\n\nWe can take a look at the data that SlideRule returned to see what fields are present:\n\nD6\n\nThere are 21 columns here, which describe:\n\nsegment location (geometry)\n\nsegment location along-track coordinates ( x_atc, y_atc )\n\nsurface height and accuracy (h_li, h_li_sigma, atl06_quality_summary)\n\nsurface slope (dh_fit_dx, dh_fit_dy)\n\nsignal (r_eff, n_fit_photons)\n\ntrack and timing parameters (cycle, gt, cycle, spot, delta_time)\n\nThe list of fields is designed to cover almost all users’ needs, and we’ll only end up using a few of them in this tutorial.  Let’s look at the elevations (h_li) that came back in the current request in map view.\n\nplt.figure()\nax_scat = plt.gca()\nplt.imshow(shaded_relief_img['data'], extent=shaded_relief_img['extent'])\n\nxx=np.array(D6.geometry.x)\nyy=np.array(D6.geometry.y)\nhh = np.array(D6.h_li)\n\n# sort the data by abs(height) to make the outliers show up\nii=np.argsort(np.abs(hh))\nii=ii[np.isfinite(hh[ii])]\nh_scat=plt.scatter(xx[ii], yy[ii], 3,  c=hh[ii], clim=[-200, 200], cmap='RdBu')\nplt.colorbar(h_scat, label='h_li')\n\n# suggested area to look at a poorly performing segment:\nxl, yl = [np.array([1079194.72014081, 1080624.2833137 ]), np.array([-2089358.21884508, -2088030.7673274 ])]\n\nplt.plot(xl[[0, 0, 1, 1, 0]], yl[[0, 1, 1, 0, 0]],'--', color='palegreen', marker='*', linewidth=2)\n\nWe can see on this plot that most of the surface heights are close to sea level, but a few tracks are reporting heights that are probably far too high.","type":"content","url":"/notebooks/filtering#preliminary-data-download","position":15},{"hierarchy":{"lvl1":"Cloud effects on ICESat-2 data,  and Data Filtering","lvl4":"Selecting a track that has cloud problems","lvl3":"ICESat-2 data over Cook Ice Shelf","lvl2":"Background: ATL06 signal processing"},"type":"lvl4","url":"/notebooks/filtering#selecting-a-track-that-has-cloud-problems","position":16},{"hierarchy":{"lvl1":"Cloud effects on ICESat-2 data,  and Data Filtering","lvl4":"Selecting a track that has cloud problems","lvl3":"ICESat-2 data over Cook Ice Shelf","lvl2":"Background: ATL06 signal processing"},"content":"If you see a plot like this where there is a track that has problems, you need to figure out which track is affected.  To do this, you need to know which RGT (repeat ground track) has the problem, and which beams from that track are affected.\n\nOne way to do this is to use the zoom tool to find a track with large positive h_li values, and capture the axes x_lim and y_lim properties, then use the dataframe’s cx method to capture the subset of the dataframe within the axes.  You can do this by setting ‘interactive’ to True in the next cell.\n\nFor puruposes of making the tutorial run without any interaction, I’ve also defined some limits in the next cell, and I’ll be talking about the results that come from those limits.\n\nTip\n\nThe next cell is where you can change the ‘interactive’ variable to True, and use the zoom tool to find different tracks for which you can plot the ATL03 photons\n\n# if interactive is False, we'll use the xl, yl defined in the previous code cell\ninteractive=False\n\nif interactive:\n    xl=ax_scat.get_xlim() ; yl=ax_scat.get_ylim()\nD6_sub= D6.cx[xl[0]:xl[1], yl[0]:yl[1]]\nD6_sub\n\nIf you run this for the default region, you’ll see that there is one rgt (1259), and two gts (10 and 20) in the polygon.  Let’s do a plot of the height against the along-track coordinate:\n\nplt.figure()\nhs=plt.scatter(D6_sub.x_atc, D6_sub.h_li,5, c=D6_sub.cycle)\nplt.colorbar(hs, label='cycle_number')\nplt.gca().set_xlabel('along-track x (x_atc), m')\nplt.gca().set_ylabel('h, m')\n\n\nIf you’re using the default location, this plot shows heights near zero for cycle 8, and elevations far above and below the surface for cycles 7 and 9.  If we zoom in on cycle 8, we can see something that looks like ice-shelf terrain, so we can guess that this is probably “right” and cycles 7 and 9 are wrong.\n\n","type":"content","url":"/notebooks/filtering#selecting-a-track-that-has-cloud-problems","position":17},{"hierarchy":{"lvl1":"Cloud effects on ICESat-2 data,  and Data Filtering","lvl4":"Getting ATL03 data for a problematic track","lvl3":"ICESat-2 data over Cook Ice Shelf","lvl2":"Background: ATL06 signal processing"},"type":"lvl4","url":"/notebooks/filtering#getting-atl03-data-for-a-problematic-track","position":18},{"hierarchy":{"lvl1":"Cloud effects on ICESat-2 data,  and Data Filtering","lvl4":"Getting ATL03 data for a problematic track","lvl3":"ICESat-2 data over Cook Ice Shelf","lvl2":"Background: ATL06 signal processing"},"content":"The next step is to look at the ATL03 photon cloud for each cycle to see what has worked and what has not.\n\nTip\n\nIf you’re running in interactive mode, copy the track (RGT) and pair track from the subsetted dataframe above.\n\n# set the rgt and pair track here:\nthis_rgt=1259\nthis_track=1\n\n# Get ATL03.  this should take <1 minute to run.\n\nicesat2.init(\"slideruleearth.io\", True)\nsliderule_ATL03_parms= {\n    \"poly\":poly, \n    \"t0\": \"2020-01-01T01:00:00Z\",\n    \"t1\": \"2021-01-01T01:00:00Z\",\n    \"rgt\":this_rgt,\n    \"srt\":icesat2.SRT_LAND_ICE,\n    \"cnf\":-2,\n    \"track\": this_track,\n  }\n# run sliderule for track\nD3=sliderule.run('atl03x', sliderule_ATL03_parms).to_crs(3031)\n\n# make a subset for our geographic region\nD3_sub = D3.cx[xl[0]:xl[1], yl[0]:yl[1]]\n\nLet’s plot the photons from ATL03, and the segments from ATL06 for each beam in pair 1 for each cycle.\n\nNote that SlideRule has numeric codes for the different groundtracks, sogt=10 -> gt1l\n\ngt=20 -> gt1r\n\nThe SlideRule icesat2 module has ‘GT1L’,‘GT1R’,‘GT2L’ attributes that provide these numeric codes.\n\nhf, hax= plt.subplots(3, 2, layout='constrained', sharex=True, figsize=[8, 8])\n\nfor ax1, cycle in zip(hax, np.unique(np.array(D6_sub.cycle))):\n    for ax, gt in zip(ax1, np.unique(np.array(D6_sub['gt']))):\n        i3=(D3_sub['gt']==gt) & (D3_sub.cycle==cycle)\n        ax.plot(D3_sub.x_atc[i3], D3_sub.height[i3],'k.', markersize=1, label='ATL03')\n        i6=(D6_sub['gt']==gt) & (D6_sub.cycle==cycle)\n        ax.plot(D6_sub.x_atc[i6], D6_sub.h_li[i6],'.', color='steelblue', label='ATL06')\n        ax.set_title(f'cycle={cycle}, gt={gt}')\nhax[1, 1].legend()\n\nfor ax in hax[2,:]:\n    ax.set_xlabel('x_atc, m')\nfor ax in hax[:,0]:\n    ax.set_ylabel('WGS84 height, m')\n\nWe can see a few things going on here.  The photons in ATL03 come from vertical bands of data (telemetry bands) that the algorithms running onboard ATLAS have identified as possibly containing a ground return.  In some cases the algorithm is correct (e.g. cycle 8), in other cases it returns only a band of photons far from the ground (gt 10 for cycles 7 and 9) or returns a band of photons that contains the ground for which there is no usable return (gt 20 for cycles 7 and 9).\n\nWe can also see bands of photons above the ground in gt 10 for cycles 7 and 8: these are most likely clouds, and the photons in these bands are much farther apart than the photons from true ground returns (see cycle 8).\n\nAll of the tracks contain at least some background photons, which are uniformly distributed over the telemetry bands.  If you check the dates for the different cycles, you’ll see that cycle 7 comes from June (Antarctic winter), cycle 8 comes from mid September (late winter / early spring) and cycle 9 comes from mid December (high summer).  As a result, there are very few background photons in cycle 7, and very many in cycle 9.\n\n","type":"content","url":"/notebooks/filtering#getting-atl03-data-for-a-problematic-track","position":19},{"hierarchy":{"lvl1":"Cloud effects on ICESat-2 data,  and Data Filtering","lvl4":"Plotting ATL03 signal classifications","lvl3":"ICESat-2 data over Cook Ice Shelf","lvl2":"Background: ATL06 signal processing"},"type":"lvl4","url":"/notebooks/filtering#plotting-atl03-signal-classifications","position":20},{"hierarchy":{"lvl1":"Cloud effects on ICESat-2 data,  and Data Filtering","lvl4":"Plotting ATL03 signal classifications","lvl3":"ICESat-2 data over Cook Ice Shelf","lvl2":"Background: ATL06 signal processing"},"content":"It’s instructive to see how the ATL03 classification algorithm sees these points.  Let’s do the plot again, but color code by signal classification.  These are stored in the ATL03 atl03_cnf field.  the confidence values are:\n\n-- -1: Events not associated with a specific surface type\n\n--  0: noise\n\n--  1: noise photons within a +-10 m vertical buffer of a detected photon\n\n--  2: low confidence signal\n\n--  3: medium confidence signal\n\n--  4: high confidence signal\n\nhf, hax= plt.subplots(3, 2, layout='constrained', sharex=True, figsize=[8, 8])\n\nfor ax1, cycle in zip(hax, np.unique(np.array(D6_sub.cycle))):\n    for ax, gt in zip(ax1, np.unique(np.array(D6_sub['gt']))):\n        for cnf, name, color in zip([-1, 0, 1, 2, 3, 4], ['unclassified', 'noise','buffer','low','medium','high'],['gray', 'black','skyblue','green','orange','red']):\n            i3=(D3_sub['gt']==gt) & (D3_sub.cycle==cycle) & (D3_sub.atl03_cnf==cnf)\n            ax.plot(D3_sub.x_atc[i3], D3_sub.height[i3],'.', markersize=1, color=color, label=name)\n        ax.set_title(f'cycle={cycle}, gt={gt}')\nhax[1, 0].legend()\n\nfor ax in hax[2,:]:\n    ax.set_xlabel('x_atc, m')\nfor ax in hax[:,0]:\n    ax.set_ylabel('WGS84 height, m')\n\nIf you zoom around a little bit, you’ll see that cycles 7 and 9 have essentially all photons classified as noise, but cycle 8 has a mixture of high-confidence and (for gt==20) medium/low photons.  The low - confidence photons come from places where the surface is unusually dim, probably because of cloud attenuation.\n\n","type":"content","url":"/notebooks/filtering#plotting-atl03-signal-classifications","position":21},{"hierarchy":{"lvl1":"Cloud effects on ICESat-2 data,  and Data Filtering","lvl3":"Relating cloud effects to ATL06 data parameters","lvl2":"Background: ATL06 signal processing"},"type":"lvl3","url":"/notebooks/filtering#relating-cloud-effects-to-atl06-data-parameters","position":22},{"hierarchy":{"lvl1":"Cloud effects on ICESat-2 data,  and Data Filtering","lvl3":"Relating cloud effects to ATL06 data parameters","lvl2":"Background: ATL06 signal processing"},"content":"Our problem comes when the ground return is not strong enough to trigger the signal finder, and we start to see triggers associated with:\n\nCloud tops\n\nRandom clusterings of background photons\n\nThese should both be statistically distinct from surface returns because:\n\nThe returns are less intense than a high-quality surface return\n\nThe photons are more widely vertcally spread than those in surface returns\n\nThe surface window cannot converge on a small vertical window around the surface\n\nSurface heights and slopes are not consistent between adjacent segments\n\nThere are a few ATL06 parameters that help quantify these distinctions.\n\nh_li_sigma : the estimated error in the surface-height estimate\n\nn_fit_photons : The number of photons found in each segment\n\nw_surface_window_final : The size of the converged surface window\n\nh_robust_sprd : A percentile-based estimate of the spread of the photons, corrected for background\n\nsnr : the observed signal-to-noise ratio for the selected photons\n\nsnr_significance : The estimated probability that a random clustering of photons would produce the observed SNR\n\ndh_fit_dx : the along-track segment slope\n\nr_eff : the effective reflectance of the surface\n\nThere’s one more parameter that puts a few of these ideas together, in /gtxx/land_ice_segments:\n\natl06_quality_summary : a combination of parameters (h_li_sigma, n_fit_photons/w_surface_window_final, and signal_selection_source).  Zero indicates a good segment, 1 indicates a possibly bad segment.\n\nFor most purposes selecting those points for which atl06_quality_summary==0 will filter out most of the bad returns.  Let’s regenerate the map of Cook ice shelf to see how this works:\n\nplt.figure()\nax_scat_clean = plt.gca()\nplt.imshow(shaded_relief_img['data'], extent=shaded_relief_img['extent'])\n\nxx=np.array(D6.geometry.x)\nyy=np.array(D6.geometry.y)\nhh = np.array(D6.h_li)\nqq = np.array(D6.atl06_quality_summary)\n\n# sort the data by abs(height) to make the outliers show up\nii=np.argsort(np.abs(hh))\n# here is where we filter out the atl06_quality_summary==1 points\nii=ii[np.isfinite(hh[ii]) & (qq[ii]==0)]\nh_scat_clean=plt.scatter(xx[ii], yy[ii], 3,  c=hh[ii], clim=[-200, 200], cmap='RdBu')\nplt.colorbar(h_scat_clean, label='h_li', extend='both')\n\n\nPresto!  all of the too-high and too-low returns from the first map are gone!\n\n\n\n","type":"content","url":"/notebooks/filtering#relating-cloud-effects-to-atl06-data-parameters","position":23},{"hierarchy":{"lvl1":"Cloud effects on ICESat-2 data,  and Data Filtering","lvl3":"Summary","lvl2":"Background: ATL06 signal processing"},"type":"lvl3","url":"/notebooks/filtering#summary","position":24},{"hierarchy":{"lvl1":"Cloud effects on ICESat-2 data,  and Data Filtering","lvl3":"Summary","lvl2":"Background: ATL06 signal processing"},"content":"We have taken a look at a location in Antarctica where ICESat-2 has (mostly) successfully measured surface elevations over an ice shelf.  The default code in the cells shows an example for one track, but by switching the ‘interactive’ variable above, you should be able to find different kinds features in the data.\n\nIf you have time, take a few minutes to go back to the first cell after Getting ATL03 data for a problematic track and set ‘interactive’ to True. Then you can try zooming in on the map to identify the different tracks, and downloading the ATL03 to go with them (see the cell marked “select your track here”). You should be able to find:* Clouds\n* Crevasses\n* Rifts in the ice shelf\n* Sea ice or open water.","type":"content","url":"/notebooks/filtering#summary","position":25},{"hierarchy":{"lvl1":"Geospatial Transforms"},"type":"lvl1","url":"/notebooks/geospatial-transforms","position":0},{"hierarchy":{"lvl1":"Geospatial Transforms"},"content":"","type":"content","url":"/notebooks/geospatial-transforms","position":1},{"hierarchy":{"lvl1":"Geospatial Transforms","lvl2":"Author(s)"},"type":"lvl2","url":"/notebooks/geospatial-transforms#author-s","position":2},{"hierarchy":{"lvl1":"Geospatial Transforms","lvl2":"Author(s)"},"content":"Tyler Sutterley, Hannah Besso, Scott Henderson, David Shean","type":"content","url":"/notebooks/geospatial-transforms#author-s","position":3},{"hierarchy":{"lvl1":"Geospatial Transforms","lvl2":"Existing Notebooks"},"type":"lvl2","url":"/notebooks/geospatial-transforms#existing-notebooks","position":4},{"hierarchy":{"lvl1":"Geospatial Transforms","lvl2":"Existing Notebooks"},"content":"Geospatial Transforms","type":"content","url":"/notebooks/geospatial-transforms#existing-notebooks","position":5},{"hierarchy":{"lvl1":"Geospatial Transforms","lvl2":"Learning Outcomes"},"type":"lvl2","url":"/notebooks/geospatial-transforms#learning-outcomes","position":6},{"hierarchy":{"lvl1":"Geospatial Transforms","lvl2":"Learning Outcomes"},"content":"Review fundamental concepts of geospatial coordinate reference systems (CRS)\n\nLearn how to access CRS metadata\n\nLearn basic coordinate transformations relevant to ICESat-2\n\nICESat-2 elevations are spatial point data. Spatial data contains information about where on the surface of the Earth a certain feature is located, and there are many different ways to define this location. While this seems straightforward, two main characteristics of the Earth make defining locations difficult:\n\nEarth is 3-dimensional (working with spatial data would be a lot easier if the world were flat)!\n\nPaper maps and computer screens are flat, which causes issues when we try to use them to display rounded shapes (like the Earth’s surface). Making things even more difficult, the irregular shape of the Earth means there is no one perfect model of its surface on which we could place our spatial data points! Instead, we’re left with many models of the Earth’s surface that are optimized for different locations and purposes.\n\nimport pyproj\nimport warnings\nimport numpy as np\nimport rioxarray\nimport xarray as xr\nimport earthaccess\nimport geodatasets\nimport geopandas as gpd\nimport shapely.geometry\nimport matplotlib.pyplot as plt\nfrom mpl_toolkits import mplot3d\nwarnings.filterwarnings('ignore')\n\n%matplotlib inline\n\nIn this notebook, we will explore coordinate systems, map projections, geophysical concepts and available geospatial software tools.\n\nWe’re going to use \n\ngeopandas, \n\nxarray, and \n\nmatplotlib for visualization.\n\ngeopandas is built on top of other great computing and geospatial tools, which will make our lives easier on this notebook.\n\nnumpy: Scientific Computing Tools For Python\n\npandas: Python Data Analysis Library\n\nshapely: PostGIS-ish operations outside a database context for Python\n\nGEOS: geometry, spatial operations\n\nGDAL/OGR: Pythonic interface to the Geospatial Data Abstraction Library (GDAL)\n\nfiona: Python wrapper for vector data access functions from the OGR library\n\nPROJ: cartographic projection and coordinate transformation library\n\npyproj: Python interface to PROJ library\n\n","type":"content","url":"/notebooks/geospatial-transforms#learning-outcomes","position":7},{"hierarchy":{"lvl1":"Geospatial Transforms","lvl2":"Let’s Start by Making a Map"},"type":"lvl2","url":"/notebooks/geospatial-transforms#lets-start-by-making-a-map","position":8},{"hierarchy":{"lvl1":"Geospatial Transforms","lvl2":"Let’s Start by Making a Map"},"content":"Q: Why are maps a good method to communicate geographic data?\n\n### geopandas vector data from geodatasets\nworld = gpd.read_file(geodatasets.get_path('naturalearth.land'))\nworld.head()\n\nfig,ax1 = plt.subplots(num=1, figsize=(10,4.55))\nminlon,maxlon,minlat,maxlat = (-180,180,-90,90)\nworld.plot(ax=ax1, color='0.8', edgecolor='none')\n# set x and y limits\nax1.set_xlim(minlon,maxlon)\nax1.set_ylim(minlat,maxlat)\nax1.set_aspect('equal', adjustable='box')\n# add x and y labels\nax1.set_xlabel('Longitude')\nax1.set_ylabel('Latitude')\n# adjust subplot and show\nfig.subplots_adjust(left=0.06,right=0.98,bottom=0.08,top=0.98)\n\n","type":"content","url":"/notebooks/geospatial-transforms#lets-start-by-making-a-map","position":9},{"hierarchy":{"lvl1":"Geospatial Transforms","lvl2":"Geographic Coordinate Systems"},"type":"lvl2","url":"/notebooks/geospatial-transforms#geographic-coordinate-systems","position":10},{"hierarchy":{"lvl1":"Geospatial Transforms","lvl2":"Geographic Coordinate Systems"},"content":"Locations on Earth are usually specified in a geographic coordinate system consisting of\n\nLongitude specifies the angle east and west from the Prime Meridian (102 meters east of the Royal Observatory at Greenwich)\n\nLatitude specifies the angle north and south from the Equator\n\nThe map above projects geographic data from the Earth’s 3-dimensional geometry on to a flat surface.  \n\nThe three common types of projections are cylindric, conic and planar.  Each type is a different way of flattening the Earth’s geometry into 2-dimensional space.\n\nCylindric\n\nConic\n\nPlanar\n\n\n\n\n\n\n\nThe above map is in an Equirectangular Projection (Plate Carrée), where latitude and longitude are equally spaced.  Equirectangular is cylindrical projection, which has benefits as latitudes and longitudes form straight lines.\n\nWarning\n\nWhile simple conceptually, equirectangular projections distort both shape and distance, particularly at higher latitudes! So it is not a great choice for data analysis.\n\nTo illustrate distortion on this map below 👇, we’ve colored the normalized grid area at different latitudes below:\n\nfig,ax1 = plt.subplots(num=1, figsize=(10.375,5.0))\nminlon,maxlon,minlat,maxlat = (-180,180,-90,90)\ndlon,dlat = (1.0,1.0)\nlongitude = np.arange(minlon,maxlon+dlon,dlon)\nlatitude = np.arange(minlat,maxlat+dlat,dlat)\n# calculate and plot grid area\ngridlon,gridlat = np.meshgrid(longitude, latitude)\nim = ax1.imshow(np.cos(gridlat*np.pi/180.0),\n    extent=(minlon,maxlon,minlat,maxlat), \n    interpolation='nearest',\n    cmap=plt.get_cmap('plasma'),\n    origin='lower')\n# add coastlines\nworld.plot(ax=ax1, color='none', edgecolor='black')\n# set x and y limits\nax1.set_xlim(minlon,maxlon)\nax1.set_ylim(minlat,maxlat)\nax1.set_aspect('equal', adjustable='box')\n# add x and y labels\nax1.set_xlabel('Longitude')\nax1.set_ylabel('Latitude')\n# add colorbar\ncbar = plt.colorbar(im, cax=fig.add_axes([0.92, 0.08, 0.025, 0.90]))\ncbar.ax.set_ylabel('Normalized Grid Area')\ncbar.solids.set_rasterized(True)\n# adjust subplot and show\nfig.subplots_adjust(left=0.06,right=0.9,bottom=0.08,top=0.98)\n\n","type":"content","url":"/notebooks/geospatial-transforms#geographic-coordinate-systems","position":11},{"hierarchy":{"lvl1":"Geospatial Transforms","lvl3":"The Components of a Coordinate Reference System (CRS):","lvl2":"Geographic Coordinate Systems"},"type":"lvl3","url":"/notebooks/geospatial-transforms#the-components-of-a-coordinate-reference-system-crs","position":12},{"hierarchy":{"lvl1":"Geospatial Transforms","lvl3":"The Components of a Coordinate Reference System (CRS):","lvl2":"Geographic Coordinate Systems"},"content":"Projection Information: the mathematical equation used to flatten objects that are on a round surface (e.g. the earth) so you can view them on a flat surface (e.g. your computer screens or a paper map).\n\nCoordinate System: the X, Y, and Z grid upon which your data is overlaid and how you define where a point is located in space.\n\nHorizontal and vertical units: The units used to define the grid along the x, y (and z) axis.\n\nDatum: A modeled version of the shape of the earth which defines the origin used to place the coordinate system in space.\n\n👆 Borrowed from \n\nEarth Data Science Coursework\n\n","type":"content","url":"/notebooks/geospatial-transforms#the-components-of-a-coordinate-reference-system-crs","position":13},{"hierarchy":{"lvl1":"Geospatial Transforms","lvl3":"Map Projections","lvl2":"Geographic Coordinate Systems"},"type":"lvl3","url":"/notebooks/geospatial-transforms#map-projections","position":14},{"hierarchy":{"lvl1":"Geospatial Transforms","lvl3":"Map Projections","lvl2":"Geographic Coordinate Systems"},"content":"There is no perfect projection for all purposes\n\nNot all maps are good for ocean or land navigation\n\nNot all projections are good for polar mapping\n\nEvery projection will distort either shape, area, distance or direction:\n\nconformal projections minimize distortion in shape\n\nequal-area projections minimize distortion in area\n\nequidistant projections minimize distortion in distance\n\ntrue-direction projections minimize distortion in direction\n\nWhile there are \n\nprojections that are better suited for specific purposes, \n\nchoosing a map projection is a bit of an art 🦋\n\n👆 Obligatory \n\nxkcd\n\nQ: What is your favorite projection? 🌎\n\nQ: What projections do you use in your research? 🌏\n\n","type":"content","url":"/notebooks/geospatial-transforms#map-projections","position":15},{"hierarchy":{"lvl1":"Geospatial Transforms","lvl4":"Determine your data’s CRS","lvl3":"Map Projections","lvl2":"Geographic Coordinate Systems"},"type":"lvl4","url":"/notebooks/geospatial-transforms#determine-your-datas-crs","position":16},{"hierarchy":{"lvl1":"Geospatial Transforms","lvl4":"Determine your data’s CRS","lvl3":"Map Projections","lvl2":"Geographic Coordinate Systems"},"content":"Using \n\ngeopandas, we can get CRS information about our data:\n\nworld.crs\n\nThere are many different ways of \n\ndetailing a coordinate reference system (CRS).  Three common CRS formats are:\n\nWell-Known Text (WKT): can describe any coordinate reference system and is the standard for a lot of softwareGEOGCS[\"WGS 84\",\n    DATUM[\"WGS_1984\",\n        SPHEROID[\"WGS 84\",6378137,298.257223563,\n            AUTHORITY[\"EPSG\",\"7030\"]],\n        AUTHORITY[\"EPSG\",\"6326\"]],\n    PRIMEM[\"Greenwich\",0,\n        AUTHORITY[\"EPSG\",\"8901\"]],\n    UNIT[\"degree\",0.01745329251994328,\n        AUTHORITY[\"EPSG\",\"9122\"]],\n    AUTHORITY[\"EPSG\",\"4326\"]]\n\nPROJ string: shorter with some less information but can also describe any coordinate reference system+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs \n\nEPSG code: simple and easy to rememberEPSG:4326\n\nEPSG: European Petroleum Survey Group. Back in the day, this group created codes to standardize how different reference systems were referred to, and now EPSG codes are widely used in geospatial work! There are several websites that let you navigate the entire EPSG database: \n\nhttps://​epsg​.io​/4326\n\nImportant\n\nIf CRS metadata on any products isn’t included within the data product, make sure it’s in the right projection and datum. Often metadata reports or readme files will provide this information.\n\n","type":"content","url":"/notebooks/geospatial-transforms#determine-your-datas-crs","position":17},{"hierarchy":{"lvl1":"Geospatial Transforms","lvl3":"CRS Transforms of GeoDataFrames","lvl2":"Geographic Coordinate Systems"},"type":"lvl3","url":"/notebooks/geospatial-transforms#crs-transforms-of-geodataframes","position":18},{"hierarchy":{"lvl1":"Geospatial Transforms","lvl3":"CRS Transforms of GeoDataFrames","lvl2":"Geographic Coordinate Systems"},"content":"The Coordinate Reference System of a \n\ngeopandas GeoDataFrame can be transformed to another using the to_crs() function.  The to_crs() function can import different forms including WKT strings, PROJ strings, EPSG codes and pyproj CRS objects.\n\nWarning\n\nGeoDataFrames must have an associated CRS before converting them to a new CRS\n\nworld_antarctic = world[world.scalerank == 0].to_crs(3031)\n\n","type":"content","url":"/notebooks/geospatial-transforms#crs-transforms-of-geodataframes","position":19},{"hierarchy":{"lvl1":"Geospatial Transforms","lvl5":"Did it work?","lvl3":"CRS Transforms of GeoDataFrames","lvl2":"Geographic Coordinate Systems"},"type":"lvl5","url":"/notebooks/geospatial-transforms#did-it-work","position":20},{"hierarchy":{"lvl1":"Geospatial Transforms","lvl5":"Did it work?","lvl3":"CRS Transforms of GeoDataFrames","lvl2":"Geographic Coordinate Systems"},"content":"\n\nworld_antarctic.crs\n\n🎉🎉🎉\n\n","type":"content","url":"/notebooks/geospatial-transforms#did-it-work","position":21},{"hierarchy":{"lvl1":"Geospatial Transforms","lvl4":"Let’s plot our new Antarctic map","lvl3":"CRS Transforms of GeoDataFrames","lvl2":"Geographic Coordinate Systems"},"type":"lvl4","url":"/notebooks/geospatial-transforms#lets-plot-our-new-antarctic-map","position":22},{"hierarchy":{"lvl1":"Geospatial Transforms","lvl4":"Let’s plot our new Antarctic map","lvl3":"CRS Transforms of GeoDataFrames","lvl2":"Geographic Coordinate Systems"},"content":"🐧🐧🐧\n\nfig,ax3 = plt.subplots(num=3, figsize=(10,7.5))\nxmin,xmax,ymin,ymax = (-3100000,3100000,-2600000,2600000)\n# add Antarctic coastlines\nworld_antarctic.plot(ax=ax3, color='0.8', edgecolor='none')\n# set x and y limits\nax3.set_xlim(xmin,xmax)\nax3.set_ylim(ymin,ymax)\nax3.set_aspect('equal', adjustable='box')\n# adjust subplot and show\nfig.subplots_adjust(left=0.06,right=0.98,bottom=0.08,top=0.98)\n\nStereographic projections are common for mapping in polar regions.  A lot of legacy data products for both Greenland and Antarctica use polar stereographic projections. Some other polar products, such as NSIDC EASE/EASE-2 grids, are in equal-area projections.\n\nWarning\n\nStereographic projections are conformal, preserving angles but not distances or areas.  Equal-area map projection cannot be conformal, nor can a conformal map projection be equal-area.\n\nHere, we’ll use the transform to get the latitude and longitude coordinates of points in this projection (an inverse tranformation), and get the polar stereographic coordinates for plotting a circle around the standard parallel (-71°) of this projection (a forward transformation).\n\nThe standard parallel of a stereographic projection is the latitude where there is no scale distortion.\n\ndef scale_factors(\n        lat: np.ndarray,\n        flat: float = 1.0/298.257223563,\n        reference_latitude: float = 70.0,\n        metric: str = 'area'\n    ):\n    \"\"\"\n    Calculates scaling factors to account for polar stereographic\n    distortion including special case of at the exact pole\n\n    Parameters\n    ----------\n    lat: np.ndarray\n        latitude (degrees north)\n    flat: float, default 1.0/298.257223563\n        ellipsoidal flattening\n    reference_latitude: float, default 70.0\n        reference latitude (true scale latitude)\n    metric: str, default 'area'\n        metric to calculate scaling factors\n\n            - ``'distance'``: scale factors for distance\n            - ``'area'``: scale factors for area\n\n    Returns\n    -------\n    scale: np.ndarray\n        scaling factors at input latitudes\n    \"\"\"\n    assert metric.lower() in ['distance', 'area'], 'Unknown metric'\n    # convert latitude from degrees to positive radians\n    theta = np.abs(lat)*np.pi/180.0\n    # convert reference latitude from degrees to positive radians\n    theta_ref = np.abs(reference_latitude)*np.pi/180.0\n    # square of the eccentricity of the ellipsoid\n    # ecc2 = (1-b**2/a**2) = 2.0*flat - flat^2\n    ecc2 = 2.0*flat - flat**2\n    # eccentricity of the ellipsoid\n    ecc = np.sqrt(ecc2)\n    # calculate ratio at input latitudes\n    m = np.cos(theta)/np.sqrt(1.0 - ecc2*np.sin(theta)**2)\n    t = np.tan(np.pi/4.0 - theta/2.0)/((1.0 - ecc*np.sin(theta)) / \\\n        (1.0 + ecc*np.sin(theta)))**(ecc/2.0)\n    # calculate ratio at reference latitude\n    mref = np.cos(theta_ref)/np.sqrt(1.0 - ecc2*np.sin(theta_ref)**2)\n    tref = np.tan(np.pi/4.0 - theta_ref/2.0)/((1.0 - ecc*np.sin(theta_ref)) / \\\n        (1.0 + ecc*np.sin(theta_ref)))**(ecc/2.0)\n    # distance scaling\n    k = (mref/m)*(t/tref)\n    kp = 0.5*mref*np.sqrt(((1.0+ecc)**(1.0+ecc))*((1.0-ecc)**(1.0-ecc)))/tref\n    if (metric.lower() == 'distance'):\n        # distance scaling\n        scale = np.where(np.isclose(theta, np.pi/2.0), 1.0/kp, 1.0/k)\n    elif (metric.lower() == 'area'):\n        # area scaling\n        scale = np.where(np.isclose(theta, np.pi/2.0), 1.0/(kp**2), 1.0/(k**2))\n    return scale\n\ncrs4326 = pyproj.CRS.from_epsg(4326)    # WGS84\ncrs3031 = pyproj.CRS.from_epsg(3031)    # Antarctic Polar Stereographic\ntransformer = pyproj.Transformer.from_crs(crs4326, crs3031, always_xy=True)\n\nfig,ax3 = plt.subplots(num=3, figsize=(10,7.5))\nxmin,xmax,ymin,ymax = (-3100000,3100000,-2600000,2600000)\ndx,dy = (10000,10000)\n# create a grid of polar stereographic points\nX = np.arange(xmin,xmax+dx,dx)\nY = np.arange(ymin,ymax+dy,dy)\ngridx,gridy = np.meshgrid(X, Y)\n# convert polar stereographic points to latitude/longitude (WGS84)\ngridlon,gridlat = transformer.transform(gridx, gridy,\n    direction=pyproj.enums.TransformDirection.INVERSE)\n# calculate and plot grid area\ncf = crs3031.to_cf()\nflat = 1.0/cf['inverse_flattening']\nsp = cf['standard_parallel']\ngridarea = scale_factors(gridlat, flat=flat, reference_latitude=sp)\nim = ax3.imshow(gridarea,\n    extent=(xmin,xmax,ymin,ymax), \n    interpolation='nearest',\n    cmap=plt.get_cmap('plasma'),\n    origin='lower')\n# add circle around standard parallel\nref_lon = np.arange(360)\nref_lat = np.ones((360))*sp\n# convert latitude/longitude (WGS84) points to polar stereographic\nref_x,ref_y = transformer.transform(ref_lon, ref_lat,\n    direction=pyproj.enums.TransformDirection.FORWARD)\nl, = ax3.plot(ref_x, ref_y, '--', color='w', dashes=(8,4), label='Standard Parallel')\n# add coastlines\nworld_antarctic.plot(ax=ax3, color='none', edgecolor='black')\n# set x and y limits\nax3.set_xlim(xmin,xmax)\nax3.set_ylim(ymin,ymax)\nax3.set_aspect('equal', adjustable='box')\n# add x and y labels\nx_info,y_info = crs3031.axis_info\nax3.set_xlabel('{0} [{1}]'.format(x_info.name,x_info.unit_name))\nax3.set_ylabel('{0} [{1}]'.format(y_info.name,y_info.unit_name))\n# add colorbar\ncbar = plt.colorbar(im, cax=fig.add_axes([0.92, 0.08, 0.025, 0.90]))\ncbar.ax.set_ylabel('Normalized Grid Area')\ncbar.solids.set_rasterized(True)\n# add legend\nlgd = ax3.legend(loc=4,frameon=False)\nlgd.get_frame().set_alpha(1.0)\nfor line in lgd.get_lines():\n    line.set_linewidth(6)\nfor i,text in enumerate(lgd.get_texts()):\n    text.set_color(l.get_color())\nfig.subplots_adjust(left=0.06,right=0.9,bottom=0.08,top=0.98)\n\nWhy is there a black line to the pole?  Because this coastline was reprojected from a Equirectangular projection.  That’s the bottom of the Equirectangular map.\n\n","type":"content","url":"/notebooks/geospatial-transforms#lets-plot-our-new-antarctic-map","position":23},{"hierarchy":{"lvl1":"Geospatial Transforms","lvl3":"Reproject other data","lvl2":"Geographic Coordinate Systems"},"type":"lvl3","url":"/notebooks/geospatial-transforms#reproject-other-data","position":24},{"hierarchy":{"lvl1":"Geospatial Transforms","lvl3":"Reproject other data","lvl2":"Geographic Coordinate Systems"},"content":"Often you have other data or contextual information that you need to get into your data’s CRS to visualize.\n\nFor example, McMurdo Research Station is at (-77.846° S, 166.676° E). How to we plot this without using geopandas?\n\npyproj transform objects can be used to change the Coordinate Reference System of arrays\n\nImportant\n\nNote that most Python libraries do NOT check to make sure your data shares the same CRS. Plotting libraries are not “CRS aware” and will happily plot things in incorrect positions. It is up to you to make sure your positions are accurate.\n\nThis will transform our latitude and longitude coordinates into coordinates in meters from the map origin\n\n# convert location of McMurdo station to polar stereographic\nMcMurdo = (166.676, -77.846)\nMcMurdo_3031 = transformer.transform(*McMurdo)\n\nfig, ax = plt.subplots()\nworld_antarctic.plot(ax=ax, color='0.8', edgecolor='none')\nax.plot(McMurdo_3031[0], McMurdo_3031[1], 'ro')\n# set x and y limits\nxmin,xmax,ymin,ymax = (-3100000,3100000,-2600000,2600000)\nax.set_xlim(xmin,xmax)\nax.set_ylim(ymin,ymax)\nax.set_aspect('equal', adjustable='box')\nax.set_title(f'McMurdo Station {McMurdo}');\n\n","type":"content","url":"/notebooks/geospatial-transforms#reproject-other-data","position":25},{"hierarchy":{"lvl1":"Geospatial Transforms","lvl2":"Reference Systems and Datums"},"type":"lvl2","url":"/notebooks/geospatial-transforms#reference-systems-and-datums","position":26},{"hierarchy":{"lvl1":"Geospatial Transforms","lvl2":"Reference Systems and Datums"},"content":"Coordinates are defined to be in reference to the origins of the coordinate system\n\nHorizontally, coordinates are in reference to the Equator and the Prime Meridian\n\nVertically, heights are in reference to a \n\ndatum\n\nTwo common vertical datums are the reference ellipsoid and the reference geoid.\n\nWhat are they and what is the difference?\n\nTo ﬁrst approximation, the Earth is a sphere (🐄) with a radius of 6371 kilometers.\n\nTo a better approximation, the Earth is a slightly flattened ellipsoid with the polar axis 22 kilometers shorter than the equatorial axis.\n\nTo an even better approximation, the Earth’s shape can be described using a reference geoid, which undulates 10s of meters above and below the reference ellipsoid. The difference in height between the ellipsoid and the geoid are known as geoid heights.\n\nThe geoid is an equipotential surface, perpendicular to the force of gravity at all points and with a constant geopotential. Reference ellipsoids and geoids are both created to largely coincide with mean sea level if the oceans were at rest.\n\nAn ellipsoid can be considered a simplification of a geoid.\n\nPROJ hosts grids for shifting both the horizontal and vertical datum, such as gridded \n\nEGM2008 geoid height values\n\nTip\n\nIf you work with vertical datum offset grids regularly or offline: use the projsync command\nprojsync --all --quiet\n\nAdditional geoid height values can be calculated at the \n\nInternational Centre for Global Earth Models (ICGEM)\n\nVertically exaggerated, the Earth is sort of like a potato 🥔\n\n","type":"content","url":"/notebooks/geospatial-transforms#reference-systems-and-datums","position":27},{"hierarchy":{"lvl1":"Geospatial Transforms","lvl2":"Why Does This Matter?"},"type":"lvl2","url":"/notebooks/geospatial-transforms#why-does-this-matter","position":28},{"hierarchy":{"lvl1":"Geospatial Transforms","lvl2":"Why Does This Matter?"},"content":"ICESat-2 elevations are in reference to a specific version of the WGS84 ellipsoid. There are different “realizations” of the WGS84 ellipsoid. The accuracy of your positioning improves when the specific realization, rather than the ensemble, is used!\n\nTip\n\nRecall above we saw EPSG:4326 used “Datum: World Geodetic System 1984 ensemble”, which is common for older or low-accuracy datasets. \n\nRead more here\n\nICESat-2 data products also include geoid heights from the \n\nEGM2008 geoid.  Different ground-based, airborne or satellite-derived elevations may use a separate datum entirely.\n\nImportant\n\nElevations have to be in the same reference frame when comparing heights.\n\nDifferent datums have different purposes.  Heights above mean sea level are needed for ocean and sea ice heights, and are also commonly used for terrestrial mapping (e.g. as elevations of mountains).  Ellipsoidal heights are commonly used for estimating land ice height change.\n\n\n\nModified from: Tapley, B. D. & M-C. Kim, Applications to Geodesy, Chapt. 10 in Satellite Altimetry and Earth Sciences, ed. by L-L. Fu & A. Cazenave, Academic Press, pp. 371-406, 2001.\n\n","type":"content","url":"/notebooks/geospatial-transforms#why-does-this-matter","position":29},{"hierarchy":{"lvl1":"Geospatial Transforms","lvl3":"Terrestrial Reference System","lvl2":"Why Does This Matter?"},"type":"lvl3","url":"/notebooks/geospatial-transforms#terrestrial-reference-system","position":30},{"hierarchy":{"lvl1":"Geospatial Transforms","lvl3":"Terrestrial Reference System","lvl2":"Why Does This Matter?"},"content":"Locations of satellites are determined in an Earth-centered cartesian coordinate system\n\nX, Y, and Z measurements from the Earth’s center of mass\n\nUp to Release-06, ICESat-2 has been set in the \n\n2014 realization of the International Terrestrial Reference Frame (ITRF). For Release-07 onward, ICESat-2 will be set in the \n\n2020 realization. Other satellite and airborne altimetry missions may be in a different ITRF entirely.\n\nAs opposed to simple vertical offsets, changing the terrestial reference system can involve both \n\ntranslation and rotation of the reference system.  This involves converting from a geographic coordinate system into a Cartesian coordinate system.\n\nLet’s visualize what the Cartesian coordinate system looks like:\n\ndef to_cartesian(lon,lat,h=0.0,a_axis=6378137.0,flat=1.0/298.257223563):\n    \"\"\"\n    Converts geodetic coordinates to Cartesian coordinates\n\n    Inputs:\n        lon: longitude (degrees east)\n        lat: latitude (degrees north)\n\n    Options:\n        h: height above ellipsoid (or sphere)\n        a_axis: semimajor axis of the ellipsoid (default: WGS84)\n            * for spherical coordinates set to radius of the Earth\n        flat: ellipsoidal flattening (default: WGS84)\n            * for spherical coordinates set to 0\n    \"\"\"\n    # verify axes\n    lon = np.atleast_1d(lon)\n    lat = np.atleast_1d(lat)\n    # fix coordinates to be 0:360\n    lon[lon < 0] += 360.0\n    # Linear eccentricity and first numerical eccentricity\n    lin_ecc = np.sqrt((2.0*flat - flat**2)*a_axis**2)\n    ecc1 = lin_ecc/a_axis\n    # convert from geodetic latitude to geocentric latitude\n    dtr = np.pi/180.0\n    # geodetic latitude in radians\n    latitude_geodetic_rad = lat*dtr\n    # prime vertical radius of curvature\n    N = a_axis/np.sqrt(1.0 - ecc1**2.0*np.sin(latitude_geodetic_rad)**2.0)\n    # calculate X, Y and Z from geodetic latitude and longitude\n    X = (N + h) * np.cos(latitude_geodetic_rad) * np.cos(lon*dtr)\n    Y = (N + h) * np.cos(latitude_geodetic_rad) * np.sin(lon*dtr)\n    Z = (N * (1.0 - ecc1**2.0) + h) * np.sin(latitude_geodetic_rad)\n    # return the cartesian coordinates\n    return (X,Y,Z)\n\nfig,ax2 = plt.subplots(num=2, subplot_kw=dict(projection='3d'))\nminlon,maxlon,minlat,maxlat = (-180,180,-90,90)\ndlon,dlat = (10.0,10.0)\nlongitude = np.arange(minlon,maxlon+dlon,dlon)\nlatitude = np.arange(minlat,maxlat+dlat,dlat)\ngridlon,gridlat = np.meshgrid(longitude, latitude)\nheight = np.zeros_like(gridlon)\nX,Y,Z = to_cartesian(gridlon, gridlat, h=height)\nax2.scatter3D(X, Y, Z, c=gridlat)\nplt.show()\n\nYep, that looks like an ellipsoid\n\n","type":"content","url":"/notebooks/geospatial-transforms#terrestrial-reference-system","position":31},{"hierarchy":{"lvl1":"Geospatial Transforms","lvl2":"pyproj CRS Tricks"},"type":"lvl2","url":"/notebooks/geospatial-transforms#pyproj-crs-tricks","position":32},{"hierarchy":{"lvl1":"Geospatial Transforms","lvl2":"pyproj CRS Tricks"},"content":"pyproj CRS objects can:\n\nBe converted to different methods of describing the CRS, such a to a PROJ string or WKT\n\nproj3031 = crs3031.to_proj4()\nwkt3031 = crs3031.to_wkt()\nassert(crs3031.is_exact_same(pyproj.CRS.from_wkt(wkt3031)))\nprint(proj3031)\n\nProvide information about each coordinate reference system, such as the name, area of use and axes units.\n\nfor EPSG in (3031,3413,5936,6931,6932):\n  crs = pyproj.CRS.from_epsg(EPSG)\n  x_info,y_info = crs.axis_info\n  print(f'{crs.name} ({EPSG})')\n  print(f'\\tRegion: {crs.area_of_use.name}')\n  print(f'\\tScope: {crs.scope}')\n  print(f'\\tAxes: {x_info.name} ({x_info.unit_name}), {y_info.name} ({y_info.unit_name})')\n\nGet coordinate reference system metadata for including in files\n\nprint('Climate and Forecast (CF) conventions')\ncf = pyproj.CRS.from_epsg(5936).to_cf()\nfor key,val in cf.items():\n    print(f'\\t{key}: {val}')\n\nYou can also manually create a pipeline to do coordinate reference systems conversions. These are like recipes for converting coordinate reference systems.\n\nRemember converting latitude and longitude into cartesian coordinates? We can do that with a pipeline!\n\nfig,ax2 = plt.subplots(num=2, subplot_kw=dict(projection='3d'))\nminlon,maxlon,minlat,maxlat = (-180,180,-90,90)\ndlon,dlat = (10.0,10.0)\nlongitude = np.arange(minlon,maxlon+dlon,dlon)\nlatitude = np.arange(minlat,maxlat+dlat,dlat)\ngridlon,gridlat = np.meshgrid(longitude, latitude)\nheight = np.zeros_like(gridlon)\npipeline = \"\"\"+proj=pipeline\n    +step +proj=unitconvert +xy_in=deg +z_in=m +xy_out=rad +z_out=m\n    +step +proj=cart +ellps=WGS84\"\"\"\ntransform = pyproj.Transformer.from_pipeline(pipeline)\nX,Y,Z = transform.transform(gridlon,gridlat,height)\nax2.scatter3D(X,Y,Z, c=gridlat)\nplt.show()\n\nprojinfo can list possible pipelines for converting between coordinate reference systems\n\nHere is the pipeline PROJ chose to convert from latitude and longitude into polar stereographic\n\n!projinfo -s EPSG:4326 -t EPSG:3031 -o PROJ --hide-ballpark --spatial-test intersects\n\n","type":"content","url":"/notebooks/geospatial-transforms#pyproj-crs-tricks","position":33},{"hierarchy":{"lvl1":"Geospatial Transforms","lvl2":"Geospatial Data"},"type":"lvl2","url":"/notebooks/geospatial-transforms#geospatial-data","position":34},{"hierarchy":{"lvl1":"Geospatial Transforms","lvl2":"Geospatial Data"},"content":"What is Geospatial Data?  Data that has location information associated with it.\n\nGeospatial data comes in two flavors: vector and raster\n\nVector data is composed of points, lines, and polygons\n\nRaster data is composed of individual grid cells\n\n\n\nVector vs. Raster from \n\nPlanet\n\nQ: When would we use vector over raster?\n\nQ: When would we use raster over vector?\n\nVector data will provide geometric information for every point or vertex in the geometry.\n\nRaster data will provide geometric information for a particular corner, which can be combined with the grid cell sizes and grid dimensions to get the grid cell coordinates.\n\nCommon vector file formats:\n\nGeoJSON\n\nshapefile\n\nGeoPackage\n\nESRI geodatabase\n\nkml/kmz\n\ngeoparquet\n\nCommon raster file formats:\n\nGeoTIFF/cog\n\njpeg\n\npng\n\nFile formats used for both:\n\nnetCDF4\n\nHDF5\n\nzarr\n\nAll geospatial data (raster and vector) should have metadata for extracting the coordinate reference system of the data.  Some of this metadata is not included with the files but can be found in the documentation.\n\nQ: Are you more familiar with using vector or raster data?\n\nQ: Do you more often use GIS software or command-line tools?\n\nThere are different tools for working with raster and vector data.  Some are more advantageous for one data type over the other.\n\nLet’s find the coordinate reference system of some data products using some common geospatial tools.\n\n","type":"content","url":"/notebooks/geospatial-transforms#geospatial-data","position":35},{"hierarchy":{"lvl1":"Geospatial Transforms","lvl3":"Geospatial Data Abstraction Library","lvl2":"Geospatial Data"},"type":"lvl3","url":"/notebooks/geospatial-transforms#geospatial-data-abstraction-library","position":36},{"hierarchy":{"lvl1":"Geospatial Transforms","lvl3":"Geospatial Data Abstraction Library","lvl2":"Geospatial Data"},"content":"The \n\nGeospatial Data Abstraction Library (GDAL/OGR) is a powerful piece of software.\n\nIt can read, write and query a wide variety of raster and vector geospatial data formats, transform the coordinate system of images, and manipulate other forms of geospatial data.\n\nIt is the backbone of a large suite of geospatial libraries and programs.\n\nThere are a number of wrapper libraries (e.g. \n\nrasterio, \n\nrioxarray, \n\nshapely, \n\nfiona) that provide more user-friendly interfaces with GDAL functionality.\n\nSimilar to pyproj CRS objects, GDAL SpatialReference functions can provide a lot of information about a particular Coordinate Reference System\n\nWith GDAL, we can access raster and vector data that are available over network-based file systems and virtual file systems\n\n/vsicurl/: http/https/ftp files\n\n/vsis3/: AWS S3 files\n\n/vsigs/: Google Cloud Storage files\n\n/vsizip/: zip archives\n\n/vsitar/: tar/tgz archives\n\n/vsigzip/: gzipped files\n\nThese can be chained together to access compressed files over networks\n\n","type":"content","url":"/notebooks/geospatial-transforms#geospatial-data-abstraction-library","position":37},{"hierarchy":{"lvl1":"Geospatial Transforms","lvl3":"Vector Data","lvl2":"Geospatial Data"},"type":"lvl3","url":"/notebooks/geospatial-transforms#vector-data","position":38},{"hierarchy":{"lvl1":"Geospatial Transforms","lvl3":"Vector Data","lvl2":"Geospatial Data"},"content":"We can use GDAL virtual file systems to access the intermediate resolution shapefile of the \n\nGlobal Self-consistent, Hierarchical, High-resolution Geography Database from its https server.\n\nogrinfo is a GDAL/OGR tool for inspecting vector data.  We’ll get a summary (-so) of all data (-al) in read-only mode (-ro).\n\n!ogrinfo -so -al -ro /vsizip//vsicurl/http://www.soest.hawaii.edu/pwessel/gshhg/gshhg-shp-2.3.7.zip/GSHHS_shp/i/GSHHS_i_L1.shp\n\n","type":"content","url":"/notebooks/geospatial-transforms#vector-data","position":39},{"hierarchy":{"lvl1":"Geospatial Transforms","lvl3":"Reading Vector Data","lvl2":"Geospatial Data"},"type":"lvl3","url":"/notebooks/geospatial-transforms#reading-vector-data","position":40},{"hierarchy":{"lvl1":"Geospatial Transforms","lvl3":"Reading Vector Data","lvl2":"Geospatial Data"},"content":"\n\ngshhg_i = gpd.read_file('/vsizip//vsicurl/http://www.soest.hawaii.edu/pwessel/gshhg/gshhg-shp-2.3.7.zip/GSHHS_shp/i/GSHHS_i_L1.shp')\nprint(gshhg_i.crs)\n\nLet’s use these coastlines to make a plot of Greenland in a \n\nPolar Stereographic projection (EPSG:3413)\n\nfig,ax4 = plt.subplots(num=4, figsize=(9,9))\ncrs3413 = pyproj.CRS.from_epsg(3413)\nxmin,xmax,ymin,ymax = (-1530000, 1610000,-3600000, -280000)\n# add coastlines\ngshhg_i.to_crs(crs3413).plot(ax=ax4, color='0.8', edgecolor='none')\n# set x and y limits\nax4.set_xlim(xmin,xmax)\nax4.set_ylim(ymin,ymax)\nax4.set_aspect('equal', adjustable='box')\n# add x and y labels\nx_info,y_info = crs3413.axis_info\nax4.set_xlabel('{0} [{1}]'.format(x_info.name,x_info.unit_name))\nax4.set_ylabel('{0} [{1}]'.format(y_info.name,y_info.unit_name))\n# adjust subplot and show\nfig.subplots_adjust(left=0.06,right=0.98,bottom=0.08,top=0.98)\n\nEven with intermediate resolution, we can add much better coastlines than the ones that ship with geodatasets!\n\nAll coastline resolutions available:\n\nc: coarse\n\nl: low\n\ni: intermediate\n\nh: high\n\nf: full\n\n","type":"content","url":"/notebooks/geospatial-transforms#reading-vector-data","position":41},{"hierarchy":{"lvl1":"Geospatial Transforms","lvl3":"Raster Data","lvl2":"Geospatial Data"},"type":"lvl3","url":"/notebooks/geospatial-transforms#raster-data","position":42},{"hierarchy":{"lvl1":"Geospatial Transforms","lvl3":"Raster Data","lvl2":"Geospatial Data"},"content":"The same virtual file system commands can be used with raster images.\n\nLet’s inspect some elevation data from the COP3 DEM.\n\ngdalinfo allows us to inspect the format, size, geolocation and Coordinate Reference System of raster imagery.  Appending the -proj4 option will additionally output the PROJ string associated with this geotiff image.\n\n! gdalinfo -proj4 \"https://opentopography.s3.sdsc.edu/raster/COP30/COP30_hh/Copernicus_DSM_10_N47_00_W123_00_DEM.tif\"\n\n","type":"content","url":"/notebooks/geospatial-transforms#raster-data","position":43},{"hierarchy":{"lvl1":"Geospatial Transforms","lvl3":"Reading Raster Data","lvl2":"Geospatial Data"},"type":"lvl3","url":"/notebooks/geospatial-transforms#reading-raster-data","position":44},{"hierarchy":{"lvl1":"Geospatial Transforms","lvl3":"Reading Raster Data","lvl2":"Geospatial Data"},"content":"We can read geotiff files using rasterio, which is a wrapper of GDAL for reading raster data\n\nurl = \"https://opentopography.s3.sdsc.edu/raster/COP30/COP30_hh/Copernicus_DSM_10_N47_00_W123_00_DEM.tif\"\nds = rioxarray.open_rasterio(url, masked=True).isel(band=0)\nds\n\n# plot location of DEM\nfig,ax1 = plt.subplots(num=1, figsize=(10.375,5.0))\nminlon,maxlon,minlat,maxlat = (-180,180,-90,90)\n# add geometry of image\nxmin, ymin, xmax, ymax = ds.rio.transform_bounds('EPSG:4326')\nbox = gpd.GeoSeries(shapely.geometry.box(xmin, ymin, xmax, ymax))\nbox.plot(ax=ax1,facecolor='red',edgecolor='red',alpha=0.5)\n# add annotation\nax1.annotate(\"Here!\", xy=(xmin,ymin), xytext=(xmin-15.0, ymin-15.0),\n    arrowprops=dict(arrowstyle=\"->\",connectionstyle=\"arc3,rad=0.3\",color='red'),\n    bbox=dict(boxstyle=\"square\", fc=\"w\", ec=\"w\", pad=0.1),\n    color='red', weight='bold', xycoords='data', ha='center')\n# add GSHHG coastlines\ngshhg_i.plot(ax=ax1, color='none', edgecolor='black')\n# set x and y limits\nax1.set_xlim(minlon,maxlon)\nax1.set_ylim(minlat,maxlat)\nax1.set_aspect('equal', adjustable='box')\n# add x and y labels\nax1.set_xlabel('Longitude')\nax1.set_ylabel('Latitude')\n# adjust subplot and show\nfig.subplots_adjust(left=0.06,right=0.98,bottom=0.08,top=0.98)\n\nOkay! It covers Western Washington and the University of Washington.\n\nLet’s see what this DEM looks like for this granule\n\n# create figure axis\nfig, ax = plt.subplots(num=5)\nim = ds.plot.imshow(interpolation='nearest',\n    vmin=ds.values.min(), vmax=ds.values.max(),\n    cmap=plt.cm.gray_r)\n# turn of frame and ticks\nax.set_frame_on(False)\nax.set_xticks([])\nax.set_yticks([])\nplt.axis('off')\n# adjust subplot within figure\nfig.subplots_adjust(left=0, bottom=0, right=1, top=1, wspace=None, hspace=None)\n\n","type":"content","url":"/notebooks/geospatial-transforms#reading-raster-data","position":45},{"hierarchy":{"lvl1":"Geospatial Transforms","lvl3":"Warping Raster Imagery","lvl2":"Geospatial Data"},"type":"lvl3","url":"/notebooks/geospatial-transforms#warping-raster-imagery","position":46},{"hierarchy":{"lvl1":"Geospatial Transforms","lvl3":"Warping Raster Imagery","lvl2":"Geospatial Data"},"content":"Warping transfers a raster image from one Coordinate Reference System (CRS) into another.\n\nWe can use \n\nGDAL to reproject the imagery data into another CRS or change the pixel resolution of the raster image.\n\nGround control points (GCPs) can also be applied to georeference raw maps or imagery.\n\n\n\nRaster Georeferencing from \n\nESRI\n\n","type":"content","url":"/notebooks/geospatial-transforms#warping-raster-imagery","position":47},{"hierarchy":{"lvl1":"Geospatial Transforms","lvl4":"Rasterio Transforms","lvl3":"Warping Raster Imagery","lvl2":"Geospatial Data"},"type":"lvl4","url":"/notebooks/geospatial-transforms#rasterio-transforms","position":48},{"hierarchy":{"lvl1":"Geospatial Transforms","lvl4":"Rasterio Transforms","lvl3":"Warping Raster Imagery","lvl2":"Geospatial Data"},"content":"For every rasterio object, there is an associated affine transform (ds.transform), which allows you to \n\ntransfer from image coordinates to geospatial coordinates.\n\n\nx = A*row + B*col + C\\\\\ny = D*row + E*col + F\n\nAffine Transformation: maps between pixel locations in (row, col) coordinates to (x, y) spatial positions:\n\nx,y = ds.transform*(row,col)\n\nUpper left coordinate:\n\nrow = 0\n\ncol = 0\n\nLower right coordinate:\n\nrow = ds.width\n\ncol = ds.height\n\n\n\nRaster Georeferencing from \n\nESRI\n\nrioxarray does these affine transformations under the hood when reprojecting images. We can use rioxarray to warp our raster image into a lower resolution.\n\n# degrade resolution from 1 arcsecond to 8 arcseconds\ndst_res = 8.0/3600.0\nwarped = ds.rio.reproject(crs4326, resolution=(dst_res,dst_res))\n\n# plot warped DEM\nfig,ax1 = plt.subplots(num=1, figsize=(10.375,5.0))\n# add geometry of image\nim = warped.plot.imshow(ax=ax1, interpolation='nearest',\n    vmin=ds.values.min(), vmax=ds.values.max(),\n    cmap=plt.cm.gray_r)\n# add coastlines\ngshhg_i.plot(ax=ax1, color='none', edgecolor='black')\n# set x and y limits\nax1.set_xlim(warped.x.min(), warped.x.max())\nax1.set_ylim(warped.y.min(), warped.y.max())\nax1.set_aspect('equal', adjustable='box')\n# add x and y labels\nax1.set_xlabel('Longitude')\nax1.set_ylabel('Latitude')\n# adjust subplot and show\nfig.subplots_adjust(left=0.06,right=0.98,bottom=0.08,top=0.98)\n\nTip\n\nwe might have wanted to use the full resolution coastlines!\n\n","type":"content","url":"/notebooks/geospatial-transforms#rasterio-transforms","position":49},{"hierarchy":{"lvl1":"Geospatial Transforms","lvl4":"Saving Raster Data with rioxarray","lvl3":"Warping Raster Imagery","lvl2":"Geospatial Data"},"type":"lvl4","url":"/notebooks/geospatial-transforms#saving-raster-data-with-rioxarray","position":50},{"hierarchy":{"lvl1":"Geospatial Transforms","lvl4":"Saving Raster Data with rioxarray","lvl3":"Warping Raster Imagery","lvl2":"Geospatial Data"},"content":"\n\n# write an array as a raster band\n# copernicus DEM naming convention for spacing:\n# 03: 0.3-arcsecond grid, 04: 0.4-arcsecond grid, 10: 1-arcsecond grid, 30: 3-arcsecond grid\nwarped.rio.to_raster('Copernicus_DSM_80_N47_00_W123_00_DEM.tif', driver='cog')\n\n","type":"content","url":"/notebooks/geospatial-transforms#saving-raster-data-with-rioxarray","position":51},{"hierarchy":{"lvl1":"Geospatial Transforms","lvl2":"Applying Concepts: ICESat-2"},"type":"lvl2","url":"/notebooks/geospatial-transforms#applying-concepts-icesat-2","position":52},{"hierarchy":{"lvl1":"Geospatial Transforms","lvl2":"Applying Concepts: ICESat-2"},"content":"Let’s take what we just learned and apply it to ICESat-2\n\nWe’ll download a granule of ICESat-2 ATL06 land ice heights from the \n\nNational Snow and Ice Data Center (NSIDC).  ATL06 is along-track data stored in an HDF5 file with geospatial coordinates latitude and longtude (WGS84).  Within an ATL06 file, there are six beam groups (gt1l, gt1r, gt2l, gt2r, gt3l, gt3r) that correspond to the orientation of the beams on the ground.\n\n# def build_granule_name(short_name, track, cycle, hemisphere=None, granule=None):\n#     # repeat ground track (RGT)\n#     tttt = str(track).zfill(4)\n#     # orbital cycle\n#     cc = str(cycle).zfill(2)\n#     # ice hemisphere flag (01=north, 02=south) \n#     hh = str(hemisphere).zfill(2) if hemisphere is not None else \"??\"\n#     # granule number (ranges from 1-14, always 01 for atmosphere products)\n#     nn = str(granule).zfill(2) if granule is not None else \"??\"\n#     # patterns vary by product\n#     along_track_products = (\"ATL03\", \"ATL04\", \"ATL06\", \"ATL08\",\n#         \"ATL09\", \"ATL10\", \"ATL12\", \"ATL13\", \"ATL16\", \"ATL17\",\n#         \"ATL19\", \"ATL22\", \"ATL24\")\n#     sea_ice_products = (\"ATL07\", \"ATL10\", \"ATL20\", \"ATL21\")\n#     # use single character wildcards \"?\" for any unset parameters\n#     if short_name in sea_ice_products:\n#         return f\"{short_name}-{hh}_{14 * '?'}_{tttt}{cc}??_*\"\n#     elif short_name in along_track_products:\n#         return f\"{short_name}_{14 * '?'}_{tttt}{cc}{nn}_*\"\n\n# # build credentials for accessing ICESat-2 data\n# auth = earthaccess.login()\n# # query CMR for ATL06 files\n# pattern = build_granule_name(short_name=\"ATL06\", track=9, cycle=14, granule=12)\n# granules = earthaccess.search_data(\n#     short_name=\"ATL06\",\n#     granule_name=pattern,\n# )\n# granules[0]\n\n# # read ATL06 using xarray\n# buffers = earthaccess.open(granules)\n# ds = xr.open_dataset(buffers[0], group='gt1l/land_ice_segments')\n# # inspect ATL06 data for beam group\n# ds\n\n# # For simplicity take first 1000 high-quality points into a Geopandas Geodataframe\n# df = ds.where(ds.atl06_quality_summary==0).isel(delta_time=slice(0,1000)).to_dataframe()\n# gdf = gpd.GeoDataFrame(df, geometry=gpd.points_from_xy(df.longitude, df.latitude), crs='epsg:7661')\n# gdf.head()\n\n# gdf.explore(column='h_li')\n\n","type":"content","url":"/notebooks/geospatial-transforms#applying-concepts-icesat-2","position":53},{"hierarchy":{"lvl1":"Geospatial Transforms","lvl3":"Copernicus DEM","lvl2":"Applying Concepts: ICESat-2"},"type":"lvl3","url":"/notebooks/geospatial-transforms#copernicus-dem","position":54},{"hierarchy":{"lvl1":"Geospatial Transforms","lvl3":"Copernicus DEM","lvl2":"Applying Concepts: ICESat-2"},"content":"Let’s compare ICESat-2 elevations against a public, gridded global digital elevation model (DEM), the \n\nCopernicus DEM. Just as Geopandas adds CRS-aware capabilities to Dataframes, RioXarray adds CRS-aware functions to XArray multidimensional arrays (e.g. sets of images).\n\n# COP30 = rioxarray.open_rasterio('https://opentopography.s3.sdsc.edu/raster/COP30/COP30_hh.vrt', chunks=True)\n# # Crop by Bounding box of all the ATL06 points\n# minx, miny, maxx, maxy = gdf.total_bounds\n# COP30 = COP30.rio.clip_box(minx, miny, maxx, maxy)\n# COP30\n\n","type":"content","url":"/notebooks/geospatial-transforms#copernicus-dem","position":55},{"hierarchy":{"lvl1":"Geospatial Transforms","lvl3":"Compare COP30 DEM with ATL06","lvl2":"Applying Concepts: ICESat-2"},"type":"lvl3","url":"/notebooks/geospatial-transforms#compare-cop30-dem-with-atl06","position":56},{"hierarchy":{"lvl1":"Geospatial Transforms","lvl3":"Compare COP30 DEM with ATL06","lvl2":"Applying Concepts: ICESat-2"},"content":"\n\n# fig, ax = plt.subplots()\n# cmap = plt.get_cmap('viridis')\n# vmin = np.minimum(COP30.min().values, gdf.h_li.min())\n# vmax = np.maximum(COP30.max().values, gdf.h_li.max())\n# COP30.sel(band=1).plot.imshow(ax=ax, cmap=cmap, vmin=vmin, vmax=vmax, add_labels=False)\n# gdf.plot(column=\"h_li\", ax=ax, vmin=vmin, vmax=vmax, markersize=1)\n# plt.show()\n\n","type":"content","url":"/notebooks/geospatial-transforms#compare-cop30-dem-with-atl06","position":57},{"hierarchy":{"lvl1":"Geospatial Transforms","lvl2":"Resources"},"type":"lvl2","url":"/notebooks/geospatial-transforms#resources","position":58},{"hierarchy":{"lvl1":"Geospatial Transforms","lvl2":"Resources"},"content":"There is a lot of great educational material to learn more about these topics. We recommend checking out:\n\nICESat-2 Data Comparison User’s Guide\n\nUW Cryo 3D CRS Guide\n\nUW Geospatial Data Analaysis with Python\n\nPennState GPS & GNSS for Geospatial Professionals\n\nQinsy Geodetic Documentation\n\nGISGeography","type":"content","url":"/notebooks/geospatial-transforms#resources","position":59},{"hierarchy":{"lvl1":"How to Cite This Cookbook"},"type":"lvl1","url":"/notebooks/how-to-cite","position":0},{"hierarchy":{"lvl1":"How to Cite This Cookbook"},"content":"The material in this Project Pythia Cookbook is licensed for free and open consumption and reuse. All code is served under \n\nApache 2.0, while all non-code content is licensed under \n\nCreative Commons BY 4.0 (CC BY 4.0). Effectively, this means you are free to share and adapt this material so long as you give appropriate credit to the Cookbook authors and the Project Pythia community.\n\nThe source code for the book is \n\nreleased on GitHub and archived on Zenodo. This DOI will always resolve to the latest release of the book source:\n\n","type":"content","url":"/notebooks/how-to-cite","position":1},{"hierarchy":{"lvl1":"Inland Hydrology Applications"},"type":"lvl1","url":"/notebooks/inland-hydrology","position":0},{"hierarchy":{"lvl1":"Inland Hydrology Applications"},"content":"","type":"content","url":"/notebooks/inland-hydrology","position":1},{"hierarchy":{"lvl1":"Inland Hydrology Applications","lvl2":"Author(s)"},"type":"lvl2","url":"/notebooks/inland-hydrology#author-s","position":2},{"hierarchy":{"lvl1":"Inland Hydrology Applications","lvl2":"Author(s)"},"content":"Shamsudeen Temitope Yekeen","type":"content","url":"/notebooks/inland-hydrology#author-s","position":3},{"hierarchy":{"lvl1":"Inland Hydrology Applications","lvl2":"Existing Notebooks"},"type":"lvl2","url":"/notebooks/inland-hydrology#existing-notebooks","position":4},{"hierarchy":{"lvl1":"Inland Hydrology Applications","lvl2":"Existing Notebooks"},"content":"Inland Hydrology Applications","type":"content","url":"/notebooks/inland-hydrology#existing-notebooks","position":5},{"hierarchy":{"lvl1":"Inland Hydrology Applications","lvl2":"Learning Outcomes"},"type":"lvl2","url":"/notebooks/inland-hydrology#learning-outcomes","position":6},{"hierarchy":{"lvl1":"Inland Hydrology Applications","lvl2":"Learning Outcomes"},"content":"Understanding the ICESat-2 ATL13 product and its usage in inland hydrology\n\nAbility to access and extract required subset variables ATL13 data product\n\nParticipants would be able to create a water surface elevation dynamics","type":"content","url":"/notebooks/inland-hydrology#learning-outcomes","position":7},{"hierarchy":{"lvl1":"Inland Hydrology Applications","lvl3":"Notes","lvl2":"Learning Outcomes"},"type":"lvl3","url":"/notebooks/inland-hydrology#notes","position":8},{"hierarchy":{"lvl1":"Inland Hydrology Applications","lvl3":"Notes","lvl2":"Learning Outcomes"},"content":"","type":"content","url":"/notebooks/inland-hydrology#notes","position":9},{"hierarchy":{"lvl1":"Land Ice Applications"},"type":"lvl1","url":"/notebooks/land-ice","position":0},{"hierarchy":{"lvl1":"Land Ice Applications"},"content":"","type":"content","url":"/notebooks/land-ice","position":1},{"hierarchy":{"lvl1":"Land Ice Applications","lvl2":"Author(s)"},"type":"lvl2","url":"/notebooks/land-ice#author-s","position":2},{"hierarchy":{"lvl1":"Land Ice Applications","lvl2":"Author(s)"},"content":"Ben Smith","type":"content","url":"/notebooks/land-ice#author-s","position":3},{"hierarchy":{"lvl1":"Land Ice Applications","lvl2":"Existing Notebooks"},"type":"lvl2","url":"/notebooks/land-ice#existing-notebooks","position":4},{"hierarchy":{"lvl1":"Land Ice Applications","lvl2":"Existing Notebooks"},"content":"Land Ice Applications","type":"content","url":"/notebooks/land-ice#existing-notebooks","position":5},{"hierarchy":{"lvl1":"Land Ice Applications","lvl2":"Learning Outcomes"},"type":"lvl2","url":"/notebooks/land-ice#learning-outcomes","position":6},{"hierarchy":{"lvl1":"Land Ice Applications","lvl2":"Learning Outcomes"},"content":"learn how ice-sheet surfaces are represented by ATL03 photons\n\nlearn how ATL06 elevations correspond to ATL03 photon clouds\n\nlearn how small-scale features appear in ATL06\n\nunderstand the repeat structure of ATL06\n\nunderstand how cross-track slope can affect elevation differences","type":"content","url":"/notebooks/land-ice#learning-outcomes","position":7},{"hierarchy":{"lvl1":"Land Ice Applications","lvl3":"Notes","lvl2":"Learning Outcomes"},"type":"lvl3","url":"/notebooks/land-ice#notes","position":8},{"hierarchy":{"lvl1":"Land Ice Applications","lvl3":"Notes","lvl2":"Learning Outcomes"},"content":"","type":"content","url":"/notebooks/land-ice#notes","position":9},{"hierarchy":{"lvl1":"Machine Learning"},"type":"lvl1","url":"/notebooks/machine-learning","position":0},{"hierarchy":{"lvl1":"Machine Learning"},"content":"","type":"content","url":"/notebooks/machine-learning","position":1},{"hierarchy":{"lvl1":"Machine Learning","lvl2":"Author(s)"},"type":"lvl2","url":"/notebooks/machine-learning#author-s","position":2},{"hierarchy":{"lvl1":"Machine Learning","lvl2":"Author(s)"},"content":"Yara Mohajerani, Shane Grigsby, Wei Ji Leong","type":"content","url":"/notebooks/machine-learning#author-s","position":3},{"hierarchy":{"lvl1":"Machine Learning","lvl2":"Existing Notebooks"},"type":"lvl2","url":"/notebooks/machine-learning#existing-notebooks","position":4},{"hierarchy":{"lvl1":"Machine Learning","lvl2":"Existing Notebooks"},"content":"ML with ICESat-2 Data\n\nML Neural Networks, Bayesian","type":"content","url":"/notebooks/machine-learning#existing-notebooks","position":5},{"hierarchy":{"lvl1":"Machine Learning","lvl2":"Learning Outcomes"},"type":"lvl2","url":"/notebooks/machine-learning#learning-outcomes","position":6},{"hierarchy":{"lvl1":"Machine Learning","lvl2":"Learning Outcomes"},"content":"Convert ICESat-2 point cloud data into an analysis/ML-ready format\n\nRecognize the different levels of complexity of ML approaches and\nthe benefits/challenges of each\n\nLearn the potential of using ML for ICESat-2 point cloud classification","type":"content","url":"/notebooks/machine-learning#learning-outcomes","position":7},{"hierarchy":{"lvl1":"Machine Learning","lvl3":"Notes","lvl2":"Learning Outcomes"},"type":"lvl3","url":"/notebooks/machine-learning#notes","position":8},{"hierarchy":{"lvl1":"Machine Learning","lvl3":"Notes","lvl2":"Learning Outcomes"},"content":"Probably focus on Wei Ji’s tutorial, but could point to the earlier work\nof Yara and Shane for more advanced/theoretical concepts?","type":"content","url":"/notebooks/machine-learning#notes","position":9},{"hierarchy":{"lvl1":"ICESat-2 Mission Overview"},"type":"lvl1","url":"/notebooks/mission-overview","position":0},{"hierarchy":{"lvl1":"ICESat-2 Mission Overview"},"content":"","type":"content","url":"/notebooks/mission-overview","position":1},{"hierarchy":{"lvl1":"ICESat-2 Mission Overview","lvl3":"Author(s)"},"type":"lvl3","url":"/notebooks/mission-overview#author-s","position":2},{"hierarchy":{"lvl1":"ICESat-2 Mission Overview","lvl3":"Author(s)"},"content":"Tyler Sutterley\n\nExisting Tutorials\n\nMission Overview - 2024 ICESat-2 hackweek\n\nMission Overview and Data - 2023 ICESat-2 hackweek\n\nLearning Outcomes\n\nunderstand the technology used to acquire ICESat-2 data products and how that\ninforms data coverage, resolution and frequency\n\nlearn about the hierarchy of data products and the factors influencing\ndecisions on which products to use\n\n","type":"content","url":"/notebooks/mission-overview#author-s","position":3},{"hierarchy":{"lvl1":"ICESat-2 Mission Overview","lvl2":"Part 1: Mission and Instrument Overview"},"type":"lvl2","url":"/notebooks/mission-overview#part-1-mission-and-instrument-overview","position":4},{"hierarchy":{"lvl1":"ICESat-2 Mission Overview","lvl2":"Part 1: Mission and Instrument Overview"},"content":"\n\n","type":"content","url":"/notebooks/mission-overview#part-1-mission-and-instrument-overview","position":5},{"hierarchy":{"lvl1":"ICESat-2 Mission Overview","lvl4":"ICESat-2 Science Objectives","lvl2":"Part 1: Mission and Instrument Overview"},"type":"lvl4","url":"/notebooks/mission-overview#icesat-2-science-objectives","position":6},{"hierarchy":{"lvl1":"ICESat-2 Mission Overview","lvl4":"ICESat-2 Science Objectives","lvl2":"Part 1: Mission and Instrument Overview"},"content":"Quantify polar ice sheet contributions to current and recent sea level change and the linkages to climate conditions\n\nQuantify regional signatures of ice sheet changes\n\nAssess mechanisms driving recent changes\n\nImprove predictive ice sheet models\n\nEstimate sea ice thickness to examine ice-ocean-atmosphere exchanges of energy, mass and moisture\n\nMeasure vegetation canopy height as a basis for estimating large-scale biomass and biomass change\n\n\n\n","type":"content","url":"/notebooks/mission-overview#icesat-2-science-objectives","position":7},{"hierarchy":{"lvl1":"ICESat-2 Mission Overview","lvl4":"Advanced Topographic Laser Altimeter System (ATLAS)","lvl2":"Part 1: Mission and Instrument Overview"},"type":"lvl4","url":"/notebooks/mission-overview#advanced-topographic-laser-altimeter-system-atlas","position":8},{"hierarchy":{"lvl1":"ICESat-2 Mission Overview","lvl4":"Advanced Topographic Laser Altimeter System (ATLAS)","lvl2":"Part 1: Mission and Instrument Overview"},"content":"\n\nFigure 1:ICESat-2 beam configuration \n\n(Neuenschwander, 2019)\n\nSingle 10kHz 532nm laser micro-pulse → split into 6 beams\n\nDetectors sensitive to green light returns at the single photon level\n\nOn-the-ground 3 km spacing between pairs to increase spatial coverage\n\nOn-the-ground 90 m pair spacing for slope determination\n\nDifferent beam energies to provide dynamic range for varying surface reflectances\n\nHigh-energy beams (4×) for better performance over low-reflectivity targets\n\n","type":"content","url":"/notebooks/mission-overview#advanced-topographic-laser-altimeter-system-atlas","position":9},{"hierarchy":{"lvl1":"ICESat-2 Mission Overview","lvl4":"ATLAS Transmitter","lvl2":"Part 1: Mission and Instrument Overview"},"type":"lvl4","url":"/notebooks/mission-overview#atlas-transmitter","position":10},{"hierarchy":{"lvl1":"ICESat-2 Mission Overview","lvl4":"ATLAS Transmitter","lvl2":"Part 1: Mission and Instrument Overview"},"content":"\n\nFigure 2:ATLAS transmitter diagram (ATL03 ATBD)\n\n","type":"content","url":"/notebooks/mission-overview#atlas-transmitter","position":11},{"hierarchy":{"lvl1":"ICESat-2 Mission Overview","lvl4":"ATLAS Receiver","lvl2":"Part 1: Mission and Instrument Overview"},"type":"lvl4","url":"/notebooks/mission-overview#atlas-receiver","position":12},{"hierarchy":{"lvl1":"ICESat-2 Mission Overview","lvl4":"ATLAS Receiver","lvl2":"Part 1: Mission and Instrument Overview"},"content":"\n\nFigure 3:ATLAS receiver diagram (ATL03 ATBD)\n\n","type":"content","url":"/notebooks/mission-overview#atlas-receiver","position":13},{"hierarchy":{"lvl1":"ICESat-2 Mission Overview","lvl4":"ATLAS Photon Timing","lvl2":"Part 1: Mission and Instrument Overview"},"type":"lvl4","url":"/notebooks/mission-overview#atlas-photon-timing","position":14},{"hierarchy":{"lvl1":"ICESat-2 Mission Overview","lvl4":"ATLAS Photon Timing","lvl2":"Part 1: Mission and Instrument Overview"},"content":"\n\nFigure 4:ATLAS photon timing diagram (ATL03 ATBD)\n\n","type":"content","url":"/notebooks/mission-overview#atlas-photon-timing","position":15},{"hierarchy":{"lvl1":"ICESat-2 Mission Overview","lvl4":"ICESat-2 Photon Geolocation","lvl2":"Part 1: Mission and Instrument Overview"},"type":"lvl4","url":"/notebooks/mission-overview#icesat-2-photon-geolocation","position":16},{"hierarchy":{"lvl1":"ICESat-2 Mission Overview","lvl4":"ICESat-2 Photon Geolocation","lvl2":"Part 1: Mission and Instrument Overview"},"content":"","type":"content","url":"/notebooks/mission-overview#icesat-2-photon-geolocation","position":17},{"hierarchy":{"lvl1":"ICESat-2 Mission Overview","lvl5":"Photon time of flight","lvl4":"ICESat-2 Photon Geolocation","lvl2":"Part 1: Mission and Instrument Overview"},"type":"lvl5","url":"/notebooks/mission-overview#photon-time-of-flight","position":18},{"hierarchy":{"lvl1":"ICESat-2 Mission Overview","lvl5":"Photon time of flight","lvl4":"ICESat-2 Photon Geolocation","lvl2":"Part 1: Mission and Instrument Overview"},"content":"Measuring the two-way return time of transmitted photons","type":"content","url":"/notebooks/mission-overview#photon-time-of-flight","position":19},{"hierarchy":{"lvl1":"ICESat-2 Mission Overview","lvl5":"Position of observatory in space","lvl4":"ICESat-2 Photon Geolocation","lvl2":"Part 1: Mission and Instrument Overview"},"type":"lvl5","url":"/notebooks/mission-overview#position-of-observatory-in-space","position":20},{"hierarchy":{"lvl1":"ICESat-2 Mission Overview","lvl5":"Position of observatory in space","lvl4":"ICESat-2 Photon Geolocation","lvl2":"Part 1: Mission and Instrument Overview"},"content":"Precision Orbit Determination (POD) – NASA GSFC\n\nBased on Ruag GPS receivers\n\nVerified with Satellite Laser Ranging (SLR)\n\nOrbit known to < 2 cm radial","type":"content","url":"/notebooks/mission-overview#position-of-observatory-in-space","position":21},{"hierarchy":{"lvl1":"ICESat-2 Mission Overview","lvl5":"Pointing vectors for ATLAS laser beams","lvl4":"ICESat-2 Photon Geolocation","lvl2":"Part 1: Mission and Instrument Overview"},"type":"lvl5","url":"/notebooks/mission-overview#pointing-vectors-for-atlas-laser-beams","position":22},{"hierarchy":{"lvl1":"ICESat-2 Mission Overview","lvl5":"Pointing vectors for ATLAS laser beams","lvl4":"ICESat-2 Photon Geolocation","lvl2":"Part 1: Mission and Instrument Overview"},"content":"Precision Pointing Determination (PPD) – UT Austin Applied Research Lab\n\nBased on Sodern Star Trackers and Laser Reference System (LRS)\n\nVerified with cal/val data comparisons with photon returns\n\nPutting the pieces together\n\nPhoton TOF + POD + PPD →\nphoton return bounce point\n\n","type":"content","url":"/notebooks/mission-overview#pointing-vectors-for-atlas-laser-beams","position":23},{"hierarchy":{"lvl1":"ICESat-2 Mission Overview","lvl4":"ICESat-2 Primary Measurements","lvl2":"Part 1: Mission and Instrument Overview"},"type":"lvl4","url":"/notebooks/mission-overview#icesat-2-primary-measurements","position":24},{"hierarchy":{"lvl1":"ICESat-2 Mission Overview","lvl4":"ICESat-2 Primary Measurements","lvl2":"Part 1: Mission and Instrument Overview"},"content":"\n\nFigure 5:ICESat-2 measurement schematic (ATL02 ATBD)\n\n","type":"content","url":"/notebooks/mission-overview#icesat-2-primary-measurements","position":25},{"hierarchy":{"lvl1":"ICESat-2 Mission Overview","lvl4":"ICESat-2 Orbits","lvl2":"Part 1: Mission and Instrument Overview"},"type":"lvl4","url":"/notebooks/mission-overview#icesat-2-orbits","position":26},{"hierarchy":{"lvl1":"ICESat-2 Mission Overview","lvl4":"ICESat-2 Orbits","lvl2":"Part 1: Mission and Instrument Overview"},"content":"500 km altitude\n\n88° S to 88° N\n\n15 revolutions/day\n\n1387 repeat ground tracks\n\n91-day revisit time\n\n\n\nFigure 6:ICESat-2 Orbits (NASA Science Visualization Studio)\n\nTip\n\nkml files with predicted ground tracks available at \n\nhttps://​icesat​-2​.gsfc​.nasa​.gov\n\n","type":"content","url":"/notebooks/mission-overview#icesat-2-orbits","position":27},{"hierarchy":{"lvl1":"ICESat-2 Mission Overview","lvl4":"ICESat-2 Along-Track Sampling","lvl2":"Part 1: Mission and Instrument Overview"},"type":"lvl4","url":"/notebooks/mission-overview#icesat-2-along-track-sampling","position":28},{"hierarchy":{"lvl1":"ICESat-2 Mission Overview","lvl4":"ICESat-2 Along-Track Sampling","lvl2":"Part 1: Mission and Instrument Overview"},"content":"\n\nFigure 7:ICESat-2 beam configuration \n\n(Smith et al., 2019)\n\n","type":"content","url":"/notebooks/mission-overview#icesat-2-along-track-sampling","position":29},{"hierarchy":{"lvl1":"ICESat-2 Mission Overview","lvl4":"Spacecraft Orientation","lvl2":"Part 1: Mission and Instrument Overview"},"type":"lvl4","url":"/notebooks/mission-overview#spacecraft-orientation","position":30},{"hierarchy":{"lvl1":"ICESat-2 Mission Overview","lvl4":"Spacecraft Orientation","lvl2":"Part 1: Mission and Instrument Overview"},"content":"\n\nFigure 8:ICESat-2 spacecraft orientation (NSIDC)\n\n","type":"content","url":"/notebooks/mission-overview#spacecraft-orientation","position":31},{"hierarchy":{"lvl1":"ICESat-2 Mission Overview","lvl4":"ICESat-2 Local Coordinate System","lvl2":"Part 1: Mission and Instrument Overview"},"type":"lvl4","url":"/notebooks/mission-overview#icesat-2-local-coordinate-system","position":32},{"hierarchy":{"lvl1":"ICESat-2 Mission Overview","lvl4":"ICESat-2 Local Coordinate System","lvl2":"Part 1: Mission and Instrument Overview"},"content":"Along-track coordinates, x_atc, are measured parallel to each RGT and are in reference to the equator\n\nAcross-track coordinates, y_atc, are measured perpendicular to and in reference to the RGT\n\nAveraging Schemes:\n\nMeasurements can be averaged over a set along-track distance\n\nMeasurements can be averaged over a set number of photons and have a variable along-track length\n\n\n\nFigure 9:ICESat-2 coordinate system (ATL06 ATBD)\n\n","type":"content","url":"/notebooks/mission-overview#icesat-2-local-coordinate-system","position":33},{"hierarchy":{"lvl1":"ICESat-2 Mission Overview","lvl2":"Part 2: Data Products"},"type":"lvl2","url":"/notebooks/mission-overview#part-2-data-products","position":34},{"hierarchy":{"lvl1":"ICESat-2 Mission Overview","lvl2":"Part 2: Data Products"},"content":"\n\n","type":"content","url":"/notebooks/mission-overview#part-2-data-products","position":35},{"hierarchy":{"lvl1":"ICESat-2 Mission Overview","lvl4":"ICESat-2 Data Production","lvl2":"Part 2: Data Products"},"type":"lvl4","url":"/notebooks/mission-overview#icesat-2-data-production","position":36},{"hierarchy":{"lvl1":"ICESat-2 Mission Overview","lvl4":"ICESat-2 Data Production","lvl2":"Part 2: Data Products"},"content":"\n\nData Production Keywords:\n\nATLAS: Advanced Topographic Laser Altimeter System\n\nASAS: ATLAS Science Algorithm Software\n\nPGE: Product Generation Executive\n\nSIPS: Science Investigator-led Processing System\n\nSCF: Science Computing Facility\n\n","type":"content","url":"/notebooks/mission-overview#icesat-2-data-production","position":37},{"hierarchy":{"lvl1":"ICESat-2 Mission Overview","lvl4":"ICESat-2 Product Chart","lvl2":"Part 2: Data Products"},"type":"lvl4","url":"/notebooks/mission-overview#icesat-2-product-chart","position":38},{"hierarchy":{"lvl1":"ICESat-2 Mission Overview","lvl4":"ICESat-2 Product Chart","lvl2":"Part 2: Data Products"},"content":"\n\n","type":"content","url":"/notebooks/mission-overview#icesat-2-product-chart","position":39},{"hierarchy":{"lvl1":"ICESat-2 Mission Overview","lvl4":"Granule Regions","lvl2":"Part 2: Data Products"},"type":"lvl4","url":"/notebooks/mission-overview#granule-regions","position":40},{"hierarchy":{"lvl1":"ICESat-2 Mission Overview","lvl4":"Granule Regions","lvl2":"Part 2: Data Products"},"content":"Each orbit of ICESat-2 data is broken up into 14 granules in order to limit the overall file sizes and to reduce the number of files that need to be processed to create the higher-level science products\n\n","type":"content","url":"/notebooks/mission-overview#granule-regions","position":41},{"hierarchy":{"lvl1":"ICESat-2 Mission Overview","lvl4":"File Naming Conventions","lvl2":"Part 2: Data Products"},"type":"lvl4","url":"/notebooks/mission-overview#file-naming-conventions","position":42},{"hierarchy":{"lvl1":"ICESat-2 Mission Overview","lvl4":"File Naming Conventions","lvl2":"Part 2: Data Products"},"content":"ATL[xx]_[yyyymmdd][hhmmss]_[tttt][cc][nn]_[rrr]_[vv].h5\n\nxx: ATLAS product number\n\nyyyymmdd: year, month and day of data acquisition\n\nhhmmss: start time, hour, minute, and second of data acquisition (UTC)\n\ntttt: Reference Ground Track (RGT, ranges from 1–1387)\n\ncc: Orbital Cycle (91-day period)\n\nnn: Granule number (ranges from 1–14, always 01 for atmosphere products)\n\nrrr: Data release number\n\nvv: Data version number\n\nTip\n\nused for ATL03, ATL04, ATL06, ATL08, ATL09, ATL10, ATL12, ATL13, ATL16, ATL17, ATL19, ATL22 and ATL24\n\n","type":"content","url":"/notebooks/mission-overview#file-naming-conventions","position":43},{"hierarchy":{"lvl1":"ICESat-2 Mission Overview","lvl4":"File Naming Conventions: Sea Ice","lvl2":"Part 2: Data Products"},"type":"lvl4","url":"/notebooks/mission-overview#file-naming-conventions-sea-ice","position":44},{"hierarchy":{"lvl1":"ICESat-2 Mission Overview","lvl4":"File Naming Conventions: Sea Ice","lvl2":"Part 2: Data Products"},"content":"ATL[xx]-[hh]_[yyyymmdd][hhmmss]_[tttt][cc][nn]_[rrr]_[vv].h5\n\nxx: ATLAS product number\n\nhh: Sea ice hemisphere flag (01=north, 02=south)\n\nyyyymmdd: year, month and day of data acquisition\n\nhhmmss: start time, hour, minute, and second of data acquisition (UTC)\n\ntttt: Reference Ground Track (RGT, ranges from 1–1387)\n\ncc: Orbital Cycle (91-day period)\n\nnn: Granule number (always 01 for sea ice products)\n\nrrr: Data release number\n\nvv: Data version number\n\nTip\n\nused for ATL07, ATL10, ATL20, and ATL21\n\n","type":"content","url":"/notebooks/mission-overview#file-naming-conventions-sea-ice","position":45},{"hierarchy":{"lvl1":"ICESat-2 Mission Overview","lvl4":"ATL03: Global Geolocated Photon Data","lvl2":"Part 2: Data Products"},"type":"lvl4","url":"/notebooks/mission-overview#atl03-global-geolocated-photon-data","position":46},{"hierarchy":{"lvl1":"ICESat-2 Mission Overview","lvl4":"ATL03: Global Geolocated Photon Data","lvl2":"Part 2: Data Products"},"content":"Contains:\n\nGeolocation, time and elevation for all photons telemetered from ATLAS\n\nPhoton classifications for each surface type\n\nGeophysical and atmospheric corrections\n\nInstrumental parameters\n\nAdvantages:\n\nEvery photon is there, and every parameter\n\nCan derive information for all surface types\n\nDisadvantages:\n\nLarge and complex product\n\nMight require applying instrumental corrections\n\nUse if you want to:\n\nLook at surfaces at a scale unresolved in higher-level products\n\nLook at processes the higher-level products were not designed to observe\n\n\n\nFigure 10:ATL03 photon data and YAPC classification\n\n","type":"content","url":"/notebooks/mission-overview#atl03-global-geolocated-photon-data","position":47},{"hierarchy":{"lvl1":"ICESat-2 Mission Overview","lvl4":"ATL04 and ATL09: Atmospheric Backscatter Profiles","lvl2":"Part 2: Data Products"},"type":"lvl4","url":"/notebooks/mission-overview#atl04-and-atl09-atmospheric-backscatter-profiles","position":48},{"hierarchy":{"lvl1":"ICESat-2 Mission Overview","lvl4":"ATL04 and ATL09: Atmospheric Backscatter Profiles","lvl2":"Part 2: Data Products"},"content":"Contains:\n\nAtmospheric layer heights and optical properties\n\nAdvantages:\n\nMuch larger height window provided from the atmospheric data channel\n\nDisadvantages:\n\nRelatively large file sizes\n\nUse if you want to:\n\nWant to investigate cloud or suspended particle optical depths\n\nVisualize cloud returns or Antarctic blowing snow\n\nWant to try to understand atmospheric effects on photon ground returns\n\n\n\nFigure 11:Atmospheric backscatter profiles from \n\nPalm et al. (2021)\n\n","type":"content","url":"/notebooks/mission-overview#atl04-and-atl09-atmospheric-backscatter-profiles","position":49},{"hierarchy":{"lvl1":"ICESat-2 Mission Overview","lvl4":"ATL06: Land Ice Height Data","lvl2":"Part 2: Data Products"},"type":"lvl4","url":"/notebooks/mission-overview#atl06-land-ice-height-data","position":50},{"hierarchy":{"lvl1":"ICESat-2 Mission Overview","lvl4":"ATL06: Land Ice Height Data","lvl2":"Part 2: Data Products"},"content":"Contains:\n\nOverlapping 40-meter linear segments fit to land and land-ice photons\n\nHeight error and segment quality estimates\n\nAdvantages:\n\nLighter product than ATL03\n\nProvides estimated surface heights with cm-level corrections\n\nDisadvantages:\n\n40 meters is too coarse for some applications\n\nOnly designed for single surface returns\n\nUse if you want to:\n\nMake large-scale repeatable measurements of glaciers and ice sheets\n\n\n\nFigure 12:ATL06 segment model \n\n(Smith et al., 2019)\n\n","type":"content","url":"/notebooks/mission-overview#atl06-land-ice-height-data","position":51},{"hierarchy":{"lvl1":"ICESat-2 Mission Overview","lvl4":"ATL11: Slope-Corrected Land Ice Height Time Series","lvl2":"Part 2: Data Products"},"type":"lvl4","url":"/notebooks/mission-overview#atl11-slope-corrected-land-ice-height-time-series","position":52},{"hierarchy":{"lvl1":"ICESat-2 Mission Overview","lvl4":"ATL11: Slope-Corrected Land Ice Height Time Series","lvl2":"Part 2: Data Products"},"content":"Contains:\n\n120-meter along-track segments for each beam pair corrected for across-track slope\n\nCrossover estimates from ATL06 at reference points\n\nAdvantages:\n\nContains data for all cycles with along-track data following the Reference Ground Tracks (RGTs)\n\nEasy calculation of height change through time\n\nDisadvantages:\n\n120-m resolution is too coarse for some applications\n\nMay not work well over complex surfaces\n\nUse if you want to:\n\nMake large-scale estimates of glacier and ice sheet height change\n\n\n\nFigure 13:ATL11 height time series at an Antarctic grounding zone\n\n","type":"content","url":"/notebooks/mission-overview#atl11-slope-corrected-land-ice-height-time-series","position":53},{"hierarchy":{"lvl1":"ICESat-2 Mission Overview","lvl4":"ATL14 and ATL15: Gridded Land Ice Height and Height Change","lvl2":"Part 2: Data Products"},"type":"lvl4","url":"/notebooks/mission-overview#atl14-and-atl15-gridded-land-ice-height-and-height-change","position":54},{"hierarchy":{"lvl1":"ICESat-2 Mission Overview","lvl4":"ATL14 and ATL15: Gridded Land Ice Height and Height Change","lvl2":"Part 2: Data Products"},"content":"Contains:\n\nATL14: gridded digital elevation model (DEM) and height uncertainty at 100m posting\n\nATL15: gridded land ice height change estimates at 1km, 10km, 20km, and 40km posting\n\nAdvantages:\n\nGridded product combining all available along-track ATL11 data\n\nSimplifies volume change calculations using ICESat-2 data\n\nDisadvantages:\n\nATL14 estimates degrade where measurements are unavailable\n\nQuarter-annual temporal sampling might not be high enough for certain applications\n\nUse if you want to:\n\nUse gridded estimates of height change for ice sheet models\n\nStart creating land ice mass balance estimates from ICESat-2\n\nExtract land ice height change estimates along transects\n\n\n\n\n\nIS2view display of ATL15 height change data and extracted transect using glacier flowlines from \n\nFelikson et al. (2020).\n\n","type":"content","url":"/notebooks/mission-overview#atl14-and-atl15-gridded-land-ice-height-and-height-change","position":55},{"hierarchy":{"lvl1":"ICESat-2 Mission Overview","lvl4":"ATL07: Sea Ice Height Data","lvl2":"Part 2: Data Products"},"type":"lvl4","url":"/notebooks/mission-overview#atl07-sea-ice-height-data","position":56},{"hierarchy":{"lvl1":"ICESat-2 Mission Overview","lvl4":"ATL07: Sea Ice Height Data","lvl2":"Part 2: Data Products"},"content":"Contains:\n\nAlong-track heights for sea ice and leads\n\nAdvantages:\n\nHigh precision (~2 cm) height retrievals from 150-photon aggregates\n\nClassifications for varying surface types (e.g. open water leads, sea ice)\n\nProvides auxiliary information such as surface roughness and retrieval quality flags\n\nDisadvantages:\n\nSurface retrievals have varying length scales\n\nSurface type flagging is still in development\n\nUse if you want to:\n\nHave base level surface heights for freeboard or surface process studies\n\n\n\nFigure 14:ATL07 sea ice heights from \n\nKwok et al. (2019)\n\n","type":"content","url":"/notebooks/mission-overview#atl07-sea-ice-height-data","position":57},{"hierarchy":{"lvl1":"ICESat-2 Mission Overview","lvl4":"ATL10: Sea Ice Freeboard Data","lvl2":"Part 2: Data Products"},"type":"lvl4","url":"/notebooks/mission-overview#atl10-sea-ice-freeboard-data","position":58},{"hierarchy":{"lvl1":"ICESat-2 Mission Overview","lvl4":"ATL10: Sea Ice Freeboard Data","lvl2":"Part 2: Data Products"},"content":"Contains:\n\nAlong-track sea ice freeboard and surface heights\n\nSurface type flagging and ancillary information\n\nAdvantages:\n\nLighter product than ATL07 with higher level freeboard and surface types\n\nDisadvantages:\n\nHigher levels of missing/invalid data than ATL07 (low ice concentration, near-coastal)\n\nVarying length scales of retrievals\n\nSummer sea ice retrievals still under investigation (July 2022 field campaign)\n\nUse if you want to:\n\nUse along-track freeboard retrievals\n\nUse a highly accurate product (3 cm or better over 25 km length scales)\n\n\n\nFigure 15:ATL10 sea ice freeboards from \n\nPetty et al. (2020)\n\n","type":"content","url":"/notebooks/mission-overview#atl10-sea-ice-freeboard-data","position":59},{"hierarchy":{"lvl1":"ICESat-2 Mission Overview","lvl4":"ATL20: Gridded Sea Ice Freeboard Data","lvl2":"Part 2: Data Products"},"type":"lvl4","url":"/notebooks/mission-overview#atl20-gridded-sea-ice-freeboard-data","position":60},{"hierarchy":{"lvl1":"ICESat-2 Mission Overview","lvl4":"ATL20: Gridded Sea Ice Freeboard Data","lvl2":"Part 2: Data Products"},"content":"Contains:\n\n25 km gridded sea ice freeboard at daily to monthly resolution\n\nAdvantages:\n\nGridded product that is lighter than ATL10\n\nDisadvantages:\n\nCoarse length scale, averages out the high resolution of the ICESat-2 data\n\nUse if you want to:\n\nLook at gridded sea ice freeboard data for large-scale determination of sea ice change\n\nMerge with other coarse-resolution data such as passive microwave products\n\n\n\nFigure 16:ATL20 gridded freeboard from \n\nKwok et al. (2019)\n\n","type":"content","url":"/notebooks/mission-overview#atl20-gridded-sea-ice-freeboard-data","position":61},{"hierarchy":{"lvl1":"ICESat-2 Mission Overview","lvl4":"ATL21: Gridded Polar Sea Surface Height Data","lvl2":"Part 2: Data Products"},"type":"lvl4","url":"/notebooks/mission-overview#atl21-gridded-polar-sea-surface-height-data","position":62},{"hierarchy":{"lvl1":"ICESat-2 Mission Overview","lvl4":"ATL21: Gridded Polar Sea Surface Height Data","lvl2":"Part 2: Data Products"},"content":"Contains:\n\n25 km gridded sea surface height anomalies for sea ice covered regions\n\nAdvantages:\n\nGridded product that is lighter than ATL10\n\nUses a sophisticated sea surface height retrieval algorithm to detect leads in polar oceans\n\nDisadvantages:\n\nCoarse length scale, averages out the high resolution of the ICESat-2 data\n\nOnly data from center strong beam available due to time and spatially varying biases\n\nUse if you want to:\n\nLook at large-scale gridded sea surface height anomalies or derive dynamic ocean topography in polar regions\n\n\n\nFigure 17:ATL21 sea surface heights from \n\nBagnardi et al. (2021)\n\n","type":"content","url":"/notebooks/mission-overview#atl21-gridded-polar-sea-surface-height-data","position":63},{"hierarchy":{"lvl1":"ICESat-2 Mission Overview","lvl4":"ATL08: Land and Vegetation Height Data","lvl2":"Part 2: Data Products"},"type":"lvl4","url":"/notebooks/mission-overview#atl08-land-and-vegetation-height-data","position":64},{"hierarchy":{"lvl1":"ICESat-2 Mission Overview","lvl4":"ATL08: Land and Vegetation Height Data","lvl2":"Part 2: Data Products"},"content":"Contains:\n\nTerrain surface and canopy heights from land photons\n\nAdvantages:\n\nCan handle surfaces with multiple returns (such as vegetated canopies)\n\nProvides photon-level classifications from the ATL08 algorithm\n\nDisadvantages:\n\nCan produce less reliable results over sloping surfaces\n\nUse if you want to:\n\nDetect multiple surfaces, such as vegetated canopies or supraglacial lakes\n\nLook at vegetated terrain and need to detect the ground\n\n\n\nFigure 18:ATL08 vegetation heights (recreated a figure from Amy Neuenschwander, UT Austin)\n\n","type":"content","url":"/notebooks/mission-overview#atl08-land-and-vegetation-height-data","position":65},{"hierarchy":{"lvl1":"ICESat-2 Mission Overview","lvl4":"ATL18: Gridded Land and Vegetation Height (in development)","lvl2":"Part 2: Data Products"},"type":"lvl4","url":"/notebooks/mission-overview#atl18-gridded-land-and-vegetation-height-in-development","position":66},{"hierarchy":{"lvl1":"ICESat-2 Mission Overview","lvl4":"ATL18: Gridded Land and Vegetation Height (in development)","lvl2":"Part 2: Data Products"},"content":"Contains:\n\nTerrain and relative canopy heights at 1km resolution\n\nAdvantages:\n\nUses EASE2.0 grids for compatibility with other datasets\n\nWill be updated annually\n\nDisadvantages:\n\nLow spatial resolution limits creating a temporal change product\n\nUse if you want to:\n\nAnalyze large-scale vegetation and land surface change\n\n\n\nFigure 19:ATL18 gridded vegetation height (provided by Amy Neuenschwander, UT Austin)\n\n","type":"content","url":"/notebooks/mission-overview#atl18-gridded-land-and-vegetation-height-in-development","position":67},{"hierarchy":{"lvl1":"ICESat-2 Mission Overview","lvl4":"ATL12: Ocean Surface Height Data","lvl2":"Part 2: Data Products"},"type":"lvl4","url":"/notebooks/mission-overview#atl12-ocean-surface-height-data","position":68},{"hierarchy":{"lvl1":"ICESat-2 Mission Overview","lvl4":"ATL12: Ocean Surface Height Data","lvl2":"Part 2: Data Products"},"content":"Contains:\n\nSea surface heights for oceans deeper than 10m\n\nHarmonic coefficients and statistics for waves\n\nGeophysical (e.g. sea state bias) corrections\n\nAdvantages:\n\nAverage height estimates reduce the effects of correlated noise due to waves\n\nAlso provides sea surface heights with cm-level corrections at spatial resolutions up to 10m\n\nDisadvantages:\n\nDoes not represent the sea surface in ice covered areas\n\nUse if you want to:\n\nDetect the instantaneous sea surface height\n\n\n\nFigure 20:Comparison of ATL12 and JASON-3 from \n\nBuzzanga et al. (2021)\n\n","type":"content","url":"/notebooks/mission-overview#atl12-ocean-surface-height-data","position":69},{"hierarchy":{"lvl1":"ICESat-2 Mission Overview","lvl4":"ATL19 and ATL23: Gridded Dynamic Ocean Topography","lvl2":"Part 2: Data Products"},"type":"lvl4","url":"/notebooks/mission-overview#atl19-and-atl23-gridded-dynamic-ocean-topography","position":70},{"hierarchy":{"lvl1":"ICESat-2 Mission Overview","lvl4":"ATL19 and ATL23: Gridded Dynamic Ocean Topography","lvl2":"Part 2: Data Products"},"content":"Contains:\n\nRasterized DOT at ¼° (mid-latitudes) and 25 km (polar) spatial resolution\n\nMonthly (ATL19) and tri-monthly (ATL23) temporal resolution\n\nAdvantages:\n\nLighter product than ATL12\n\nIncludes individual beam averages\n\nDisadvantages:\n\nLower temporal resolution than ATL12\n\nUse if you want to:\n\nCalculate the average DOT over time\n\nLook at large-scale oceanographic features\n\n\n\nFigure 21:ATL19 dynamic ocean topography\n\n\n\nFigure 22:ATL23 dynamic ocean topography\n\nATL19 and ATL23 DOT from Figures 4 and 5 of \n\nMorison et al. (2022)\n\n","type":"content","url":"/notebooks/mission-overview#atl19-and-atl23-gridded-dynamic-ocean-topography","position":71},{"hierarchy":{"lvl1":"ICESat-2 Mission Overview","lvl4":"Product Information at the National Snow and Ice Data Center (NSIDC)","lvl2":"Part 2: Data Products"},"type":"lvl4","url":"/notebooks/mission-overview#product-information-at-the-national-snow-and-ice-data-center-nsidc","position":72},{"hierarchy":{"lvl1":"ICESat-2 Mission Overview","lvl4":"Product Information at the National Snow and Ice Data Center (NSIDC)","lvl2":"Part 2: Data Products"},"content":"The NSIDC DAAC is the primary data manager for ICESat-2 data\n\nOn-prem data stores\n\nCloud-based data stores (AWS s3)\n\nMission landing page for ICESat-2 → \n\nhttps://​nsidc​.org​/data​/icesat-2\n\nProduct landing pages (e.g. ATL03) → \n\nhttps://​nsidc​.org​/data​/atl03\n\nEach product landing page includes:\n\nUser Guides\n\nAlgorithm Theoretical Basis Documents (ATBDs)\n\nData Dictionaries\n\nList of Known Issues\n\nInformation for Data Access\n\n","type":"content","url":"/notebooks/mission-overview#product-information-at-the-national-snow-and-ice-data-center-nsidc","position":73},{"hierarchy":{"lvl1":"ICESat-2 Mission Overview","lvl2":"Part 3: Mission Status and Future"},"type":"lvl2","url":"/notebooks/mission-overview#part-3-mission-status-and-future","position":74},{"hierarchy":{"lvl1":"ICESat-2 Mission Overview","lvl2":"Part 3: Mission Status and Future"},"content":"\n\n","type":"content","url":"/notebooks/mission-overview#part-3-mission-status-and-future","position":75},{"hierarchy":{"lvl1":"ICESat-2 Mission Overview","lvl4":"ICESat-2 Mission Status","lvl2":"Part 3: Mission Status and Future"},"type":"lvl4","url":"/notebooks/mission-overview#icesat-2-mission-status","position":76},{"hierarchy":{"lvl1":"ICESat-2 Mission Overview","lvl4":"ICESat-2 Mission Status","lvl2":"Part 3: Mission Status and Future"},"content":"","type":"content","url":"/notebooks/mission-overview#icesat-2-mission-status","position":77},{"hierarchy":{"lvl1":"ICESat-2 Mission Overview","lvl5":"Future Mission Outlook","lvl4":"ICESat-2 Mission Status","lvl2":"Part 3: Mission Status and Future"},"type":"lvl5","url":"/notebooks/mission-overview#future-mission-outlook","position":78},{"hierarchy":{"lvl1":"ICESat-2 Mission Overview","lvl5":"Future Mission Outlook","lvl4":"ICESat-2 Mission Status","lvl2":"Part 3: Mission Status and Future"},"content":"Current Status: Nominal\n\nPerformance metrics remain nominal and within mission requirements\n\nOver 2000 days in orbit\n\nOver 2 trillion laser pulses fired\n\nLife-limiting factor is on-board fuel → dependent on solar activity","type":"content","url":"/notebooks/mission-overview#future-mission-outlook","position":79},{"hierarchy":{"lvl1":"ICESat-2 Mission Overview","lvl5":"Mission Product Development","lvl4":"ICESat-2 Mission Status","lvl2":"Part 3: Mission Status and Future"},"type":"lvl5","url":"/notebooks/mission-overview#mission-product-development","position":80},{"hierarchy":{"lvl1":"ICESat-2 Mission Overview","lvl5":"Mission Product Development","lvl4":"ICESat-2 Mission Status","lvl2":"Part 3: Mission Status and Future"},"content":"Release-07 of along-track products to be released in mid-2025\n\nAlong-Track Coastal and Nearshore Bathymetry (ATL24) released in 2025\n\nGridded Land and Vegetation Height product (ATL18) in development\n\nGridded Sea Ice Freeboard Quicklook product (ATL20-QL) in development\n\nPossible future standard products are under development\n\n\n\n\n\nLinks\n\nWebsite: \n\nhttps://​icesat​-2​.gsfc​.nasa​.gov\n\nData: \n\nhttps://​nsidc​.org​/data​/icesat-2\n\nGitHub: \n\nhttps://​github​.com​/icesat-2","type":"content","url":"/notebooks/mission-overview#mission-product-development","position":81},{"hierarchy":{"lvl1":"Sea Ice Applications"},"type":"lvl1","url":"/notebooks/sea-ice","position":0},{"hierarchy":{"lvl1":"Sea Ice Applications"},"content":"","type":"content","url":"/notebooks/sea-ice","position":1},{"hierarchy":{"lvl1":"Sea Ice Applications","lvl2":"Author(s)"},"type":"lvl2","url":"/notebooks/sea-ice#author-s","position":2},{"hierarchy":{"lvl1":"Sea Ice Applications","lvl2":"Author(s)"},"content":"Younghyun Koo, Alek Petty, Ellen Buckley","type":"content","url":"/notebooks/sea-ice#author-s","position":3},{"hierarchy":{"lvl1":"Sea Ice Applications","lvl2":"Existing Notebooks"},"type":"lvl2","url":"/notebooks/sea-ice#existing-notebooks","position":4},{"hierarchy":{"lvl1":"Sea Ice Applications","lvl2":"Existing Notebooks"},"content":"Sea Ice Applications (2023)\n\nSea Ice Applications (2020)","type":"content","url":"/notebooks/sea-ice#existing-notebooks","position":5},{"hierarchy":{"lvl1":"Sea Ice Applications","lvl2":"Learning Outcomes"},"type":"lvl2","url":"/notebooks/sea-ice#learning-outcomes","position":6},{"hierarchy":{"lvl1":"Sea Ice Applications","lvl2":"Learning Outcomes"},"content":"Learn how to access/download ICESat-2 sea ice products (ATL07/ATL10/ATL20)\nvia icepyx or earthaccess libraries.\n\nExamine what the ICESat-2 sea ice freeboard products (ATL10/ATL20) look like.\n\nDerive sea ice properties (sea ice thickness, floe size distribution, lead\nfraction) using ATL10 product.\n\nMap monthly sea ice freeboard using ATL20 product.","type":"content","url":"/notebooks/sea-ice#learning-outcomes","position":7},{"hierarchy":{"lvl1":"Sea Ice Applications","lvl3":"Notes","lvl2":"Learning Outcomes"},"type":"lvl3","url":"/notebooks/sea-ice#notes","position":8},{"hierarchy":{"lvl1":"Sea Ice Applications","lvl3":"Notes","lvl2":"Learning Outcomes"},"content":"The 2020 tutorials have an assembly of notebooks for the different ATL products.\nThe 2023 tutorial is a single notebook.","type":"content","url":"/notebooks/sea-ice#notes","position":9},{"hierarchy":{"lvl1":"Snowdepth Applications"},"type":"lvl1","url":"/notebooks/snowdepth","position":0},{"hierarchy":{"lvl1":"Snowdepth Applications"},"content":"","type":"content","url":"/notebooks/snowdepth","position":1},{"hierarchy":{"lvl1":"Snowdepth Applications","lvl2":"Author(s)"},"type":"lvl2","url":"/notebooks/snowdepth#author-s","position":2},{"hierarchy":{"lvl1":"Snowdepth Applications","lvl2":"Author(s)"},"content":"Karina Zikan","type":"content","url":"/notebooks/snowdepth#author-s","position":3},{"hierarchy":{"lvl1":"Snowdepth Applications","lvl2":"Existing Notebooks"},"type":"lvl2","url":"/notebooks/snowdepth#existing-notebooks","position":4},{"hierarchy":{"lvl1":"Snowdepth Applications","lvl2":"Existing Notebooks"},"content":"Snowdepth Applications","type":"content","url":"/notebooks/snowdepth#existing-notebooks","position":5},{"hierarchy":{"lvl1":"Snowdepth Applications","lvl2":"Learning Outcomes"},"type":"lvl2","url":"/notebooks/snowdepth#learning-outcomes","position":6},{"hierarchy":{"lvl1":"Snowdepth Applications","lvl2":"Learning Outcomes"},"content":"gain experience in working with SlideRule to access and pre-process ICESat-2\ndata\n\nlearn how use projections and interpolation to compare ICESat-2 track data\nwith gridded raster products\n\ndevelop a general understanding of how to measure snow depths with LiDAR,\nand learn about opportunities and challenges when using ICEsat-2 along-track\nproducts","type":"content","url":"/notebooks/snowdepth#learning-outcomes","position":7},{"hierarchy":{"lvl1":"Snowdepth Applications","lvl3":"Notes","lvl2":"Learning Outcomes"},"type":"lvl3","url":"/notebooks/snowdepth#notes","position":8},{"hierarchy":{"lvl1":"Snowdepth Applications","lvl3":"Notes","lvl2":"Learning Outcomes"},"content":"","type":"content","url":"/notebooks/snowdepth#notes","position":9},{"hierarchy":{"lvl1":"Data Visualization"},"type":"lvl1","url":"/notebooks/visualization","position":0},{"hierarchy":{"lvl1":"Data Visualization"},"content":"","type":"content","url":"/notebooks/visualization","position":1},{"hierarchy":{"lvl1":"Data Visualization","lvl2":"Author(s)"},"type":"lvl2","url":"/notebooks/visualization#author-s","position":2},{"hierarchy":{"lvl1":"Data Visualization","lvl2":"Author(s)"},"content":"Philipp Arndt","type":"content","url":"/notebooks/visualization#author-s","position":3},{"hierarchy":{"lvl1":"Data Visualization","lvl2":"Existing Notebooks"},"type":"lvl2","url":"/notebooks/visualization#existing-notebooks","position":4},{"hierarchy":{"lvl1":"Data Visualization","lvl2":"Existing Notebooks"},"content":"Visualization with Google Earth Engine","type":"content","url":"/notebooks/visualization#existing-notebooks","position":5},{"hierarchy":{"lvl1":"Data Visualization","lvl2":"Learning Outcomes"},"type":"lvl2","url":"/notebooks/visualization#learning-outcomes","position":6},{"hierarchy":{"lvl1":"Data Visualization","lvl2":"Learning Outcomes"},"content":"Discover some interesting ICESat-2 data by browsing OpenAltimetry\n\nGet the data into a Jupyter Notebook, plot it and overlay the ground track on a map\n\nUse Google Earth Engine to find the closest-in-time Sentinel-2 image that is cloud-free along ICESat-2’s ground track\n\nMake a plot from ICESat-2 data and contemporaneous imagery in Jupyter/matplotlib\n\nBonus Code: Use Google Earth Engine to extract Sentinel-2 data along the ICESat-2 ground track","type":"content","url":"/notebooks/visualization#learning-outcomes","position":7},{"hierarchy":{"lvl1":"Data Visualization","lvl3":"Notes","lvl2":"Learning Outcomes"},"type":"lvl3","url":"/notebooks/visualization#notes","position":8},{"hierarchy":{"lvl1":"Data Visualization","lvl3":"Notes","lvl2":"Learning Outcomes"},"content":"","type":"content","url":"/notebooks/visualization#notes","position":9}]}