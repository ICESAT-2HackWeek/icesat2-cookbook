{"version":2,"kind":"Notebook","sha256":"926fdb87b4493df0ee4568c53b5cdf5c3b0cad6071065882ce7214e309de3117","slug":"notebooks.visualization","location":"/notebooks/visualization.ipynb","dependencies":[],"frontmatter":{"title":"Interactive Visualizion with Open Altimetry & Google Earth Engine","kernelspec":{"name":"python3","display_name":"Python 3"},"skip_execution":true,"content_includes_title":false,"authors":[{"nameParsed":{"literal":"ICESat-2 team","given":"ICESat-2","family":"team"},"name":"ICESat-2 team","id":"contributors-myst-generated-uid-0"}],"open_access":true,"license":{"content":{"id":"CC-BY-4.0","url":"https://creativecommons.org/licenses/by/4.0/","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true},"code":{"id":"Apache-2.0","url":"https://opensource.org/licenses/Apache-2.0","name":"Apache License 2.0","free":true,"osi":true}},"github":"https://github.com/ICESAT-2HackWeek/icesat2-cookbook","copyright":"2025","affiliations":[{"id":"UAlbany","name":"University at Albany (SUNY)","department":"Atmospheric and Environmental Sciences","url":"https://www.albany.edu/daes"},{"id":"CISL","name":"NSF National Center for Atmospheric Research","department":"Computational and Information Systems Lab","url":"https://www.cisl.ucar.edu"},{"id":"Unidata","name":"NSF Unidata","url":"https://www.unidata.ucar.edu"},{"id":"Argonne","name":"Argonne National Laboratory","department":"Environmental Science Division","url":"https://www.anl.gov/evs"},{"id":"CarbonPlan","name":"CarbonPlan","url":"https://carbonplan.org"},{"id":"NVIDIA","name":"NVIDIA Corporation","url":"https://www.nvidia.com/"}],"numbering":{"title":{"offset":1}},"edit_url":"https://github.com/ICESAT-2HackWeek/icesat2-cookbook/blob/HEAD/notebooks/visualization.ipynb","thumbnail":"/icesat2-cookbook/_preview/24/build/b785ddce6158c1efca3b023af48fd454.jpeg","exports":[{"format":"ipynb","filename":"visualization.ipynb","url":"/icesat2-cookbook/_preview/24/build/visualization-b1798e7cce9e09531b1ba89a65975611.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","data":{"tags":[],"user_expressions":[]},"children":[{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"By Philipp Arndt, Chancelor Roberts ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"EDF5zsOtdw"},{"type":"break","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"B67vp46bPR"},{"type":"text","value":"Scripps Institution of Oceanography, University of California San Diego ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"t86HoOQoO5"},{"type":"break","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"yhR78n28tb"},{"type":"text","value":"Github: ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Nl4EM55KFt"},{"type":"link","url":"https://github.com/fliphilipp","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"cite","identifier":"fliphilipp","label":"fliphilipp","kind":"narrative","position":{"start":{"line":3,"column":122},"end":{"line":3,"column":133}},"error":"not found","key":"T8OV33w0Y4"}],"urlSource":"https://github.com/fliphilipp","error":true,"key":"iuzzB0UHHU"},{"type":"text","value":", ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"LXX7t4WVml"},{"type":"link","url":"https://github.com/chancelorr","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"cite","identifier":"chancelorr","label":"chancelorr","kind":"narrative","position":{"start":{"line":3,"column":168},"end":{"line":3,"column":179}},"error":"not found","key":"d6rjW69gsT"}],"urlSource":"https://github.com/chancelorr","error":true,"key":"F5QLqzScxa"},{"type":"text","value":" ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"MELLgzT4kI"},{"type":"break","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"cWkEOzyCDJ"},{"type":"text","value":"Contact: ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"tX0XunxtZP"},{"type":"link","url":"mailto:ccroberts@ucsd.edu","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"ccroberts@ucsd.edu","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"HuW7IXE3Vt"}],"urlSource":"mailto:ccroberts@ucsd.edu","key":"qSkqPREBSC"}],"key":"RdkYXToQCu"}],"visibility":"show","key":"DjqOUFDaD0"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Prerequisites","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"oT6xiWvQgQ"}],"identifier":"prerequisites","label":"Prerequisites","html_id":"prerequisites","implicit":true,"key":"kYtDa7xSki"},{"type":"table","position":{"start":{"line":3,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"tableRow","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"tableCell","header":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Concepts","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"MLpCpHCEoH"}],"key":"eUnhyGisf3"},{"type":"tableCell","header":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Importance","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"VlY968Ug5p"}],"key":"lV27gUCi9N"},{"type":"tableCell","header":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Notes","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"VgkeETVbCu"}],"key":"ntfezUvbPz"}],"key":"xFyDz5Cv4n"},{"type":"tableRow","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"link","url":"https://foundations.projectpythia.org/core/pandas/pandas","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"pandas","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"HYrfWQDiDx"}],"urlSource":"https://foundations.projectpythia.org/core/pandas/pandas","key":"QLaXDP13UC"}],"key":"IwPkGbvEiN"},{"type":"tableCell","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Necessary","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"eePn60wteP"}],"key":"cVsg6IaiO3"},{"type":"tableCell","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"ICESat-2 data in this tutorial will appear as ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"cmoIfiLFG9"},{"type":"inlineCode","value":"geopandas","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"u7vLHfToLE"},{"type":"text","value":" DataFrames organized within a custom class object called a ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"ZY040L6gb8"},{"type":"inlineCode","value":"dataCollector","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"FQKexoPUON"}],"key":"HDhdS6yqRz"}],"key":"VzZKk1VGom"},{"type":"tableRow","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"link","url":"https://foundations.projectpythia.org/core/matplotlib","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"numpy/matplotlib","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"QIB4Sc903o"}],"urlSource":"https://foundations.projectpythia.org/core/matplotlib","key":"hf3UXFTGRk"}],"key":"Nm8YvblBTB"},{"type":"tableCell","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Necessary","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"C4PsyVLevU"}],"key":"AHIKcoPaq4"},{"type":"tableCell","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"We will plot ICESat-2 data with ","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"e6zR6Jyx1N"},{"type":"inlineCode","value":"matplotlib","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"ECyBXFOUEn"}],"key":"VwbrkDBFc8"}],"key":"l2gziRKyQ6"},{"type":"tableRow","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"link","url":"https://geog-312.gishub.org/book/geospatial/rasterio.html","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"rasterio","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"zFe69zPXlH"}],"urlSource":"https://geog-312.gishub.org/book/geospatial/rasterio.html","key":"LeYqrjkxnN"}],"key":"SCWFbcqXNG"},{"type":"tableCell","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Helpful","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"X8SoU5GMlN"}],"key":"EKelCz5r5s"},{"type":"tableCell","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"We will plot images with ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"dJfY1cf1vu"},{"type":"inlineCode","value":"rasterio","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"tq5DmDXmYy"}],"key":"Aj05eKs6F6"}],"key":"XlI8WH4GpB"},{"type":"tableRow","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"link","url":"/notebooks/mission-overview","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"ICESat-2 Mission Overview","key":"iQW1wQamc5"}],"urlSource":"mission-overview.ipynb","dataUrl":"/notebooks.mission-overview.json","internal":true,"protocol":"file","key":"YWoPufXAT1"}],"key":"rJk1GbG2Mf"},{"type":"tableCell","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Helpful","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"w5UYKXrF3R"}],"key":"E6ZO6cSHh5"},{"type":"tableCell","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Here is where to go to understand the ICESat-2 mission and its goals","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"auI2vk45JO"}],"key":"SXgAhQdKWc"}],"key":"kBsNbTLbI0"}],"key":"FbnJIwURZ7"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"strong","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"Time to learn","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"yxeWWjKRFk"}],"key":"Wr29pF71Ih"},{"type":"text","value":":  30 min.","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"SfM7h984C0"}],"key":"pAAfDfkqis"}],"key":"PoR8X0yRM1"}],"key":"uzC0tNOvvq"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Learning Objectives","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"r8ybAPn32z"}],"identifier":"learning-objectives","label":"Learning Objectives","html_id":"learning-objectives","implicit":true,"key":"hdAw24lW63"},{"type":"table","position":{"start":{"line":3,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"tableRow","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"tableCell","header":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Concepts","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"B5gHB81gAD"}],"key":"uDlNtTYSrJ"},{"type":"tableCell","header":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Notes","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"tTnUAs0lXx"}],"key":"qW3LaxNyfK"}],"key":"DhPDLLJxs5"},{"type":"tableRow","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"link","url":"https://openaltimetry.org/data/icesat2/","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"OpenAltimetry","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"aCehDdn8z9"}],"urlSource":"https://openaltimetry.org/data/icesat2/","key":"F5mZ18WJLs"}],"key":"HdCS3q03KR"},{"type":"tableCell","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"We will learn to browse OpenAltimetry to discover ICESat-2 data, then view them as profiles or overlay them on a map","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"lni2TAiIr0"}],"key":"yxLCq9mW9l"}],"key":"sKQPuF5miM"},{"type":"tableRow","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"link","url":"https://earthengine.google.com/","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Google Earth Engine","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"VkLEZwq1b0"}],"urlSource":"https://earthengine.google.com/","key":"Vpt1Fts713"}],"key":"HE5U6Esw5i"},{"type":"tableCell","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"We will learn to browse Google Earth Engine to find the closest-in-time Sentinel-2 image that is cloud-free along ICESat-2’s ground track","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"oc0szybbDY"}],"key":"VCN7tzBTiu"}],"key":"IDm92nbeO9"},{"type":"tableRow","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"link","url":"https://geemap.org/get-started/#use-basemaps","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"geemap","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"sSd8NC9FZs"}],"urlSource":"https://geemap.org/get-started/#use-basemaps","key":"Mxi5O62zvo"}],"key":"SXgRJyXGa8"},{"type":"tableCell","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"We will see a demonstration of the interactive mapping options available through GEEMap’s implementation of the ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"qTZgw6IUWx"},{"type":"inlineCode","value":"folium","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"JEB8MCwVgL"},{"type":"text","value":" and ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"xgJNZTjrgb"},{"type":"inlineCode","value":"ipyleaflet","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"gso8swbymv"},{"type":"text","value":" python libraries","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"m8B9d5O1r9"}],"key":"HPTPnppobh"}],"key":"d7hlvUktJC"},{"type":"tableRow","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"link","url":"https://www.w3schools.com/python/python_dictionaries.asp","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"dicts","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"rWahTESLQO"}],"urlSource":"https://www.w3schools.com/python/python_dictionaries.asp","key":"PFcJnOueZ0"}],"key":"j6ewDg7y14"},{"type":"tableCell","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"We see an example usage of Python’s dictionary data structure to organize incoming ICESat-2 data and Google Earth Engine imagery","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"N2r2DCWsug"}],"key":"cn1s0mhjik"}],"key":"iGdjyipwSm"}],"key":"CHAnm6Bq0n"}],"key":"IVX8J0YALX"},{"type":"block","kind":"notebook-content","data":{"user_expressions":[]},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Computing environment","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"BJkC9XRYZ4"}],"identifier":"computing-environment","label":"Computing environment","html_id":"computing-environment","implicit":true,"key":"tDNe7bLyk6"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"We’ll be using the following Python libraries in this notebook:","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"ojNJ03uBre"}],"key":"FUfiG9s3w2"}],"key":"zAMN5zG8y6"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"#%matplotlib widget \nimport os\nimport ee\nimport geemap\nimport requests\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pylab as plt\nfrom datetime import datetime\nfrom datetime import timedelta\nfrom ipywidgets import Layout\nimport rasterio as rio\nfrom rasterio import plot as rioplot\nfrom rasterio import warp","visibility":"show","key":"P4aBCssm45"},{"type":"output","id":"sIGvRVlzmhz6si8dorR1N","data":[{"name":"stderr","output_type":"stream","text":"/Users/ccroberts/opt/miniforge3/envs/is2cb/lib/python3.13/site-packages/geemap/conversion.py:23: UserWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html. The pkg_resources package is slated for removal as early as 2025-11-30. Refrain from using this package or pin to Setuptools<81.\n  import pkg_resources\n"}],"visibility":"show","key":"GCYtmabwdB"}],"visibility":"show","key":"tREfeL5krA"},{"type":"block","kind":"notebook-content","data":{"user_expressions":[]},"children":[{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"The import below is a class that I wrote myself. It helps us read and store data from the OpenAltimetry API.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"KLk2GryY7V"},{"type":"break","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"vGc4LqZILp"},{"type":"text","value":"If you are interested in how this works, you can find the code in ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"V4p2laezRe"},{"type":"inlineCode","value":"utils/oa.py","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"Nt4j7Mm1tw"},{"type":"text","value":".","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"n3UHl9VTAx"}],"key":"vkv2suHJtw"}],"key":"nvCo7In31K"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"import utils.oa as oa\nfrom utils.oa import dataCollector","visibility":"show","key":"navIqoxLvM"},{"type":"output","id":"ljF2Adiw7yUMsHvy8ScJM","data":[{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"\n            <style>\n                .geemap-dark {\n                    --jp-widgets-color: white;\n                    --jp-widgets-label-color: white;\n                    --jp-ui-font-color1: white;\n                    --jp-layout-color2: #454545;\n                    background-color: #383838;\n                }\n\n                .geemap-dark .jupyter-button {\n                    --jp-layout-color3: #383838;\n                }\n\n                .geemap-colab {\n                    background-color: var(--colab-primary-surface-color, white);\n                }\n\n                .geemap-colab .jupyter-button {\n                    --jp-layout-color3: var(--colab-primary-surface-color, white);\n                }\n            </style>\n            ","content_type":"text/html"},"text/plain":{"content":"<IPython.core.display.HTML object>","content_type":"text/plain"}}}],"visibility":"show","key":"gt2KrdQ8wk"}],"visibility":"show","key":"rcshuNlS3i"},{"type":"block","kind":"notebook-content","data":{"user_expressions":[]},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Google Earth Engine Authentication and Initialization","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"JCsKrn996M"}],"identifier":"google-earth-engine-authentication-and-initialization","label":"Google Earth Engine Authentication and Initialization","html_id":"google-earth-engine-authentication-and-initialization","implicit":true,"key":"mtd1c7BqQu"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"GEE requires you to authenticate your access, so if ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"wv9ui6uEvi"},{"type":"inlineCode","value":"ee.Initialize()","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"R9JZkXCHKH"},{"type":"text","value":" does not work you first need to run ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"re6iwbBrUi"},{"type":"inlineCode","value":"ee.Authenticate()","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"Q8htWYxErJ"},{"type":"text","value":". This gives you a link at which you can use your google account that is associated with GEE to get an authorization code. Copy the authorization code into the input field and hit ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"BaVjbGpSFd"},{"type":"emphasis","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"enter","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"q2aRKHPTXN"}],"key":"V3LV0POf4H"},{"type":"text","value":" to complete authentication.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"Unel6YtlFp"}],"key":"ACJAsaHZan"}],"key":"qtzZqR0BQA"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"try:\n    ee.Initialize()\nexcept: \n    ee.Authenticate()\n    ee.Initialize()","visibility":"show","key":"sfeJYR6xDt"},{"type":"output","id":"p5lwtQxYAoX1i6wjwlzMu","data":[{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"\n            <style>\n                .geemap-dark {\n                    --jp-widgets-color: white;\n                    --jp-widgets-label-color: white;\n                    --jp-ui-font-color1: white;\n                    --jp-layout-color2: #454545;\n                    background-color: #383838;\n                }\n\n                .geemap-dark .jupyter-button {\n                    --jp-layout-color3: #383838;\n                }\n\n                .geemap-colab {\n                    background-color: var(--colab-primary-surface-color, white);\n                }\n\n                .geemap-colab .jupyter-button {\n                    --jp-layout-color3: var(--colab-primary-surface-color, white);\n                }\n            </style>\n            ","content_type":"text/html"},"text/plain":{"content":"<IPython.core.display.HTML object>","content_type":"text/plain"}}}],"visibility":"show","key":"UalQ6tDBlv"}],"visibility":"show","key":"dxFGbKgiIG"},{"type":"block","kind":"notebook-content","data":{"user_expressions":[]},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Downloading data from the OpenAltimetry API","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"sHjQLtUKcE"}],"identifier":"downloading-data-from-the-openaltimetry-api","label":"Downloading data from the OpenAltimetry API","html_id":"downloading-data-from-the-openaltimetry-api","implicit":true,"key":"skpKPn6YIC"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Let’s say we have found some data that looks weird to us, and we don’t know what’s going on.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"qXfSQbRgOP"}],"key":"GVejgnmpwd"},{"type":"image","url":"/icesat2-cookbook/_preview/24/build/b785ddce6158c1efca3b023af48fd454.jpeg","alt":"image showing OpenAltimetry screenshot","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"jXgCvBoqIg","urlSource":"https://raw.githubusercontent.com/fliphilipp/images/main/oa-data.jpg"},{"type":"heading","depth":3,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"A short explanation of how I got the data:","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"vMpTDAdPh0"}],"identifier":"a-short-explanation-of-how-i-got-the-data","label":"A short explanation of how I got the data:","html_id":"a-short-explanation-of-how-i-got-the-data","implicit":true,"key":"sszkSKm8IP"},{"type":"paragraph","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"I went to ","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"ZbeKb3t5co"},{"type":"link","url":"https://openaltimetry.org/","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"openaltimetry.org","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"WqIpU0x8v8"}],"urlSource":"https://openaltimetry.org/","key":"TsRA0TvMB3"},{"type":"text","value":" and selected ","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"srHjgJssX0"},{"type":"strong","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"BROWSE ICESAT-2 DATA","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"ugo8hjyVqi"}],"key":"cfNwXiOIzw"},{"type":"text","value":". Then I selected ","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"iGasR3yHB7"},{"type":"strong","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"ATL 06","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"mcoDW56lhC"}],"key":"sgJMhBMfT8"},{"type":"text","value":" (Land Ice Height) on the top right, and switched the projection🌎 to ","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"CtaXqJRB3r"},{"type":"strong","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Arctic","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"wOYpVjnsq4"}],"key":"MYbvZP9EUN"},{"type":"text","value":". Then I selected ","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"LohwmeEIsH"},{"type":"strong","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"August 22, 2021","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"LerBe895O6"}],"key":"IENludsvvo"},{"type":"text","value":" in the calendar📅 on the bottom left, and toggled the ","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"RVdmwebz0B"},{"type":"strong","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"cloud","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"gSc009Hxxl"}],"key":"TRHWGMkXvV"},{"type":"text","value":"☁️ button to show MODIS imagery of that date. I then zoomed in on my region of interest.","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"fytIpSUsqE"}],"key":"d5klHtYvaf"},{"type":"paragraph","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"To find out what ICESat-2 has to offer here, I clicked on ","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"dTYwb2Xk2D"},{"type":"strong","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"SELECT A REGION","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"GJFMYNLPU4"}],"key":"blkgHZ55c7"},{"type":"text","value":" on the top left, and drew a rectangle around that mysterious cloud. When right-clicking on that rectangle, I could select ","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"pCoBfCZJqg"},{"type":"strong","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"View Elevation profile","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"h9F7JXDt04"}],"key":"HGHGHWmDec"},{"type":"text","value":". This opened a new tab, and showed me ATL06 and ATL08 elevations.","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"axzTuu4O7f"}],"key":"QyFcC68PoZ"},{"type":"paragraph","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"text","value":"It looks like ATL06 can’t decide where the surface is, and ATL08 tells me that there’s a forest canopy on the Greenland Ice Sheet? To get to the bottom of this, I scrolled all the way down and selected 🛈","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"r2hR4Z235o"},{"type":"strong","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"text","value":"Get API URL","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"lMndUyyk1z"}],"key":"QvGBESI1m2"},{"type":"text","value":". The website confirms that the ","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"szYh4l3l5u"},{"type":"emphasis","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"text","value":"“API endpoint was copied to clipboard.”","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"oesryKJqcF"}],"key":"NfaJFRopdv"},{"type":"text","value":" Now I can use this to access the data myself.","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"Vq1RD280Hj"}],"key":"RgnaL9edkm"},{"type":"admonition","kind":"tip","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Tip","key":"JkFL8jnQlE"}],"key":"EbCxmQ8tWD"},{"type":"paragraph","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"text","value":"Instead of trying to find this region yourself, you can access the OpenAltimetry page shown above by going to ","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"yCcKo0N3qq"},{"type":"link","url":"http://openaltimetry.org/data/icesat2/?annoId=580&shareKey=d8bebfb8251a69b5b7e2e05df6fd5ca5","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"text","value":"this annotation🏷️","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"j4WjXwKLSg"}],"urlSource":"http://openaltimetry.org/data/icesat2/?annoId=580&shareKey=d8bebfb8251a69b5b7e2e05df6fd5ca5","key":"HpDRbeH2v7"},{"type":"text","value":". Just left-click on the red box and select “View Elevation Profile”.*","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"sFY08GPcjG"}],"key":"jWgHji9CYg"}],"key":"lFSNkvD4xu"}],"key":"JEX1sqXieF"},{"type":"block","kind":"notebook-content","data":{"user_expressions":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Getting the OpenAltimetry info into python","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"lssASuvFP7"}],"identifier":"getting-the-openaltimetry-info-into-python","label":"Getting the OpenAltimetry info into python","html_id":"getting-the-openaltimetry-info-into-python","implicit":true,"key":"Z8TuQuOCUA"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"All we need to do is to paste the API URL that we copied from the webpage into a string.\nWe also need to specify which beam we would like to look at. The ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"FckTeDIjTC"},{"type":"strong","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"GT1R","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"Y6DHK5X2QN"}],"key":"jVG5iqDtXU"},{"type":"text","value":" ground track looks funky, so let’s look at that one!","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"UiLlVP0fdB"}],"key":"bAO4vIlTwc"}],"key":"YUk9wu6BRD"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"# paste the API URL from OpenAltimetry below, and specify the beam you are interested in\noa_api_url = 'https://openaltimetry.earthdatacloud.nasa.gov/data/icesat2/elevation?minx=-25.4835556641541&miny=76.44321462688005&maxx=-21.976284749133928&maxy=77.33633089376721&zoom_level=5&beams=1,2,3,4,5,6&tracks=1236&date=2024-09-06&product=ATL06&mapType=arctic'\ngtx = 'gt1r'","visibility":"show","key":"fDkkYh2NXS"},{"type":"output","id":"qphPMXjO_iedD1yRysw0g","data":[{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"\n            <style>\n                .geemap-dark {\n                    --jp-widgets-color: white;\n                    --jp-widgets-label-color: white;\n                    --jp-ui-font-color1: white;\n                    --jp-layout-color2: #454545;\n                    background-color: #383838;\n                }\n\n                .geemap-dark .jupyter-button {\n                    --jp-layout-color3: #383838;\n                }\n\n                .geemap-colab {\n                    background-color: var(--colab-primary-surface-color, white);\n                }\n\n                .geemap-colab .jupyter-button {\n                    --jp-layout-color3: var(--colab-primary-surface-color, white);\n                }\n            </style>\n            ","content_type":"text/html"},"text/plain":{"content":"<IPython.core.display.HTML object>","content_type":"text/plain"}}}],"visibility":"show","key":"cT8Tj08B9r"}],"visibility":"show","key":"LqhVzIcVT0"},{"type":"block","kind":"notebook-content","data":{"user_expressions":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"We can now initialize a ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"lGb2zDaBZb"},{"type":"inlineCode","value":"dataCollector","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"hviwNKb9xN"},{"type":"text","value":" object, using the copy-pasted OpenAltimetry API URL, and the beam we would like to look at. ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"JO0eQ43CcR"},{"type":"break","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"y8FATcfl5G"},{"type":"emphasis","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"(Again, I defined this class in ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"KA2Iz3WAvd"},{"type":"inlineCode","value":"utils/oa.py","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"V3YEbMuUBr"},{"type":"text","value":" to do some work for us in the background.)","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"aebDwNczGC"}],"key":"t02VY8u952"}],"key":"FOcmeh0SIQ"}],"key":"UzPPi7Lgnw"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"is2data = dataCollector(oaurl=oa_api_url, beam=gtx, verbose=True)","visibility":"show","key":"nwXoArQVvd"},{"type":"output","id":"4nwBkHRLUGu1B_uqwXNaD","data":[{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"\n            <style>\n                .geemap-dark {\n                    --jp-widgets-color: white;\n                    --jp-widgets-label-color: white;\n                    --jp-ui-font-color1: white;\n                    --jp-layout-color2: #454545;\n                    background-color: #383838;\n                }\n\n                .geemap-dark .jupyter-button {\n                    --jp-layout-color3: #383838;\n                }\n\n                .geemap-colab {\n                    background-color: var(--colab-primary-surface-color, white);\n                }\n\n                .geemap-colab .jupyter-button {\n                    --jp-layout-color3: var(--colab-primary-surface-color, white);\n                }\n            </style>\n            ","content_type":"text/html"},"text/plain":{"content":"<IPython.core.display.HTML object>","content_type":"text/plain"}}},{"name":"stdout","output_type":"stream","text":"OpenAltimetry API URL: https://openaltimetry.earthdatacloud.nasa.gov/data/api/icesat2/atlXX?minx=-25.4835556641541&maxx=-21.976284749133928&miny=76.44321462688005&maxy=77.33633089376721&date=2024-09-06&trackId=1236&beamNames=gt1r&client=portal&outputFormat=json\nDate: 2024-09-06\nTrack: 1236\nBeam: gt1r\nLatitude limits: ['76.44321462688005', '77.33633089376721']\nLongitude limits: ['-25.4835556641541', '76.44321462688005']\n"}],"visibility":"show","key":"A8MsRWdMxp"}],"visibility":"show","key":"uLqVXlr7i0"},{"type":"block","kind":"notebook-content","data":{"user_expressions":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Alternatively, we could use a date, track number, beam, and lat/lon bounding box as input to the ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"LODIUvQ6oI"},{"type":"inlineCode","value":"dataCollector","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"oeaHWgGNwq"},{"type":"text","value":".","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"utqJtG0Fca"}],"key":"iS7bICACUt"}],"key":"pxLkB15IFY"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"date = '2021-08-22'\nrgt = 909\nbeam = 'gt1r'\nlatlims = [77.5326, 77.5722]\nlonlims = [-23.9891, -23.9503]\nis2data = dataCollector(date=date, latlims=latlims, lonlims=lonlims, track=rgt, beam=beam, verbose=True)","visibility":"show","key":"nhGWWMieti"},{"type":"output","id":"-MK1Chmrl-DqZobP4ig3l","data":[{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"\n            <style>\n                .geemap-dark {\n                    --jp-widgets-color: white;\n                    --jp-widgets-label-color: white;\n                    --jp-ui-font-color1: white;\n                    --jp-layout-color2: #454545;\n                    background-color: #383838;\n                }\n\n                .geemap-dark .jupyter-button {\n                    --jp-layout-color3: #383838;\n                }\n\n                .geemap-colab {\n                    background-color: var(--colab-primary-surface-color, white);\n                }\n\n                .geemap-colab .jupyter-button {\n                    --jp-layout-color3: var(--colab-primary-surface-color, white);\n                }\n            </style>\n            ","content_type":"text/html"},"text/plain":{"content":"<IPython.core.display.HTML object>","content_type":"text/plain"}}},{"name":"stdout","output_type":"stream","text":"OpenAltimetry API URL: https://openaltimetry.earthdatacloud.nasa.gov/data/api/icesat2/atlXX?minx=-23.9891&miny=77.5326&maxx=-23.9503&maxy=77.5722&date=2021-08-22&trackId=909&beamNames=gt1r&client=portal&outputFormat=json\nDate: 2021-08-22\nTrack: 909\nBeam: gt1r\nLatitude limits: [77.5326, 77.5722]\nLongitude limits: [-23.9891, 77.5326]\n"}],"visibility":"show","key":"xLP2mFyECn"}],"visibility":"show","key":"OUUgOfCMfC"},{"type":"block","kind":"notebook-content","data":{"user_expressions":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Note that this also constructs the API url for us.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"yXHFCQXrgl"}],"key":"A0SANxTdW5"}],"key":"rjc1JnbF61"},{"type":"block","kind":"notebook-content","data":{"user_expressions":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Requesting the data from the OpenAltimetry API","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"XLPRQsXenQ"}],"identifier":"requesting-the-data-from-the-openaltimetry-api","label":"Requesting the data from the OpenAltimetry API","html_id":"requesting-the-data-from-the-openaltimetry-api","implicit":true,"key":"oWODxWuGQq"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Here we use the ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"rDWpNEbVdD"},{"type":"inlineCode","value":"requestData()","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"mTehe4jUqh"},{"type":"text","value":" function of the ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"wExoWr44O8"},{"type":"inlineCode","value":"dataCollector","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"I4dduqWIoo"},{"type":"text","value":" class, which is defined in ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"fFn5TagWOB"},{"type":"inlineCode","value":"utils/oa.py","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"Alm8ZtiejK"},{"type":"text","value":". It downloads all data products that are available on OpenAltimetry based on the inputs with which we initialized our ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"n1f58EgHFW"},{"type":"inlineCode","value":"dataCollector","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"ISPEcJ0PTM"},{"type":"text","value":", and writes them to pandas dataframes.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"bXGzQzGDoW"}],"key":"D904cerScQ"}],"key":"vkMT6IeFMT"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"is2data.requestData(verbose=True)","visibility":"show","key":"OZyp2cUsdD"},{"type":"output","id":"NHeVC3ucwyHRiAqwHnT0W","data":[{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"\n            <style>\n                .geemap-dark {\n                    --jp-widgets-color: white;\n                    --jp-widgets-label-color: white;\n                    --jp-ui-font-color1: white;\n                    --jp-layout-color2: #454545;\n                    background-color: #383838;\n                }\n\n                .geemap-dark .jupyter-button {\n                    --jp-layout-color3: #383838;\n                }\n\n                .geemap-colab {\n                    background-color: var(--colab-primary-surface-color, white);\n                }\n\n                .geemap-colab .jupyter-button {\n                    --jp-layout-color3: var(--colab-primary-surface-color, white);\n                }\n            </style>\n            ","content_type":"text/html"},"text/plain":{"content":"<IPython.core.display.HTML object>","content_type":"text/plain"}}},{"name":"stdout","output_type":"stream","text":"---> requesting ATL03 data... 6314 data points.\n---> requesting ATL06 data... 194 data points.\n---> requesting ATL07 data... request failed.\n---> requesting ATL08 data... 26 data points.\n---> requesting ATL10 data... request failed.\n---> requesting ATL12 data... request failed.\n"}],"visibility":"show","key":"isg6OZ9aig"}],"visibility":"show","key":"pP8leQ3xph"},{"type":"block","kind":"notebook-content","data":{"user_expressions":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"The data are now stored as data frames in our ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"fDR0GbfwDE"},{"type":"inlineCode","value":"dataCollector","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"mFJWcvTjDB"},{"type":"text","value":" object. To verify this, we can run the cell below.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"z9ZdVx21ib"}],"key":"BfteJQEUGB"}],"key":"Qq6ya81NIl"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"vars(is2data)","visibility":"show","key":"arHwt6o3fl"},{"type":"output","id":"0mQ3qtgR_DIWE6CnbZC_c","data":[{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"\n            <style>\n                .geemap-dark {\n                    --jp-widgets-color: white;\n                    --jp-widgets-label-color: white;\n                    --jp-ui-font-color1: white;\n                    --jp-layout-color2: #454545;\n                    background-color: #383838;\n                }\n\n                .geemap-dark .jupyter-button {\n                    --jp-layout-color3: #383838;\n                }\n\n                .geemap-colab {\n                    background-color: var(--colab-primary-surface-color, white);\n                }\n\n                .geemap-colab .jupyter-button {\n                    --jp-layout-color3: var(--colab-primary-surface-color, white);\n                }\n            </style>\n            ","content_type":"text/html"},"text/plain":{"content":"<IPython.core.display.HTML object>","content_type":"text/plain"}}},{"output_type":"execute_result","execution_count":8,"metadata":{},"data":{"text/plain":{"content":"{'url': 'https://openaltimetry.earthdatacloud.nasa.gov/data/api/icesat2/atlXX?minx=-23.9891&miny=77.5326&maxx=-23.9503&maxy=77.5722&date=2021-08-22&trackId=909&beamNames=gt1r&client=portal&outputFormat=json',\n 'date': '2021-08-22',\n 'track': 909,\n 'beam': 'gt1r',\n 'latlims': [77.5326, 77.5722],\n 'lonlims': [-23.9891, 77.5326],\n 'atl03':             lat        lon           h   conf\n 0     77.572273 -23.953864  748.409241  Noise\n 1     77.572246 -23.953913  847.594727  Noise\n 2     77.572247 -23.953895  785.343201  Noise\n 3     77.572232 -23.953941  906.424866  Noise\n 4     77.572222 -23.953903  739.359497  Noise\n ...         ...        ...         ...    ...\n 6309  77.532606 -23.986983  788.247559   High\n 6310  77.532600 -23.986988  787.683777   High\n 6311  77.532593 -23.986994  788.859985   High\n 6312  77.532594 -23.986993  786.800476   High\n 6313  77.532594 -23.986993  787.658264   High\n \n [6314 rows x 4 columns],\n 'atl06':            lat        lon           h\n 0    77.572104 -23.954022  810.224304\n 1    77.571928 -23.954170  809.449646\n 2    77.571751 -23.954318  808.569153\n 3    77.571575 -23.954466  808.484558\n 4    77.571398 -23.954613  808.140320\n ..         ...        ...         ...\n 189  77.533473 -23.986257  785.033386\n 190  77.533297 -23.986406  785.808105\n 191  77.533120 -23.986555  786.543274\n 192  77.532944 -23.986702  787.244507\n 193  77.532768 -23.986849  787.765320\n \n [194 rows x 3 columns],\n 'atl08':           lat        lon           h        canopy\n 0   77.571838 -23.954245  809.255493  3.402823e+38\n 1   77.570961 -23.954979  807.246216  3.402823e+38\n 2   77.570076 -23.955711  804.799744  3.402823e+38\n 3   77.569191 -23.956451  801.567993  3.410217e+00\n 4   77.568314 -23.957197  797.294250  3.402823e+38\n 5   77.567429 -23.957932  793.571960  3.175049e+00\n 6   77.566551 -23.958658  789.192017  2.079102e+00\n 7   77.565666 -23.959396  784.972778  1.745239e+00\n 8   77.564781 -23.960142  781.505920  3.402823e+38\n 9   77.563904 -23.960869  776.662964  2.394409e+00\n 10  77.563019 -23.961609  771.332397  6.974670e+00\n 11  77.562141 -23.962358  761.032227  1.180969e+01\n 12  77.544502 -23.977083  763.093262  8.813538e+00\n 13  77.543617 -23.977800  764.617065  8.257019e+00\n 14  77.542732 -23.978540  764.995605  7.054932e+00\n 15  77.541855 -23.979282  769.079590  4.145813e+00\n 16  77.540970 -23.980009  771.878052  3.402823e+38\n 17  77.540085 -23.980747  773.208191  3.402823e+38\n 18  77.539207 -23.981489  774.369629  3.402823e+38\n 19  77.538322 -23.982227  776.913086  3.402823e+38\n 20  77.537445 -23.982954  777.269653  3.402823e+38\n 21  77.536560 -23.983694  779.454041  3.402823e+38\n 22  77.535675 -23.984425  780.175171  3.590332e+00\n 23  77.534798 -23.985142  781.494263  3.402823e+38\n 24  77.533913 -23.985882  783.230103  3.402823e+38\n 25  77.533035 -23.986628  785.877747  3.402823e+38}","content_type":"text/plain"}}}],"visibility":"show","key":"bHGKx85nZ4"}],"visibility":"show","key":"xETp2ZArGA"},{"type":"block","kind":"notebook-content","data":{"user_expressions":[]},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Plotting the ICESat-2 data","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"bEWIG5D113"}],"identifier":"plotting-the-icesat-2-data","label":"Plotting the ICESat-2 data","html_id":"plotting-the-icesat-2-data","implicit":true,"key":"zeCegfAUdI"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Now let’s plot this data. Here, we are just creating an empty figure ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"wyF1plJZvL"},{"type":"inlineCode","value":"fig","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"Jk3gt4gPLd"},{"type":"text","value":" with axes ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"NReytqA44N"},{"type":"inlineCode","value":"ax","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"Dl1UBHYbYR"},{"type":"text","value":".","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"Kj3kWbRmn8"}],"key":"EqICtXoBft"}],"key":"y5wwtIUTLF"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"# create the figure and axis\nfig, ax = plt.subplots(figsize=[9,5])\n\n# plot the data products\natl06, = ax.plot(is2data.atl06.lat, is2data.atl06.h, c='C0', linestyle='-', label='ATL06')\natl08, = ax.plot(is2data.atl08.lat, is2data.atl08.h, c='C2', linestyle=':', label='ATL08')\nif np.sum(~np.isnan(is2data.atl08.canopy))>0:\n    atl08canopy = ax.scatter(is2data.atl08.lat, is2data.atl08.h+is2data.atl08.canopy, s=2, c='C2', label='ATL08 canopy')\n\n# add labels, title and legend\nax.set_xlabel('latitude')\nax.set_ylabel('elevation in meters')\nax.set_title('Some ICESat-2 data I found on OpenAltimetry!')\nax.legend(loc='upper left')\n\n# add some text to provide info on what is plotted\ninfo = 'ICESat-2 track {track:d}-{beam:s} on {date:s}\\n({lon:.4f}E, {lat:.4f}N)'.format(track=is2data.track, \n                                                                                        beam=is2data.beam.upper(), \n                                                                                        date=is2data.date, \n                                                                                        lon=np.mean(is2data.lonlims), \n                                                                                        lat=np.mean(is2data.latlims))\ninfotext = ax.text(0.01, -0.08, info,\n                   horizontalalignment='left', \n                   verticalalignment='top', \n                   transform=ax.transAxes,\n                   fontsize=7,\n                   bbox=dict(edgecolor=None, facecolor='white', alpha=0.9, linewidth=0))\n\n# set the axis limits\nax.set_xlim((is2data.atl03.lat.min(), is2data.atl03.lat.max()))\nax.set_ylim((741, 818));","visibility":"show","key":"biCaRNadsP"},{"type":"output","id":"myDy6uf8PSkP2HXiueDCl","data":[{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"\n            <style>\n                .geemap-dark {\n                    --jp-widgets-color: white;\n                    --jp-widgets-label-color: white;\n                    --jp-ui-font-color1: white;\n                    --jp-layout-color2: #454545;\n                    background-color: #383838;\n                }\n\n                .geemap-dark .jupyter-button {\n                    --jp-layout-color3: #383838;\n                }\n\n                .geemap-colab {\n                    background-color: var(--colab-primary-surface-color, white);\n                }\n\n                .geemap-colab .jupyter-button {\n                    --jp-layout-color3: var(--colab-primary-surface-color, white);\n                }\n            </style>\n            ","content_type":"text/html"},"text/plain":{"content":"<IPython.core.display.HTML object>","content_type":"text/plain"}}},{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"68753cf7151e20ed502f0a699ef32702","path":"/icesat2-cookbook/_preview/24/build/68753cf7151e20ed502f0a699ef32702.png"},"text/plain":{"content":"<Figure size 900x500 with 1 Axes>","content_type":"text/plain"}}}],"visibility":"show","key":"fGtv1i322m"}],"visibility":"show","key":"ZhsRov5W6K"},{"type":"block","kind":"notebook-content","data":{"user_expressions":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Let’s add the ATL03 photons to better understand what might be going on here.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"R4gEJ2vlh0"}],"key":"g9hHcN3zXw"}],"key":"Q1ZP7b6h0o"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"atl03 = ax.scatter(is2data.atl03.lat, is2data.atl03.h, s=1, color='black', label='ATL03', zorder=-1)\nax.legend(loc='upper left')\nfig.tight_layout()\ndisplay(fig)","visibility":"show","key":"KHZe68tATG"},{"type":"output","id":"CASxfu685eiaQT3Zs8iM_","data":[{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"\n            <style>\n                .geemap-dark {\n                    --jp-widgets-color: white;\n                    --jp-widgets-label-color: white;\n                    --jp-ui-font-color1: white;\n                    --jp-layout-color2: #454545;\n                    background-color: #383838;\n                }\n\n                .geemap-dark .jupyter-button {\n                    --jp-layout-color3: #383838;\n                }\n\n                .geemap-colab {\n                    background-color: var(--colab-primary-surface-color, white);\n                }\n\n                .geemap-colab .jupyter-button {\n                    --jp-layout-color3: var(--colab-primary-surface-color, white);\n                }\n            </style>\n            ","content_type":"text/html"},"text/plain":{"content":"<IPython.core.display.HTML object>","content_type":"text/plain"}}},{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"8700e6677044f8aca8e489b49b2cb269","path":"/icesat2-cookbook/_preview/24/build/8700e6677044f8aca8e489b49b2cb269.png"},"text/plain":{"content":"<Figure size 900x500 with 1 Axes>","content_type":"text/plain"}}}],"visibility":"show","key":"S1exd2niXj"}],"visibility":"show","key":"q2vfHiktk2"},{"type":"block","kind":"notebook-content","data":{"user_expressions":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Saving the plot to a file","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"QbmG390S7q"}],"identifier":"saving-the-plot-to-a-file","label":"Saving the plot to a file","html_id":"saving-the-plot-to-a-file","implicit":true,"key":"dwHkT8iylW"}],"key":"Y4BrXfHyMI"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"fig.savefig('my-plot.jpg', dpi=300)","visibility":"show","key":"dXz6SUIfm4"},{"type":"output","id":"xQpuq7Wv6BMl6JIZ4gng5","data":[{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"\n            <style>\n                .geemap-dark {\n                    --jp-widgets-color: white;\n                    --jp-widgets-label-color: white;\n                    --jp-ui-font-color1: white;\n                    --jp-layout-color2: #454545;\n                    background-color: #383838;\n                }\n\n                .geemap-dark .jupyter-button {\n                    --jp-layout-color3: #383838;\n                }\n\n                .geemap-colab {\n                    background-color: var(--colab-primary-surface-color, white);\n                }\n\n                .geemap-colab .jupyter-button {\n                    --jp-layout-color3: var(--colab-primary-surface-color, white);\n                }\n            </style>\n            ","content_type":"text/html"},"text/plain":{"content":"<IPython.core.display.HTML object>","content_type":"text/plain"}}}],"visibility":"show","key":"YEGmIjVERH"}],"visibility":"show","key":"NcpeunhBeZ"},{"type":"block","kind":"notebook-content","data":{"user_expressions":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"To make plots easier to produce, the ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ucbPbqA37N"},{"type":"inlineCode","value":"dataCollector","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"DlSYKptVBc"},{"type":"text","value":" class also has a method to plot the data that we downloaded.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"KVjw4yknri"}],"key":"UYmLUCwWyo"}],"key":"OosmOX2Jxj"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"fig = is2data.plotData();\nfig","visibility":"show","key":"PE8uHN5Zqg"},{"type":"output","id":"sWCmECALEquP3qvvfSF76","data":[{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"\n            <style>\n                .geemap-dark {\n                    --jp-widgets-color: white;\n                    --jp-widgets-label-color: white;\n                    --jp-ui-font-color1: white;\n                    --jp-layout-color2: #454545;\n                    background-color: #383838;\n                }\n\n                .geemap-dark .jupyter-button {\n                    --jp-layout-color3: #383838;\n                }\n\n                .geemap-colab {\n                    background-color: var(--colab-primary-surface-color, white);\n                }\n\n                .geemap-colab .jupyter-button {\n                    --jp-layout-color3: var(--colab-primary-surface-color, white);\n                }\n            </style>\n            ","content_type":"text/html"},"text/plain":{"content":"<IPython.core.display.HTML object>","content_type":"text/plain"}}},{"output_type":"execute_result","execution_count":12,"metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"d8c6460eb86119a278b828f384cfb98d","path":"/icesat2-cookbook/_preview/24/build/d8c6460eb86119a278b828f384cfb98d.png"},"text/plain":{"content":"<Figure size 800x500 with 1 Axes>","content_type":"text/plain"}}}],"visibility":"show","key":"VSqvvVhuTe"}],"visibility":"show","key":"Y7ovFp85eP"},{"type":"block","kind":"notebook-content","data":{"tags":[],"user_expressions":[]},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Ground Track Stats","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"rwApX2Q4h5"}],"identifier":"ground-track-stats","label":"Ground Track Stats","html_id":"ground-track-stats","implicit":true,"key":"TzdEfLps9t"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"So far we have only seen the data in elevation vs. latitude space. It’s probably good to know what the scale on the x-axis is here in units that we’re familiar with.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"Cp6RCzCjtE"}],"key":"fAsfoo75kr"}],"visibility":"show","key":"nzlJcdna1i"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"def dist_latlon2meters(lat1, lon1, lat2, lon2):\n    # returns the distance between two coordinate points - (lon1, lat1) and (lon2, lat2) along the earth's surface in meters.\n    R = 6371000\n    def deg2rad(deg):\n        return deg * (np.pi/180)\n    dlat = deg2rad(lat2-lat1)\n    dlon = deg2rad(lon2-lon1)\n    a = np.sin(dlat/2) * np.sin(dlat/2) + np.cos(deg2rad(lat1)) * np.cos(deg2rad(lat2)) * np.sin(dlon/2) * np.sin(dlon/2)\n    c = 2 * np.arctan2(np.sqrt(a), np.sqrt(1-a))\n    return R * c\n\nlat1, lat2 = is2data.atl08.lat[0], is2data.atl08.lat.iloc[-1]\nlon1, lon2 = is2data.atl08.lon[0], is2data.atl08.lon.iloc[-1]\n\nground_track_length = dist_latlon2meters(lat1, lon1, lat2, lon2)\nprint('The ground track is about %.1f kilometers long.' % (ground_track_length/1e3))","visibility":"show","key":"s1LdnLEgJG"},{"type":"output","id":"BL0rATXfEQWQR7QObUIeG","data":[{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"\n            <style>\n                .geemap-dark {\n                    --jp-widgets-color: white;\n                    --jp-widgets-label-color: white;\n                    --jp-ui-font-color1: white;\n                    --jp-layout-color2: #454545;\n                    background-color: #383838;\n                }\n\n                .geemap-dark .jupyter-button {\n                    --jp-layout-color3: #383838;\n                }\n\n                .geemap-colab {\n                    background-color: var(--colab-primary-surface-color, white);\n                }\n\n                .geemap-colab .jupyter-button {\n                    --jp-layout-color3: var(--colab-primary-surface-color, white);\n                }\n            </style>\n            ","content_type":"text/html"},"text/plain":{"content":"<IPython.core.display.HTML object>","content_type":"text/plain"}}},{"name":"stdout","output_type":"stream","text":"The ground track is about 4.4 kilometers long.\n"}],"visibility":"show","key":"sj3R9k7MJ2"}],"visibility":"show","key":"gmaBsX6HPV"},{"type":"block","kind":"notebook-content","data":{"user_expressions":[]},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Google Earth Engine","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"j7QUC7BR5A"}],"identifier":"google-earth-engine","label":"Google Earth Engine","html_id":"google-earth-engine","implicit":true,"key":"v7pMjQWVs5"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Google Earth Engine (GEE) has a large ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"yRm4DJjO1r"},{"type":"link","url":"https://developers.google.com/earth-engine/datasets","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"catalog","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"ZpcXOcwLe0"}],"urlSource":"https://developers.google.com/earth-engine/datasets","key":"LMUVK1wSBz"},{"type":"text","value":" of geospatial raster data, which is ready for analysis in the cloud. It also comes with an online JavaScript code editor.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"vbn28jg4b5"},{"type":"break","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"qXzPlOLtBg"},{"type":"image","url":"/icesat2-cookbook/_preview/24/build/697fd195613a884d70f9711b06c8e49f.png","alt":"gif showing how to get to the data in OpenAltimetry","width":"400px","key":"qawI8wvwV3","urlSource":"https://raw.githubusercontent.com/fliphilipp/images/main/gee_codeeditor.png"}],"key":"mycBRFt5tn"},{"type":"paragraph","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"But since we all seem to be using python, it would be nice to have these capabilities available in our Jupyter comfort zone...","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"TyAVli5SQ8"}],"key":"F9kHkFNQcq"},{"type":"paragraph","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Thankfully, there is a ","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"hD0cpzIYvZ"},{"type":"link","url":"https://developers.google.com/earth-engine/tutorials/community/intro-to-python-api","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"python API for GEE","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"vt1mhY1iJw"}],"urlSource":"https://developers.google.com/earth-engine/tutorials/community/intro-to-python-api","key":"R1frvoKrqp"},{"type":"text","value":", which we have imported using ","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"cABgO0DkwB"},{"type":"inlineCode","value":"import ee","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"TkSpwvrTqL"},{"type":"text","value":" earlier. It doesn’t come with an interactive map, but the python package ","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"JnyZW64rQQ"},{"type":"link","url":"https://geemap.org/","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"geemap","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"wwTFlc5fVy"}],"urlSource":"https://geemap.org/","key":"sI1B2HJbrW"},{"type":"text","value":" has us covered!","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"axUdcqJAfD"}],"key":"OPXyQmODZR"}],"key":"mnx3oRXkqG"},{"type":"block","kind":"notebook-content","data":{"user_expressions":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Show a ground track on a map","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"d79ceXLgiI"}],"identifier":"show-a-ground-track-on-a-map","label":"Show a ground track on a map","html_id":"show-a-ground-track-on-a-map","implicit":true,"key":"XClRZjYYIr"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"We can start working on our map by calling ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"XNNOBn87I7"},{"type":"inlineCode","value":"geemap.Map()","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"iMEQ17OvU0"},{"type":"text","value":". This just gives us a world map with a standard basemap.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"sTWivc3nWd"}],"key":"MBxaFMCQFJ"}],"key":"cM6JMu0Fsn"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"from ipywidgets import Layout\nMap = geemap.Map(layout=Layout(width='70%', max_height='450px'))\nMap","visibility":"show","key":"sam4LoHh6w"},{"type":"output","id":"1jL2Knjx8rXM_vupXTDi4","data":[{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"\n            <style>\n                .geemap-dark {\n                    --jp-widgets-color: white;\n                    --jp-widgets-label-color: white;\n                    --jp-ui-font-color1: white;\n                    --jp-layout-color2: #454545;\n                    background-color: #383838;\n                }\n\n                .geemap-dark .jupyter-button {\n                    --jp-layout-color3: #383838;\n                }\n\n                .geemap-colab {\n                    background-color: var(--colab-primary-surface-color, white);\n                }\n\n                .geemap-colab .jupyter-button {\n                    --jp-layout-color3: var(--colab-primary-surface-color, white);\n                }\n            </style>\n            ","content_type":"text/html"},"text/plain":{"content":"<IPython.core.display.HTML object>","content_type":"text/plain"}}},{"output_type":"execute_result","execution_count":14,"metadata":{},"data":{"application/vnd.jupyter.widget-view+json":{"content":"{\"model_id\":\"ba29045c43924ebf87a5cccd6e452a0b\",\"version_major\":2,\"version_minor\":0}","content_type":"application/vnd.jupyter.widget-view+json"},"text/plain":{"content":"Map(center=[0, 0], controls=(WidgetControl(options=['position', 'transparent_bg'], widget=SearchDataGUI(childr…","content_type":"text/plain"}}}],"visibility":"show","key":"rMUfz4t7oJ"}],"visibility":"show","key":"Mbah2x8vNY"},{"type":"block","kind":"notebook-content","data":{"user_expressions":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Now we need to add our ICESat-2 gound track to that map. Let’s use the lon/lat coordinates of the ATL08 data product for this.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"bMIQrrSIXA"},{"type":"break","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"uwMBG2GWYy"},{"type":"text","value":"We also need to specify which ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"NCWiLaSsoA"},{"type":"strong","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Coordinate Reference System (CRS)","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"fSLwxAsOB2"}],"key":"iRFNM2ji9i"},{"type":"text","value":" our data is in. The longitude/latitude system that we are all quite familiar with is referenced by ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"w22JHUDegv"},{"type":"link","url":"https://epsg.io/4326","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"inlineCode","value":"EPSG:4326","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"sMlNkS7BqO"}],"urlSource":"https://epsg.io/4326","key":"i8yGOqvzOl"},{"type":"text","value":". To add the ground track to the map we need to turn it into an ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"lc6jfR5Do6"},{"type":"link","url":"https://developers.google.com/earth-engine/guides/feature_collections","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Earth Engine “Feature Collection”","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Wa4VjbbQsv"}],"urlSource":"https://developers.google.com/earth-engine/guides/feature_collections","key":"BKdofTa5MJ"},{"type":"text","value":".","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"yI5gm8LJbd"}],"key":"LHZ0LTDAD7"}],"key":"I5MZDHG0EL"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"ground_track_coordinates = list(zip(is2data.atl08.lon, is2data.atl08.lat))\nground_track_projection = 'EPSG:4326' # <-- this specifies that our data longitude/latitude in degrees [https://epsg.io/4326]\ngtx_feature = ee.FeatureCollection(ee.Geometry.LineString(coords=ground_track_coordinates, \n                                      proj=ground_track_projection, \n                                      geodesic=True))\ngtx_feature","visibility":"show","key":"UhxYXFL7FE"},{"type":"output","id":"dx6Lp-ib05KLlWoqkQd7t","data":[{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"\n            <style>\n                .geemap-dark {\n                    --jp-widgets-color: white;\n                    --jp-widgets-label-color: white;\n                    --jp-ui-font-color1: white;\n                    --jp-layout-color2: #454545;\n                    background-color: #383838;\n                }\n\n                .geemap-dark .jupyter-button {\n                    --jp-layout-color3: #383838;\n                }\n\n                .geemap-colab {\n                    background-color: var(--colab-primary-surface-color, white);\n                }\n\n                .geemap-colab .jupyter-button {\n                    --jp-layout-color3: var(--colab-primary-surface-color, white);\n                }\n            </style>\n            ","content_type":"text/html"},"text/plain":{"content":"<IPython.core.display.HTML object>","content_type":"text/plain"}}},{"output_type":"execute_result","execution_count":15,"metadata":{},"data":{"text/html":{"content":"<div><style>:root {\n  --font-color-primary: var(--jp-content-font-color0, rgba(0, 0, 0, 1));\n  --font-color-secondary: var(--jp-content-font-color2, rgba(0, 0, 0, 0.7));\n  --font-color-accent: rgba(123, 31, 162, 1);\n  --border-color: var(--jp-border-color2, #e0e0e0);\n  --background-color: var(--jp-layout-color0, white);\n  --background-color-row-even: var(--jp-layout-color1, white);\n  --background-color-row-odd: var(--jp-layout-color2, #eeeeee);\n}\n\nhtml[theme=\"dark\"],\nbody[data-theme=\"dark\"],\nbody.vscode-dark {\n  --font-color-primary: rgba(255, 255, 255, 1);\n  --font-color-secondary: rgba(255, 255, 255, 0.7);\n  --font-color-accent: rgb(173, 132, 190);\n  --border-color: #2e2e2e;\n  --background-color: #111111;\n  --background-color-row-even: #111111;\n  --background-color-row-odd: #313131;\n}\n\n.eerepr {\n  padding: 1em;\n  line-height: 1.5em;\n  min-width: 300px;\n  max-width: 1200px;\n  overflow-y: scroll;\n  max-height: 600px;\n  border: 1px solid var(--border-color);\n  font-family: monospace;\n  font-size: 14px;\n}\n\n.eerepr li {\n  list-style-type: none;\n  margin: 0;\n}\n\n.eerepr ul {\n  padding-left: 1.5em !important;\n  margin: 0;\n}\n\n.eerepr > ul {\n  padding-left: 0 !important;\n}\n\n.eerepr summary {\n  color: var(--font-color-secondary);\n  cursor: pointer;\n  margin: 0;\n}\n\n.eerepr summary:hover {\n  color: var(--font-color-primary);\n  background-color: var(--background-color-row-odd)\n}\n\n.ee-k {\n  color: var(--font-color-accent);\n  margin-right: 6px;\n}\n\n.ee-v {\n  color: var(--font-color-primary);\n}\n\n.eerepr details > summary::before {\n  content: '▼';\n  display: inline-block;\n  margin-right: 6px;\n  transition: transform 0.2s;\n  transform: rotate(-90deg);\n}\n\n.eerepr details[open] > summary::before {\n  transform: rotate(0deg);\n}\n\n.eerepr details summary::-webkit-details-marker {\n  display:none;\n}\n\n.eerepr details summary {\n  list-style-type: none;\n}\n</style><div class='eerepr'><ul><li><details><summary>FeatureCollection (1 element, 1 column)</summary><ul><li><span class='ee-k'>type:</span><span class='ee-v'>FeatureCollection</span></li><li><details><summary>columns: Object (1 property)</summary><ul><li><span class='ee-k'>system:index:</span><span class='ee-v'>String</span></li></ul></details></li><li><details><summary>features: List (1 element)</summary><ul><li><details><summary>0: Feature (LineString, 0 properties)</summary><ul><li><span class='ee-k'>type:</span><span class='ee-v'>Feature</span></li><li><span class='ee-k'>id:</span><span class='ee-v'>0</span></li><li><details><summary>geometry: LineString (26 vertices)</summary><ul><li><span class='ee-k'>type:</span><span class='ee-v'>LineString</span></li><li><details><summary>coordinates: List (26 elements)</summary><ul><li><details><summary>0: [-23.95424461364746, 77.57183837890625]</summary><ul><li><span class='ee-k'>0:</span><span class='ee-v'>-23.95424461364746</span></li><li><span class='ee-k'>1:</span><span class='ee-v'>77.57183837890625</span></li></ul></details></li><li><details><summary>1: [-23.954978942871094, 77.57096099853516]</summary><ul><li><span class='ee-k'>0:</span><span class='ee-v'>-23.954978942871094</span></li><li><span class='ee-k'>1:</span><span class='ee-v'>77.57096099853516</span></li></ul></details></li><li><details><summary>2: [-23.955711364746094, 77.57007598876953]</summary><ul><li><span class='ee-k'>0:</span><span class='ee-v'>-23.955711364746094</span></li><li><span class='ee-k'>1:</span><span class='ee-v'>77.57007598876953</span></li></ul></details></li><li><details><summary>3: [-23.956451416015625, 77.5691909790039]</summary><ul><li><span class='ee-k'>0:</span><span class='ee-v'>-23.956451416015625</span></li><li><span class='ee-k'>1:</span><span class='ee-v'>77.5691909790039</span></li></ul></details></li><li><details><summary>4: [-23.957197189331055, 77.56831359863281]</summary><ul><li><span class='ee-k'>0:</span><span class='ee-v'>-23.957197189331055</span></li><li><span class='ee-k'>1:</span><span class='ee-v'>77.56831359863281</span></li></ul></details></li><li><details><summary>5: [-23.957931518554688, 77.56742858886719]</summary><ul><li><span class='ee-k'>0:</span><span class='ee-v'>-23.957931518554688</span></li><li><span class='ee-k'>1:</span><span class='ee-v'>77.56742858886719</span></li></ul></details></li><li><details><summary>6: [-23.95865821838379, 77.5665512084961]</summary><ul><li><span class='ee-k'>0:</span><span class='ee-v'>-23.95865821838379</span></li><li><span class='ee-k'>1:</span><span class='ee-v'>77.5665512084961</span></li></ul></details></li><li><details><summary>7: [-23.959396362304688, 77.56566619873047]</summary><ul><li><span class='ee-k'>0:</span><span class='ee-v'>-23.959396362304688</span></li><li><span class='ee-k'>1:</span><span class='ee-v'>77.56566619873047</span></li></ul></details></li><li><details><summary>8: [-23.960142135620117, 77.56478118896484]</summary><ul><li><span class='ee-k'>0:</span><span class='ee-v'>-23.960142135620117</span></li><li><span class='ee-k'>1:</span><span class='ee-v'>77.56478118896484</span></li></ul></details></li><li><details><summary>9: [-23.96086883544922, 77.56390380859375]</summary><ul><li><span class='ee-k'>0:</span><span class='ee-v'>-23.96086883544922</span></li><li><span class='ee-k'>1:</span><span class='ee-v'>77.56390380859375</span></li></ul></details></li><li><details><summary>10: [-23.96160888671875, 77.56301879882812]</summary><ul><li><span class='ee-k'>0:</span><span class='ee-v'>-23.96160888671875</span></li><li><span class='ee-k'>1:</span><span class='ee-v'>77.56301879882812</span></li></ul></details></li><li><details><summary>11: [-23.962358474731445, 77.56214141845703]</summary><ul><li><span class='ee-k'>0:</span><span class='ee-v'>-23.962358474731445</span></li><li><span class='ee-k'>1:</span><span class='ee-v'>77.56214141845703</span></li></ul></details></li><li><details><summary>12: [-23.977083206176758, 77.54450225830078]</summary><ul><li><span class='ee-k'>0:</span><span class='ee-v'>-23.977083206176758</span></li><li><span class='ee-k'>1:</span><span class='ee-v'>77.54450225830078</span></li></ul></details></li><li><details><summary>13: [-23.977800369262695, 77.54361724853516]</summary><ul><li><span class='ee-k'>0:</span><span class='ee-v'>-23.977800369262695</span></li><li><span class='ee-k'>1:</span><span class='ee-v'>77.54361724853516</span></li></ul></details></li><li><details><summary>14: [-23.978540420532227, 77.54273223876953]</summary><ul><li><span class='ee-k'>0:</span><span class='ee-v'>-23.978540420532227</span></li><li><span class='ee-k'>1:</span><span class='ee-v'>77.54273223876953</span></li></ul></details></li><li><details><summary>15: [-23.97928237915039, 77.54185485839844]</summary><ul><li><span class='ee-k'>0:</span><span class='ee-v'>-23.97928237915039</span></li><li><span class='ee-k'>1:</span><span class='ee-v'>77.54185485839844</span></li></ul></details></li><li><details><summary>16: [-23.980009078979492, 77.54096984863281]</summary><ul><li><span class='ee-k'>0:</span><span class='ee-v'>-23.980009078979492</span></li><li><span class='ee-k'>1:</span><span class='ee-v'>77.54096984863281</span></li></ul></details></li><li><details><summary>17: [-23.98074722290039, 77.54008483886719]</summary><ul><li><span class='ee-k'>0:</span><span class='ee-v'>-23.98074722290039</span></li><li><span class='ee-k'>1:</span><span class='ee-v'>77.54008483886719</span></li></ul></details></li><li><details><summary>18: [-23.981489181518555, 77.5392074584961]</summary><ul><li><span class='ee-k'>0:</span><span class='ee-v'>-23.981489181518555</span></li><li><span class='ee-k'>1:</span><span class='ee-v'>77.5392074584961</span></li></ul></details></li><li><details><summary>19: [-23.982227325439453, 77.53832244873047]</summary><ul><li><span class='ee-k'>0:</span><span class='ee-v'>-23.982227325439453</span></li><li><span class='ee-k'>1:</span><span class='ee-v'>77.53832244873047</span></li></ul></details></li><li><details><summary>20: [-23.982954025268555, 77.53744506835938]</summary><ul><li><span class='ee-k'>0:</span><span class='ee-v'>-23.982954025268555</span></li><li><span class='ee-k'>1:</span><span class='ee-v'>77.53744506835938</span></li></ul></details></li><li><details><summary>21: [-23.983694076538086, 77.53656005859375]</summary><ul><li><span class='ee-k'>0:</span><span class='ee-v'>-23.983694076538086</span></li><li><span class='ee-k'>1:</span><span class='ee-v'>77.53656005859375</span></li></ul></details></li><li><details><summary>22: [-23.984424591064453, 77.53567504882812]</summary><ul><li><span class='ee-k'>0:</span><span class='ee-v'>-23.984424591064453</span></li><li><span class='ee-k'>1:</span><span class='ee-v'>77.53567504882812</span></li></ul></details></li><li><details><summary>23: [-23.98514175415039, 77.53479766845703]</summary><ul><li><span class='ee-k'>0:</span><span class='ee-v'>-23.98514175415039</span></li><li><span class='ee-k'>1:</span><span class='ee-v'>77.53479766845703</span></li></ul></details></li><li><details><summary>24: [-23.985881805419922, 77.5339126586914]</summary><ul><li><span class='ee-k'>0:</span><span class='ee-v'>-23.985881805419922</span></li><li><span class='ee-k'>1:</span><span class='ee-v'>77.5339126586914</span></li></ul></details></li><li><details><summary>25: [-23.98662757873535, 77.53303527832031]</summary><ul><li><span class='ee-k'>0:</span><span class='ee-v'>-23.98662757873535</span></li><li><span class='ee-k'>1:</span><span class='ee-v'>77.53303527832031</span></li></ul></details></li></ul></details></li></ul></details></li><li><details><summary>properties: Object (0 properties)</summary><ul></ul></details></li></ul></details></li></ul></details></li></ul></details></li></ul></div></div>","content_type":"text/html"},"text/plain":{"content":"<ee.featurecollection.FeatureCollection at 0x16695da90>","content_type":"text/plain"}}}],"visibility":"show","key":"EvwI0OO6bt"}],"visibility":"show","key":"vlGlYjxpET"},{"type":"block","kind":"notebook-content","data":{"user_expressions":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Now that we have it in the right format, we can add it as a ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"tNaCeXXl0Y"},{"type":"strong","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"layer","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"jo2LCiHxzz"}],"key":"Sl2ta3OKq5"},{"type":"text","value":" to the map.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"hF4DFaooGM"}],"key":"YpIDNFV38r"}],"key":"PWCVOGnCFG"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"Map.addLayer(gtx_feature, {'color': 'red'}, 'ground track')","visibility":"show","key":"TcWqerH664"},{"type":"output","id":"kpg5tTUo6ibLLQoW3Yj-o","data":[{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"\n            <style>\n                .geemap-dark {\n                    --jp-widgets-color: white;\n                    --jp-widgets-label-color: white;\n                    --jp-ui-font-color1: white;\n                    --jp-layout-color2: #454545;\n                    background-color: #383838;\n                }\n\n                .geemap-dark .jupyter-button {\n                    --jp-layout-color3: #383838;\n                }\n\n                .geemap-colab {\n                    background-color: var(--colab-primary-surface-color, white);\n                }\n\n                .geemap-colab .jupyter-button {\n                    --jp-layout-color3: var(--colab-primary-surface-color, white);\n                }\n            </style>\n            ","content_type":"text/html"},"text/plain":{"content":"<IPython.core.display.HTML object>","content_type":"text/plain"}}}],"visibility":"show","key":"pqUU4zDTfD"}],"visibility":"show","key":"uHFoiO0DlE"},{"type":"block","kind":"notebook-content","data":{"user_expressions":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"According to the cell above this should be a red line. But we still can’t see it, because we first need to tell the map where to look for it.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"f186Kt5jBt"},{"type":"break","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"qjR5qZksB6"},{"type":"text","value":"Let’s calculate the center longitude and latitude, and center the map on it.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"AGAXUzvT8L"}],"key":"agsKfgxKh9"}],"key":"IzhGzWb6Ha"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"center_lon = (lon1 + lon2) / 2\ncenter_lat = (lat1 + lat2) / 2\nMap.setCenter(center_lon, center_lat, zoom=7);","visibility":"show","key":"NqHyL4BXYy"},{"type":"output","id":"bYvi7jM154aQ0HThCEX-X","data":[{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"\n            <style>\n                .geemap-dark {\n                    --jp-widgets-color: white;\n                    --jp-widgets-label-color: white;\n                    --jp-ui-font-color1: white;\n                    --jp-layout-color2: #454545;\n                    background-color: #383838;\n                }\n\n                .geemap-dark .jupyter-button {\n                    --jp-layout-color3: #383838;\n                }\n\n                .geemap-colab {\n                    background-color: var(--colab-primary-surface-color, white);\n                }\n\n                .geemap-colab .jupyter-button {\n                    --jp-layout-color3: var(--colab-primary-surface-color, white);\n                }\n            </style>\n            ","content_type":"text/html"},"text/plain":{"content":"<IPython.core.display.HTML object>","content_type":"text/plain"}}}],"visibility":"show","key":"iB69zRL3Rz"}],"visibility":"show","key":"efiNysThDm"},{"type":"block","kind":"notebook-content","data":{"user_expressions":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"So we actually couldn’t see it because it was in Greenland.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"rF0grDeKG9"},{"type":"break","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"MMbgBZwHO4"},{"type":"text","value":"Unfortunately the basemap here doesn’t give us much more information. Let’s add a satellite imagery basemap.\nThis is a good time to look at the layer control on the top right.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"aZSZmQ3MoW"}],"key":"NTl78nREgQ"}],"key":"GP6URnpwQq"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"Map.add_basemap('SATELLITE') # <-- this adds a layer called 'Google Satellite'\nMap.setCenter(center_lon, center_lat, zoom=7);\nMap.addLayer(gtx_feature,{'color': 'red'},'ground track')","visibility":"show","key":"G9NvZ28nJZ"},{"type":"output","id":"Zt8J2seUBnSNrE2mNo7Fq","data":[{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"\n            <style>\n                .geemap-dark {\n                    --jp-widgets-color: white;\n                    --jp-widgets-label-color: white;\n                    --jp-ui-font-color1: white;\n                    --jp-layout-color2: #454545;\n                    background-color: #383838;\n                }\n\n                .geemap-dark .jupyter-button {\n                    --jp-layout-color3: #383838;\n                }\n\n                .geemap-colab {\n                    background-color: var(--colab-primary-surface-color, white);\n                }\n\n                .geemap-colab .jupyter-button {\n                    --jp-layout-color3: var(--colab-primary-surface-color, white);\n                }\n            </style>\n            ","content_type":"text/html"},"text/plain":{"content":"<IPython.core.display.HTML object>","content_type":"text/plain"}}}],"visibility":"show","key":"E9D0B6LMBy"}],"visibility":"show","key":"w7KKW116iZ"},{"type":"block","kind":"notebook-content","data":{"user_expressions":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"...looks like this basemap still doesn’t give us any more clues about the nature of this weird ICESat-2 data. Let’s dig deeper.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"DhjIeM53vw"}],"key":"sbkICHFDNx"}],"key":"v3nuQ8D7hL"},{"type":"block","kind":"notebook-content","data":{"user_expressions":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Query for Sentinel-2 images","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"uiybX6sW1F"}],"identifier":"query-for-sentinel-2-images","label":"Query for Sentinel-2 images","html_id":"query-for-sentinel-2-images","implicit":true,"key":"hJsIjs7blz"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Both of these Sentinel-2 satellites take images of most places on our planet at least every week or so. Maybe these images can tell us what was happening here around the same time that ICESat-2 acquired our data?","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"sOCBwmZCk9"}],"key":"RyjcPuToTa"},{"type":"paragraph","position":{"start":{"line":4,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"The imagery scenes live in image collections on Google Earth Engine.","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"JUs8U0bDnL"},{"type":"break","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"exNciv8pih"},{"type":"text","value":"You can find all collections here: ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"RpnWFqsy9y"},{"type":"link","url":"https://developers.google.com/earth-engine/datasets/catalog/","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"https://​developers​.google​.com​/earth​-engine​/datasets​/catalog/","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"sKSVWgzlcA"}],"urlSource":"https://developers.google.com/earth-engine/datasets/catalog/","key":"DK1HjUWG6W"}],"key":"OspSqJ1LdX"}],"key":"Dkgh8qDNxf"},{"type":"block","kind":"notebook-content","data":{"user_expressions":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"The above link tells us we can find some images under ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"zbe60Edh57"},{"type":"inlineCode","value":"'COPERNICUS/S2_SR_HARMONIZED'","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ops0DaFdNR"},{"type":"text","value":".","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"DfTj4iQQgP"}],"key":"Yu6UGMuC5z"}],"key":"WCRPsV7CVf"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"collection_name1 = 'COPERNICUS/S2_SR_HARMONIZED'  # Landsat 8 earth engine collection \n# https://developers.google.com/earth-engine/datasets/catalog/LANDSAT_LC08_C01_T2","visibility":"show","key":"XSkPrKfbHM"},{"type":"output","id":"MFPqy9eqrF3XcxOpHL934","data":[{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"\n            <style>\n                .geemap-dark {\n                    --jp-widgets-color: white;\n                    --jp-widgets-label-color: white;\n                    --jp-ui-font-color1: white;\n                    --jp-layout-color2: #454545;\n                    background-color: #383838;\n                }\n\n                .geemap-dark .jupyter-button {\n                    --jp-layout-color3: #383838;\n                }\n\n                .geemap-colab {\n                    background-color: var(--colab-primary-surface-color, white);\n                }\n\n                .geemap-colab .jupyter-button {\n                    --jp-layout-color3: var(--colab-primary-surface-color, white);\n                }\n            </style>\n            ","content_type":"text/html"},"text/plain":{"content":"<IPython.core.display.HTML object>","content_type":"text/plain"}}}],"visibility":"show","key":"SggmrNN0Hd"}],"visibility":"show","key":"RWdtPWiZty"},{"type":"block","kind":"notebook-content","data":{"user_expressions":[]},"children":[{"type":"heading","depth":4,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Access an image collection","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"tiY8Gg4BzM"}],"identifier":"access-an-image-collection","label":"Access an image collection","html_id":"access-an-image-collection","implicit":true,"key":"kz53XtxxV2"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"To access the collection, we call ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"BCXPVMesHF"},{"type":"inlineCode","value":"ee.ImageCollection","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"oUCfaE3Yz3"},{"type":"text","value":":","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"NOF6MJZxyV"}],"key":"P962rPaSer"}],"key":"rz78Abp4Rw"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"collection = ee.ImageCollection(collection_name1)\ncollection","visibility":"show","key":"KfOQ1R7rPF"},{"type":"output","id":"-8mJsL8ezPFqihmHu423I","data":[{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"\n            <style>\n                .geemap-dark {\n                    --jp-widgets-color: white;\n                    --jp-widgets-label-color: white;\n                    --jp-ui-font-color1: white;\n                    --jp-layout-color2: #454545;\n                    background-color: #383838;\n                }\n\n                .geemap-dark .jupyter-button {\n                    --jp-layout-color3: #383838;\n                }\n\n                .geemap-colab {\n                    background-color: var(--colab-primary-surface-color, white);\n                }\n\n                .geemap-colab .jupyter-button {\n                    --jp-layout-color3: var(--colab-primary-surface-color, white);\n                }\n            </style>\n            ","content_type":"text/html"},"text/plain":{"content":"<IPython.core.display.HTML object>","content_type":"text/plain"}}},{"output_type":"execute_result","execution_count":20,"metadata":{},"data":{"text/html":{"content":"<pre>&lt;ee.imagecollection.ImageCollection object at 0x16695e120&gt;</pre>","content_type":"text/html"},"text/plain":{"content":"<ee.imagecollection.ImageCollection at 0x16695e120>","content_type":"text/plain"}}}],"visibility":"show","key":"IeHhQsyP1T"}],"visibility":"show","key":"eETvAUKfCn"},{"type":"block","kind":"notebook-content","data":{"user_expressions":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Can we find out how many images there are in total?","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"T4ljLXlrlo"}],"key":"p1yHAqlIYL"}],"key":"VpQM3wFiJJ"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"number_of_scenes = collection.size()\nprint(number_of_scenes)","visibility":"show","key":"grcvxMJTxU"},{"type":"output","id":"XN6k_Zu5KJIXrJV9_68Ha","data":[{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"\n            <style>\n                .geemap-dark {\n                    --jp-widgets-color: white;\n                    --jp-widgets-label-color: white;\n                    --jp-ui-font-color1: white;\n                    --jp-layout-color2: #454545;\n                    background-color: #383838;\n                }\n\n                .geemap-dark .jupyter-button {\n                    --jp-layout-color3: #383838;\n                }\n\n                .geemap-colab {\n                    background-color: var(--colab-primary-surface-color, white);\n                }\n\n                .geemap-colab .jupyter-button {\n                    --jp-layout-color3: var(--colab-primary-surface-color, white);\n                }\n            </style>\n            ","content_type":"text/html"},"text/plain":{"content":"<IPython.core.display.HTML object>","content_type":"text/plain"}}},{"name":"stdout","output_type":"stream","text":"ee.Number({\n  \"functionInvocationValue\": {\n    \"functionName\": \"Collection.size\",\n    \"arguments\": {\n      \"collection\": {\n        \"functionInvocationValue\": {\n          \"functionName\": \"ImageCollection.load\",\n          \"arguments\": {\n            \"id\": {\n              \"constantValue\": \"COPERNICUS/S2_SR_HARMONIZED\"\n            }\n          }\n        }\n      }\n    }\n  }\n})\n"}],"visibility":"show","key":"ucNEuaegEw"}],"visibility":"show","key":"lBrhzxqzSb"},{"type":"block","kind":"notebook-content","data":{"user_expressions":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"strong","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Actually, asking for the size of the collection does not do anything!","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"vSnI31kDHD"}],"key":"HaREDeLPeL"},{"type":"text","value":" 🤔","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"lQLvCIF6FS"}],"key":"obsEuFkayh"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"It just tells Earth Engine on the server-side that this variable refers to the size of the collection, which we may need later to do some analysis on the server. As long as this number is not needed, Earth Engine will not go through the trouble actually computing it.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"ebObkMO9BM"}],"key":"DhUqBiwb6y"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"To force Earth Engine to compute and get any information on the client side (our local machine / Cryocloud), we need to call ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"EBpQ1gxzj8"},{"type":"inlineCode","value":".getInfo()","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"hhK4Fgs9Lb"},{"type":"text","value":". In this case that would be ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"xQc6siwRwI"},{"type":"inlineCode","value":"number_of_scenes = collection.size().getInfo()","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"oKkF9zMxqV"},{"type":"text","value":".","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"rNMKUqdBXz"}],"key":"Oo1uuYellD"},{"type":"admonition","kind":"note","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Note","key":"JWSwuyTKC2"}],"key":"IsSyhpjadj"},{"type":"paragraph","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Because this command would ask Earth Engine to count every single Sentinel-2 file that exists, this command would take a really long time to execute. I will avoid this here and just give you the answer from when I wrote this tutorial.","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"ULndpmOkDQ"}],"key":"olrsWuho8J"}],"key":"NeXCLXwia9"}],"key":"a2Uv2VeRmb"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"# number_of_scenes = collection.size().getInfo()\nnumber_of_scenes = 19323842\nprint('There are %i number of scenes in the image collection' % number_of_scenes)","visibility":"show","key":"vadsVDqg3L"},{"type":"output","id":"WH5a-9_zTpFgC4aL1X6KA","data":[{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"\n            <style>\n                .geemap-dark {\n                    --jp-widgets-color: white;\n                    --jp-widgets-label-color: white;\n                    --jp-ui-font-color1: white;\n                    --jp-layout-color2: #454545;\n                    background-color: #383838;\n                }\n\n                .geemap-dark .jupyter-button {\n                    --jp-layout-color3: #383838;\n                }\n\n                .geemap-colab {\n                    background-color: var(--colab-primary-surface-color, white);\n                }\n\n                .geemap-colab .jupyter-button {\n                    --jp-layout-color3: var(--colab-primary-surface-color, white);\n                }\n            </style>\n            ","content_type":"text/html"},"text/plain":{"content":"<IPython.core.display.HTML object>","content_type":"text/plain"}}},{"name":"stdout","output_type":"stream","text":"There are 19323842 number of scenes in the image collection\n"}],"visibility":"show","key":"rsDTZP8EYW"}],"visibility":"show","key":"zcz27cAApM"},{"type":"block","kind":"notebook-content","data":{"user_expressions":[]},"children":[{"type":"heading","depth":4,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Filter an image collection by location and time","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"N5Gx5W4wYY"}],"identifier":"filter-an-image-collection-by-location-and-time","label":"Filter an image collection by location and time","html_id":"filter-an-image-collection-by-location-and-time","implicit":true,"key":"FrFFsIMtbx"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Who wants to look at almost 20 million pictures? I don’t. So let’s try to narrow it down.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"wkMvLS6uwc"},{"type":"break","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"UqUt6McHqB"},{"type":"text","value":"Let’s start with only images that overlap with the center of our ground track.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"Qc7aEOEHqi"}],"key":"vkOYU6ibrj"}],"key":"n1HZKk7oWv"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"# the point of interest (center of the track) as an Earth Engine Geometry\npoint_of_interest = ee.Geometry.Point(center_lon, center_lat)","visibility":"show","key":"CpW2taWozJ"},{"type":"output","id":"GTDY_QNfmYzmosAdMnMFS","data":[{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"\n            <style>\n                .geemap-dark {\n                    --jp-widgets-color: white;\n                    --jp-widgets-label-color: white;\n                    --jp-ui-font-color1: white;\n                    --jp-layout-color2: #454545;\n                    background-color: #383838;\n                }\n\n                .geemap-dark .jupyter-button {\n                    --jp-layout-color3: #383838;\n                }\n\n                .geemap-colab {\n                    background-color: var(--colab-primary-surface-color, white);\n                }\n\n                .geemap-colab .jupyter-button {\n                    --jp-layout-color3: var(--colab-primary-surface-color, white);\n                }\n            </style>\n            ","content_type":"text/html"},"text/plain":{"content":"<IPython.core.display.HTML object>","content_type":"text/plain"}}}],"visibility":"show","key":"dqsrhbgryz"}],"visibility":"show","key":"DCPyZvxG8X"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"collection = collection.filterBounds(point_of_interest)","visibility":"show","key":"p1jI9gflir"},{"type":"output","id":"VkqQcdowjb-_Gv1Oi1PfI","data":[{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"\n            <style>\n                .geemap-dark {\n                    --jp-widgets-color: white;\n                    --jp-widgets-label-color: white;\n                    --jp-ui-font-color1: white;\n                    --jp-layout-color2: #454545;\n                    background-color: #383838;\n                }\n\n                .geemap-dark .jupyter-button {\n                    --jp-layout-color3: #383838;\n                }\n\n                .geemap-colab {\n                    background-color: var(--colab-primary-surface-color, white);\n                }\n\n                .geemap-colab .jupyter-button {\n                    --jp-layout-color3: var(--colab-primary-surface-color, white);\n                }\n            </style>\n            ","content_type":"text/html"},"text/plain":{"content":"<IPython.core.display.HTML object>","content_type":"text/plain"}}}],"visibility":"show","key":"qPO9ERSNnU"}],"visibility":"show","key":"UWRRaSZxkf"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"print('There are {number:d} images in the spatially filtered collection.'.format(number=collection.size().getInfo()))","visibility":"show","key":"SChDPA7AM5"},{"type":"output","id":"XFqTPyk5NX8BkSoY35VJY","data":[{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"\n            <style>\n                .geemap-dark {\n                    --jp-widgets-color: white;\n                    --jp-widgets-label-color: white;\n                    --jp-ui-font-color1: white;\n                    --jp-layout-color2: #454545;\n                    background-color: #383838;\n                }\n\n                .geemap-dark .jupyter-button {\n                    --jp-layout-color3: #383838;\n                }\n\n                .geemap-colab {\n                    background-color: var(--colab-primary-surface-color, white);\n                }\n\n                .geemap-colab .jupyter-button {\n                    --jp-layout-color3: var(--colab-primary-surface-color, white);\n                }\n            </style>\n            ","content_type":"text/html"},"text/plain":{"content":"<IPython.core.display.HTML object>","content_type":"text/plain"}}},{"name":"stdout","output_type":"stream","text":"There are 4076 images in the spatially filtered collection.\n"}],"visibility":"show","key":"Jfl7kmEaZe"}],"visibility":"show","key":"nweKsLHaJw"},{"type":"block","kind":"notebook-content","data":{"user_expressions":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Much better! Now let’s only look at images that were taken soon before or after ICESat-2 passed over this spot.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"xHZ9oIwAX4"}],"key":"oQN29VOsXt"}],"key":"BczD1HLWaE"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"days_buffer_imagery = 6","visibility":"show","key":"DAjnGrw0tI"},{"type":"output","id":"HW9qAUbCPc8u7OxfuT6TX","data":[{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"\n            <style>\n                .geemap-dark {\n                    --jp-widgets-color: white;\n                    --jp-widgets-label-color: white;\n                    --jp-ui-font-color1: white;\n                    --jp-layout-color2: #454545;\n                    background-color: #383838;\n                }\n\n                .geemap-dark .jupyter-button {\n                    --jp-layout-color3: #383838;\n                }\n\n                .geemap-colab {\n                    background-color: var(--colab-primary-surface-color, white);\n                }\n\n                .geemap-colab .jupyter-button {\n                    --jp-layout-color3: var(--colab-primary-surface-color, white);\n                }\n            </style>\n            ","content_type":"text/html"},"text/plain":{"content":"<IPython.core.display.HTML object>","content_type":"text/plain"}}}],"visibility":"show","key":"ak3hKxVrPn"}],"visibility":"show","key":"Vl7LeG3Ltk"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"dateformat = '%Y-%m-%d'\ndatetime_requested = datetime.strptime(is2data.date, dateformat)\nsearch_start = (datetime_requested - timedelta(days=days_buffer_imagery)).strftime(dateformat)\nsearch_end = (datetime_requested + timedelta(days=days_buffer_imagery)).strftime(dateformat)\nprint('Search for imagery from {start:s} to {end:s}.'.format(start=search_start, end=search_end))","visibility":"show","key":"CnDFH3yGfN"},{"type":"output","id":"OP-iypTE1Jn2KKvAC_ZOh","data":[{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"\n            <style>\n                .geemap-dark {\n                    --jp-widgets-color: white;\n                    --jp-widgets-label-color: white;\n                    --jp-ui-font-color1: white;\n                    --jp-layout-color2: #454545;\n                    background-color: #383838;\n                }\n\n                .geemap-dark .jupyter-button {\n                    --jp-layout-color3: #383838;\n                }\n\n                .geemap-colab {\n                    background-color: var(--colab-primary-surface-color, white);\n                }\n\n                .geemap-colab .jupyter-button {\n                    --jp-layout-color3: var(--colab-primary-surface-color, white);\n                }\n            </style>\n            ","content_type":"text/html"},"text/plain":{"content":"<IPython.core.display.HTML object>","content_type":"text/plain"}}},{"name":"stdout","output_type":"stream","text":"Search for imagery from 2021-08-16 to 2021-08-28.\n"}],"visibility":"show","key":"uGtA185UBx"}],"visibility":"show","key":"SNfuj3VRPG"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"collection = collection.filterDate(search_start, search_end)\nprint('There are {number:d} images in the spatially filtered collection.'.format(number=collection.size().getInfo()))","visibility":"show","key":"ZHJ2UmQ2tI"},{"type":"output","id":"bKuK-2awKVtOhcZiduuU0","data":[{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"\n            <style>\n                .geemap-dark {\n                    --jp-widgets-color: white;\n                    --jp-widgets-label-color: white;\n                    --jp-ui-font-color1: white;\n                    --jp-layout-color2: #454545;\n                    background-color: #383838;\n                }\n\n                .geemap-dark .jupyter-button {\n                    --jp-layout-color3: #383838;\n                }\n\n                .geemap-colab {\n                    background-color: var(--colab-primary-surface-color, white);\n                }\n\n                .geemap-colab .jupyter-button {\n                    --jp-layout-color3: var(--colab-primary-surface-color, white);\n                }\n            </style>\n            ","content_type":"text/html"},"text/plain":{"content":"<IPython.core.display.HTML object>","content_type":"text/plain"}}},{"name":"stdout","output_type":"stream","text":"There are 34 images in the spatially filtered collection.\n"}],"visibility":"show","key":"uwwJBqUQxt"}],"visibility":"show","key":"lKN0x0r9PR"},{"type":"block","kind":"notebook-content","data":{"user_expressions":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"We can also sort the collection by date (","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"uSdgFOo3ty"},{"type":"inlineCode","value":"'system:time_start'","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"HTWXg9GSHV"},{"type":"text","value":"), to order the images by acquisition time.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"aVU6GVZchL"}],"key":"XeiNjFF3zj"}],"key":"pdmuZPZZUu"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"collection = collection.sort('system:time_start') ","visibility":"show","key":"Qrd9195Zjp"},{"type":"output","id":"Tt6Z9ovL-0bH6_-QAL6Zd","data":[{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"\n            <style>\n                .geemap-dark {\n                    --jp-widgets-color: white;\n                    --jp-widgets-label-color: white;\n                    --jp-ui-font-color1: white;\n                    --jp-layout-color2: #454545;\n                    background-color: #383838;\n                }\n\n                .geemap-dark .jupyter-button {\n                    --jp-layout-color3: #383838;\n                }\n\n                .geemap-colab {\n                    background-color: var(--colab-primary-surface-color, white);\n                }\n\n                .geemap-colab .jupyter-button {\n                    --jp-layout-color3: var(--colab-primary-surface-color, white);\n                }\n            </style>\n            ","content_type":"text/html"},"text/plain":{"content":"<IPython.core.display.HTML object>","content_type":"text/plain"}}}],"visibility":"show","key":"hHWbFZxpxD"}],"visibility":"show","key":"B2QVWCYuBM"},{"type":"block","kind":"notebook-content","data":{"user_expressions":[]},"children":[{"type":"heading","depth":4,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Get image collection info","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Rrc19VoAWI"}],"identifier":"get-image-collection-info","label":"Get image collection info","html_id":"get-image-collection-info","implicit":true,"key":"m4KPSyXe4B"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Again, we need to use ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"RsXXq7i850"},{"type":"inlineCode","value":".getInfo()","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"CCzyUENEZW"},{"type":"text","value":" to actually see any information on our end.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"pWt8jfi6sK"}],"key":"l7ByvbaCCu"},{"type":"admonition","kind":"important","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Important","key":"rHB3LOFlac"}],"key":"qQjTE796qb"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"This data structure is a python dictionary.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"r4aq3bhGY8"}],"key":"x1UnyzRIYk"}],"key":"FU80zupI0b"}],"key":"dr6M0cHQ1R"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"info = collection.getInfo()\ntype(info)","visibility":"show","key":"g0tjKngzEA"},{"type":"output","id":"kGbW4XORniJ2MdBHXT-G8","data":[{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"\n            <style>\n                .geemap-dark {\n                    --jp-widgets-color: white;\n                    --jp-widgets-label-color: white;\n                    --jp-ui-font-color1: white;\n                    --jp-layout-color2: #454545;\n                    background-color: #383838;\n                }\n\n                .geemap-dark .jupyter-button {\n                    --jp-layout-color3: #383838;\n                }\n\n                .geemap-colab {\n                    background-color: var(--colab-primary-surface-color, white);\n                }\n\n                .geemap-colab .jupyter-button {\n                    --jp-layout-color3: var(--colab-primary-surface-color, white);\n                }\n            </style>\n            ","content_type":"text/html"},"text/plain":{"content":"<IPython.core.display.HTML object>","content_type":"text/plain"}}},{"output_type":"execute_result","execution_count":30,"metadata":{},"data":{"text/plain":{"content":"dict","content_type":"text/plain"}}}],"visibility":"show","key":"Q13oKHKLh2"}],"visibility":"show","key":"tvNGdad4T9"},{"type":"block","kind":"notebook-content","data":{"user_expressions":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Let’s see what’s inside!","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"VN8T6IgHZg"}],"key":"RmDmhmKeR5"}],"key":"eb87ACzcrz"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"info.keys()","visibility":"show","key":"LawssVFn4z"},{"type":"output","id":"JHIVzdV0ow3VCB4SfBT1n","data":[{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"\n            <style>\n                .geemap-dark {\n                    --jp-widgets-color: white;\n                    --jp-widgets-label-color: white;\n                    --jp-ui-font-color1: white;\n                    --jp-layout-color2: #454545;\n                    background-color: #383838;\n                }\n\n                .geemap-dark .jupyter-button {\n                    --jp-layout-color3: #383838;\n                }\n\n                .geemap-colab {\n                    background-color: var(--colab-primary-surface-color, white);\n                }\n\n                .geemap-colab .jupyter-button {\n                    --jp-layout-color3: var(--colab-primary-surface-color, white);\n                }\n            </style>\n            ","content_type":"text/html"},"text/plain":{"content":"<IPython.core.display.HTML object>","content_type":"text/plain"}}},{"output_type":"execute_result","execution_count":31,"metadata":{},"data":{"text/plain":{"content":"dict_keys(['type', 'bands', 'version', 'id', 'properties', 'features'])","content_type":"text/plain"}}}],"visibility":"show","key":"BnzvqtigXJ"}],"visibility":"show","key":"nvOw3s4MHe"},{"type":"block","kind":"notebook-content","data":{"user_expressions":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"inlineCode","value":"'features'","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"J2Y2czznnS"},{"type":"text","value":" sounds like it could hold information about the images we are trying to find...","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ezb6SbADln"}],"key":"IWXHEmYstK"}],"key":"WEqfJUDcAz"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"len(info['features'])","visibility":"show","key":"kXWC2cb2Nb"},{"type":"output","id":"eWMOAY7h7CwyHfymiyL-e","data":[{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"\n            <style>\n                .geemap-dark {\n                    --jp-widgets-color: white;\n                    --jp-widgets-label-color: white;\n                    --jp-ui-font-color1: white;\n                    --jp-layout-color2: #454545;\n                    background-color: #383838;\n                }\n\n                .geemap-dark .jupyter-button {\n                    --jp-layout-color3: #383838;\n                }\n\n                .geemap-colab {\n                    background-color: var(--colab-primary-surface-color, white);\n                }\n\n                .geemap-colab .jupyter-button {\n                    --jp-layout-color3: var(--colab-primary-surface-color, white);\n                }\n            </style>\n            ","content_type":"text/html"},"text/plain":{"content":"<IPython.core.display.HTML object>","content_type":"text/plain"}}},{"output_type":"execute_result","execution_count":32,"metadata":{},"data":{"text/plain":{"content":"34","content_type":"text/plain"}}}],"visibility":"show","key":"r1zFUbS2ak"}],"visibility":"show","key":"kpV7IG29PL"},{"type":"block","kind":"notebook-content","data":{"user_expressions":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"A list of 34 things! Those are probably the 34 images in the collection. Let’s pick the first one and dig deeper!","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"gdrnrv0nu6"}],"key":"OVOILsk7Tn"}],"key":"bQ2WOWpBHF"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"feature_number = 0\ninfo['features'][0].keys()","visibility":"show","key":"xhuLzPlc6k"},{"type":"output","id":"bAvYCAN2FwQpmWP9l0sSU","data":[{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"\n            <style>\n                .geemap-dark {\n                    --jp-widgets-color: white;\n                    --jp-widgets-label-color: white;\n                    --jp-ui-font-color1: white;\n                    --jp-layout-color2: #454545;\n                    background-color: #383838;\n                }\n\n                .geemap-dark .jupyter-button {\n                    --jp-layout-color3: #383838;\n                }\n\n                .geemap-colab {\n                    background-color: var(--colab-primary-surface-color, white);\n                }\n\n                .geemap-colab .jupyter-button {\n                    --jp-layout-color3: var(--colab-primary-surface-color, white);\n                }\n            </style>\n            ","content_type":"text/html"},"text/plain":{"content":"<IPython.core.display.HTML object>","content_type":"text/plain"}}},{"output_type":"execute_result","execution_count":33,"metadata":{},"data":{"text/plain":{"content":"dict_keys(['type', 'bands', 'version', 'id', 'properties'])","content_type":"text/plain"}}}],"visibility":"show","key":"dfwGbW0efs"}],"visibility":"show","key":"GabKkxWEfH"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"info['features'][feature_number]['id']","visibility":"show","key":"zN9uJ7c17a"},{"type":"output","id":"vG3RcYGTqkB7teRTQfCMJ","data":[{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"\n            <style>\n                .geemap-dark {\n                    --jp-widgets-color: white;\n                    --jp-widgets-label-color: white;\n                    --jp-ui-font-color1: white;\n                    --jp-layout-color2: #454545;\n                    background-color: #383838;\n                }\n\n                .geemap-dark .jupyter-button {\n                    --jp-layout-color3: #383838;\n                }\n\n                .geemap-colab {\n                    background-color: var(--colab-primary-surface-color, white);\n                }\n\n                .geemap-colab .jupyter-button {\n                    --jp-layout-color3: var(--colab-primary-surface-color, white);\n                }\n            </style>\n            ","content_type":"text/html"},"text/plain":{"content":"<IPython.core.display.HTML object>","content_type":"text/plain"}}},{"output_type":"execute_result","execution_count":34,"metadata":{},"data":{"text/plain":{"content":"'COPERNICUS/S2_SR_HARMONIZED/20210816T150759_20210816T150915_T27XVG'","content_type":"text/plain"}}}],"visibility":"show","key":"q1GDmXhEqi"}],"visibility":"show","key":"JWfUX4fo9H"},{"type":"block","kind":"notebook-content","data":{"user_expressions":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Looks like we found a reference to a Sentinel-2 image! Let’s look at the ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"PErib9zH0L"},{"type":"inlineCode","value":"'bands'","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"nAXxe5NImk"},{"type":"text","value":".","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"HmEaHfC82X"}],"key":"juwnHOYFNJ"}],"key":"kYzg2nzdW0"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"for band in info['features'][feature_number]['bands']:\n    print(band['id'], end=', ')","visibility":"show","key":"ikJeU7i5Dm"},{"type":"output","id":"fHhC8kpIDPGf6DhDWKEPd","data":[{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"\n            <style>\n                .geemap-dark {\n                    --jp-widgets-color: white;\n                    --jp-widgets-label-color: white;\n                    --jp-ui-font-color1: white;\n                    --jp-layout-color2: #454545;\n                    background-color: #383838;\n                }\n\n                .geemap-dark .jupyter-button {\n                    --jp-layout-color3: #383838;\n                }\n\n                .geemap-colab {\n                    background-color: var(--colab-primary-surface-color, white);\n                }\n\n                .geemap-colab .jupyter-button {\n                    --jp-layout-color3: var(--colab-primary-surface-color, white);\n                }\n            </style>\n            ","content_type":"text/html"},"text/plain":{"content":"<IPython.core.display.HTML object>","content_type":"text/plain"}}},{"name":"stdout","output_type":"stream","text":"B1, B2, B3, B4, B5, B6, B7, B8, B8A, B9, B11, B12, AOT, WVP, SCL, TCI_R, TCI_G, TCI_B, MSK_CLDPRB, MSK_SNWPRB, QA10, QA20, QA60, MSK_CLASSI_OPAQUE, MSK_CLASSI_CIRRUS, MSK_CLASSI_SNOW_ICE, "}],"visibility":"show","key":"kOdugrI7xr"}],"visibility":"show","key":"t9tR3CFBCQ"},{"type":"block","kind":"notebook-content","data":{"user_expressions":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"inlineCode","value":"'properties'","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"GGrGuCO3L3"},{"type":"text","value":" could be useful too!","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"jEWRKu7CAq"}],"key":"ozF3TAQrgZ"}],"key":"BoUY4GXadr"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"info['features'][0]['properties'].keys()","visibility":"show","key":"H2zdmCnKbK"},{"type":"output","id":"ko673E4L3BM5NR0iRsgwT","data":[{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"\n            <style>\n                .geemap-dark {\n                    --jp-widgets-color: white;\n                    --jp-widgets-label-color: white;\n                    --jp-ui-font-color1: white;\n                    --jp-layout-color2: #454545;\n                    background-color: #383838;\n                }\n\n                .geemap-dark .jupyter-button {\n                    --jp-layout-color3: #383838;\n                }\n\n                .geemap-colab {\n                    background-color: var(--colab-primary-surface-color, white);\n                }\n\n                .geemap-colab .jupyter-button {\n                    --jp-layout-color3: var(--colab-primary-surface-color, white);\n                }\n            </style>\n            ","content_type":"text/html"},"text/plain":{"content":"<IPython.core.display.HTML object>","content_type":"text/plain"}}},{"output_type":"execute_result","execution_count":36,"metadata":{},"data":{"text/plain":{"content":"dict_keys(['DATATAKE_IDENTIFIER', 'AOT_RETRIEVAL_ACCURACY', 'SPACECRAFT_NAME', 'SATURATED_DEFECTIVE_PIXEL_PERCENTAGE', 'MEAN_INCIDENCE_AZIMUTH_ANGLE_B8A', 'CLOUD_SHADOW_PERCENTAGE', 'MEAN_SOLAR_AZIMUTH_ANGLE', 'system:footprint', 'VEGETATION_PERCENTAGE', 'SOLAR_IRRADIANCE_B12', 'SOLAR_IRRADIANCE_B10', 'SENSOR_QUALITY', 'SOLAR_IRRADIANCE_B11', 'GENERATION_TIME', 'SOLAR_IRRADIANCE_B8A', 'FORMAT_CORRECTNESS', 'CLOUD_COVERAGE_ASSESSMENT', 'THIN_CIRRUS_PERCENTAGE', 'system:time_end', 'WATER_VAPOUR_RETRIEVAL_ACCURACY', 'system:time_start', 'DATASTRIP_ID', 'PROCESSING_BASELINE', 'SENSING_ORBIT_NUMBER', 'NODATA_PIXEL_PERCENTAGE', 'SENSING_ORBIT_DIRECTION', 'GENERAL_QUALITY', 'GRANULE_ID', 'REFLECTANCE_CONVERSION_CORRECTION', 'MEDIUM_PROBA_CLOUDS_PERCENTAGE', 'MEAN_INCIDENCE_AZIMUTH_ANGLE_B8', 'DATATAKE_TYPE', 'MEAN_INCIDENCE_AZIMUTH_ANGLE_B9', 'MEAN_INCIDENCE_AZIMUTH_ANGLE_B6', 'MEAN_INCIDENCE_AZIMUTH_ANGLE_B7', 'MEAN_INCIDENCE_AZIMUTH_ANGLE_B4', 'MEAN_INCIDENCE_ZENITH_ANGLE_B1', 'NOT_VEGETATED_PERCENTAGE', 'MEAN_INCIDENCE_AZIMUTH_ANGLE_B5', 'RADIOMETRIC_QUALITY', 'MEAN_INCIDENCE_AZIMUTH_ANGLE_B2', 'MEAN_INCIDENCE_AZIMUTH_ANGLE_B3', 'MEAN_INCIDENCE_ZENITH_ANGLE_B5', 'MEAN_INCIDENCE_AZIMUTH_ANGLE_B1', 'MEAN_INCIDENCE_ZENITH_ANGLE_B4', 'MEAN_INCIDENCE_ZENITH_ANGLE_B3', 'MEAN_INCIDENCE_ZENITH_ANGLE_B2', 'MEAN_INCIDENCE_ZENITH_ANGLE_B9', 'MEAN_INCIDENCE_ZENITH_ANGLE_B8', 'MEAN_INCIDENCE_ZENITH_ANGLE_B7', 'DARK_FEATURES_PERCENTAGE', 'HIGH_PROBA_CLOUDS_PERCENTAGE', 'MEAN_INCIDENCE_ZENITH_ANGLE_B6', 'UNCLASSIFIED_PERCENTAGE', 'MEAN_SOLAR_ZENITH_ANGLE', 'MEAN_INCIDENCE_ZENITH_ANGLE_B8A', 'RADIATIVE_TRANSFER_ACCURACY', 'MGRS_TILE', 'CLOUDY_PIXEL_PERCENTAGE', 'PRODUCT_ID', 'MEAN_INCIDENCE_ZENITH_ANGLE_B10', 'SOLAR_IRRADIANCE_B9', 'SNOW_ICE_PERCENTAGE', 'DEGRADED_MSI_DATA_PERCENTAGE', 'MEAN_INCIDENCE_ZENITH_ANGLE_B11', 'MEAN_INCIDENCE_ZENITH_ANGLE_B12', 'SOLAR_IRRADIANCE_B6', 'MEAN_INCIDENCE_AZIMUTH_ANGLE_B10', 'SOLAR_IRRADIANCE_B5', 'MEAN_INCIDENCE_AZIMUTH_ANGLE_B11', 'SOLAR_IRRADIANCE_B8', 'MEAN_INCIDENCE_AZIMUTH_ANGLE_B12', 'SOLAR_IRRADIANCE_B7', 'SOLAR_IRRADIANCE_B2', 'SOLAR_IRRADIANCE_B1', 'SOLAR_IRRADIANCE_B4', 'GEOMETRIC_QUALITY', 'SOLAR_IRRADIANCE_B3', 'system:asset_size', 'WATER_PERCENTAGE', 'system:index'])","content_type":"text/plain"}}}],"visibility":"show","key":"LqzFv03Hw2"}],"visibility":"show","key":"Ihk0ZNx09q"},{"type":"block","kind":"notebook-content","data":{"user_expressions":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"That’s a lot going on right there! But ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Df9C7rAXoG"},{"type":"inlineCode","value":"'GRANULE_ID'","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"xu3RVKCdhV"},{"type":"text","value":" is probably useful. Let’s go through all our features and print the product id.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Bme2qrgxq2"}],"key":"xz87WOBCxJ"}],"key":"ykJtRuwr19"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"for feature in info['features']:\n    print(feature['properties']['GRANULE_ID'])","visibility":"show","key":"rX6x9cK4Wy"},{"type":"output","id":"XKwOSsXs0aBnQpmNsm5Kn","data":[{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"\n            <style>\n                .geemap-dark {\n                    --jp-widgets-color: white;\n                    --jp-widgets-label-color: white;\n                    --jp-ui-font-color1: white;\n                    --jp-layout-color2: #454545;\n                    background-color: #383838;\n                }\n\n                .geemap-dark .jupyter-button {\n                    --jp-layout-color3: #383838;\n                }\n\n                .geemap-colab {\n                    background-color: var(--colab-primary-surface-color, white);\n                }\n\n                .geemap-colab .jupyter-button {\n                    --jp-layout-color3: var(--colab-primary-surface-color, white);\n                }\n            </style>\n            ","content_type":"text/html"},"text/plain":{"content":"<IPython.core.display.HTML object>","content_type":"text/plain"}}},{"name":"stdout","output_type":"stream","text":"L2A_T27XVG_A023217_20210816T150915\nL2A_T26XNM_A023217_20210816T150915\nL2A_T27XVG_A023231_20210817T143747\nL2A_T26XNM_A023231_20210817T143747\nL2A_T27XVG_A032140_20210817T152909\nL2A_T26XNM_A032140_20210817T152909\nL2A_T27XVG_A032154_20210818T145938\nL2A_T26XNM_A032154_20210818T145938\nL2A_T27XVG_A032168_20210819T142935\nL2A_T26XNM_A032168_20210819T142935\nL2A_T27XVG_A023260_20210819T151803\nL2A_T26XNM_A023260_20210819T151803\nL2A_T27XVG_A023274_20210820T144750\nL2A_T26XNM_A023274_20210820T144750\nL2A_T27XVG_A032197_20210821T150913\nL2A_T26XNM_A032197_20210821T150913\nL2A_T27XVG_A032211_20210822T143925\nL2A_T26XNM_A032211_20210822T143925\nL2A_T27XVG_A023303_20210822T152807\nL2A_T26XNM_A023303_20210822T152807\nL2A_T27XVG_A023317_20210823T145754\nL2A_T26XNM_A023317_20210823T145754\nL2A_T27XVG_A023331_20210824T142741\nL2A_T26XNM_A023331_20210824T142741\nL2A_T27XVG_A032240_20210824T151911\nL2A_T26XNM_A032240_20210824T151911\nL2A_T27XVG_A032254_20210825T144920\nL2A_T26XNM_A032254_20210825T144920\nL2A_T27XVG_A023360_20210826T150906\nL2A_T26XNM_A023360_20210826T150906\nL2A_T27XVG_A023374_20210827T143745\nL2A_T26XNM_A023374_20210827T143745\nL2A_T27XVG_A032283_20210827T152908\nL2A_T26XNM_A032283_20210827T152908\n"}],"visibility":"show","key":"xEB3E2HO2W"}],"visibility":"show","key":"OaRNWx81Zy"},{"type":"block","kind":"notebook-content","data":{"user_expressions":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Add a Sentinel-2 image to the map","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"yG3mFqsAq5"}],"identifier":"add-a-sentinel-2-image-to-the-map","label":"Add a Sentinel-2 image to the map","html_id":"add-a-sentinel-2-image-to-the-map","implicit":true,"key":"dzhQj6hkNS"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"The visible bands in Sentinel-2 are ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"dvA1yvugLG"},{"type":"inlineCode","value":"'B2'","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"VV0JzMuyrv"},{"type":"text","value":":blue, ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"vMKzyM0G9I"},{"type":"inlineCode","value":"'B3'","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"G4I84Wb0Ct"},{"type":"text","value":":green, ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"jh4FJRubL4"},{"type":"inlineCode","value":"'B4'","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"HriyAImTzL"},{"type":"text","value":":red.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"vNokRpih1V"},{"type":"break","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"vTz7Gxizt1"},{"type":"text","value":"So to show a “true color” RGB composite image on the map, we need to select these bands in the R-G-B order:","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"xOaMcNuhTn"}],"key":"cVXu9FQFbG"}],"key":"Dbg6jnEZIf"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"myImage = collection.first()\nmyImage_RGB = myImage.select('B4', 'B3', 'B2')\nvis_params = {'min': 0.0, 'max': 10000, 'opacity': 1.0, 'gamma': 1.5}\nMap.addLayer(myImage_RGB, vis_params, name='my image')\nMap.addLayer(gtx_feature,{'color': 'red'},'ground track')\nMap","visibility":"show","key":"PaDGdNQRCj"},{"type":"output","id":"bYxeVnBuJW2fN3UgKa0s3","data":[{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"\n            <style>\n                .geemap-dark {\n                    --jp-widgets-color: white;\n                    --jp-widgets-label-color: white;\n                    --jp-ui-font-color1: white;\n                    --jp-layout-color2: #454545;\n                    background-color: #383838;\n                }\n\n                .geemap-dark .jupyter-button {\n                    --jp-layout-color3: #383838;\n                }\n\n                .geemap-colab {\n                    background-color: var(--colab-primary-surface-color, white);\n                }\n\n                .geemap-colab .jupyter-button {\n                    --jp-layout-color3: var(--colab-primary-surface-color, white);\n                }\n            </style>\n            ","content_type":"text/html"},"text/plain":{"content":"<IPython.core.display.HTML object>","content_type":"text/plain"}}},{"output_type":"execute_result","execution_count":38,"metadata":{},"data":{"application/vnd.jupyter.widget-view+json":{"content":"{\"model_id\":\"ba29045c43924ebf87a5cccd6e452a0b\",\"version_major\":2,\"version_minor\":0}","content_type":"application/vnd.jupyter.widget-view+json"},"text/plain":{"content":"Map(center=[np.float64(77.55243682861328), np.float64(-23.970436096191406)], controls=(WidgetControl(options=[…","content_type":"text/plain"}}}],"visibility":"show","key":"xPG0KabWAs"}],"visibility":"show","key":"qeOs8IqGcG"},{"type":"block","kind":"notebook-content","data":{"user_expressions":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"This seems to have worked. But there’s clouds everywhere.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"flETtJJP5B"}],"key":"SD5zGefFUT"}],"key":"AZPNMEx9ju"},{"type":"block","kind":"notebook-content","data":{"user_expressions":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Calculate the along-track cloud probability","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"LH8GP7FAiY"}],"identifier":"calculate-the-along-track-cloud-probability","label":"Calculate the along-track cloud probability","html_id":"calculate-the-along-track-cloud-probability","implicit":true,"key":"v15ePDWwNm"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"We need a better approach to get anywhere here. To do this, we use not only the ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"oj7bRA7Zga"},{"type":"link","url":"https://developers.google.com/earth-engine/datasets/catalog/COPERNICUS_S2_SR_HARMONIZED","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Sentinel-2 Surface Reflectance image collection","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"QIT89I4YPB"}],"urlSource":"https://developers.google.com/earth-engine/datasets/catalog/COPERNICUS_S2_SR_HARMONIZED","key":"CmZeKCOBqZ"},{"type":"text","value":", but also merge it with the ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"ZAgVOYEbyK"},{"type":"link","url":"https://developers.google.com/earth-engine/datasets/catalog/COPERNICUS_S2_CLOUD_PROBABILITY","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Sentinel-2 cloud probability collection","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"tMZp4Rgifu"}],"urlSource":"https://developers.google.com/earth-engine/datasets/catalog/COPERNICUS_S2_CLOUD_PROBABILITY","key":"Ri1hNU21g6"},{"type":"text","value":", which can be accessed under ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"ZGPbZR6pN0"},{"type":"inlineCode","value":"COPERNICUS/S2_CLOUD_PROBABILITY","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"D7ry4eUHBw"},{"type":"text","value":".","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"dBAm1zZdVw"}],"key":"w0suJlc7Ib"},{"type":"paragraph","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Let’s specify a function that adds the cloud probability band to each Sentinel-2 image and calcultes the mean cloud probability in the neighborhood of the ICESat-2 ground track, then map this function over our location/date filtered collection.","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"q5YUQAjyWd"}],"key":"QDzkFU8iCO"}],"key":"qUmajoBh57"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"def get_sentinel2_cloud_collection(is2data, days_buffer=6, gt_buffer=100):\n    \n    # create the area of interest for cloud likelihood assessment\n    ground_track_coordinates = list(zip(is2data.atl08.lon, is2data.atl08.lat))\n    ground_track_projection = 'EPSG:4326' # our data is lon/lat in degrees [https://epsg.io/4326]\n    gtx_feature = ee.Geometry.LineString(coords=ground_track_coordinates,\n                                     proj=ground_track_projection,\n                                     geodesic=True)\n    area_of_interest = gtx_feature.buffer(gt_buffer)\n    \n    datetime_requested = datetime.strptime(is2data.date, '%Y-%m-%d')\n    start_date = (datetime_requested - timedelta(days=days_buffer)).strftime('%Y-%m-%dT%H:%M:%S')\n    end_date = (datetime_requested + timedelta(days=days_buffer)).strftime('%Y-%m-%dT%H:%M:%S')\n    print('Search for imagery from {start:s} to {end:s}.'.format(start=start_date, end=end_date))\n    \n    # Import and filter S2 SR HARMONIZED\n    s2_sr_collection = (ee.ImageCollection('COPERNICUS/S2_SR_HARMONIZED')\n        .filterBounds(area_of_interest)\n        .filterDate(start_date, end_date))\n\n    # Import and filter s2cloudless.\n    s2_cloudless_collection = (ee.ImageCollection('COPERNICUS/S2_CLOUD_PROBABILITY')\n        .filterBounds(area_of_interest)\n        .filterDate(start_date, end_date))\n\n    # Join the filtered s2cloudless collection to the SR collection by the 'system:index' property.\n    cloud_collection = ee.ImageCollection(ee.Join.saveFirst('s2cloudless').apply(**{\n        'primary': s2_sr_collection, 'secondary': s2_cloudless_collection,\n        'condition': ee.Filter.equals(**{'leftField': 'system:index','rightField': 'system:index'})}))\n\n    cloud_collection = cloud_collection.map(lambda img: img.addBands(ee.Image(img.get('s2cloudless')).select('probability')))\n    \n    def set_is2_cloudiness(img, aoi=area_of_interest):\n        cloudprob = img.select(['probability']).reduceRegion(reducer=ee.Reducer.mean(), \n                                                             geometry=aoi, \n                                                             bestEffort=True, \n                                                             maxPixels=1e6)\n        return img.set('ground_track_cloud_prob', cloudprob.get('probability'))\n    \n    return cloud_collection.map(set_is2_cloudiness)","visibility":"show","key":"RLt6vQv96R"},{"type":"output","id":"L8xgFCw8WcnHE8m25v7lW","data":[{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"\n            <style>\n                .geemap-dark {\n                    --jp-widgets-color: white;\n                    --jp-widgets-label-color: white;\n                    --jp-ui-font-color1: white;\n                    --jp-layout-color2: #454545;\n                    background-color: #383838;\n                }\n\n                .geemap-dark .jupyter-button {\n                    --jp-layout-color3: #383838;\n                }\n\n                .geemap-colab {\n                    background-color: var(--colab-primary-surface-color, white);\n                }\n\n                .geemap-colab .jupyter-button {\n                    --jp-layout-color3: var(--colab-primary-surface-color, white);\n                }\n            </style>\n            ","content_type":"text/html"},"text/plain":{"content":"<IPython.core.display.HTML object>","content_type":"text/plain"}}}],"visibility":"show","key":"iKOvLKlSCc"}],"visibility":"show","key":"rFCKIbkLhb"},{"type":"block","kind":"notebook-content","data":{"tags":[],"user_expressions":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Get this collection for our ICESat-2 data, and print all the granule IDs and associated cloudiness over the ground track.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"AsIWc3c6EL"}],"key":"oWvaMI4iwx"}],"visibility":"show","key":"oMQRdri5c6"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"collection = get_sentinel2_cloud_collection(is2data)\ninfo = collection.getInfo()\nfor feature in info['features']:\n    print('%s --> along-track cloud probability: %5.1f %%' % (feature['properties']['GRANULE_ID'],\n                                                              feature['properties']['ground_track_cloud_prob']))","visibility":"show","key":"I82y88oakd"},{"type":"output","id":"GEhVb7mLVoy806mwrSENC","data":[{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"\n            <style>\n                .geemap-dark {\n                    --jp-widgets-color: white;\n                    --jp-widgets-label-color: white;\n                    --jp-ui-font-color1: white;\n                    --jp-layout-color2: #454545;\n                    background-color: #383838;\n                }\n\n                .geemap-dark .jupyter-button {\n                    --jp-layout-color3: #383838;\n                }\n\n                .geemap-colab {\n                    background-color: var(--colab-primary-surface-color, white);\n                }\n\n                .geemap-colab .jupyter-button {\n                    --jp-layout-color3: var(--colab-primary-surface-color, white);\n                }\n            </style>\n            ","content_type":"text/html"},"text/plain":{"content":"<IPython.core.display.HTML object>","content_type":"text/plain"}}},{"name":"stdout","output_type":"stream","text":"Search for imagery from 2021-08-16T00:00:00 to 2021-08-28T00:00:00.\nL2A_T26XNM_A023217_20210816T150915 --> along-track cloud probability:  89.7 %\nL2A_T27XVG_A023217_20210816T150915 --> along-track cloud probability:  89.7 %\nL2A_T26XNM_A023231_20210817T143747 --> along-track cloud probability:   4.5 %\nL2A_T27XVG_A023231_20210817T143747 --> along-track cloud probability:   4.6 %\nL2A_T26XNM_A032140_20210817T152909 --> along-track cloud probability:  12.1 %\nL2A_T27XVG_A032140_20210817T152909 --> along-track cloud probability:  12.1 %\nL2A_T26XNM_A032154_20210818T145938 --> along-track cloud probability:  10.3 %\nL2A_T27XVG_A032154_20210818T145938 --> along-track cloud probability:  10.1 %\nL2A_T26XNM_A032168_20210819T142935 --> along-track cloud probability:  12.9 %\nL2A_T27XVG_A032168_20210819T142935 --> along-track cloud probability:  12.8 %\nL2A_T26XNM_A023260_20210819T151803 --> along-track cloud probability:   9.8 %\nL2A_T27XVG_A023260_20210819T151803 --> along-track cloud probability:   9.9 %\nL2A_T26XNM_A023274_20210820T144750 --> along-track cloud probability:   1.3 %\nL2A_T27XVG_A023274_20210820T144750 --> along-track cloud probability:   1.3 %\nL2A_T26XNM_A032197_20210821T150913 --> along-track cloud probability:  20.2 %\nL2A_T27XVG_A032197_20210821T150913 --> along-track cloud probability:  20.3 %\nL2A_T26XNM_A032211_20210822T143925 --> along-track cloud probability:  14.8 %\nL2A_T27XVG_A032211_20210822T143925 --> along-track cloud probability:  14.8 %\nL2A_T26XNM_A023303_20210822T152807 --> along-track cloud probability:  15.7 %\nL2A_T27XVG_A023303_20210822T152807 --> along-track cloud probability:  15.8 %\nL2A_T26XNM_A023317_20210823T145754 --> along-track cloud probability:   5.6 %\nL2A_T27XVG_A023317_20210823T145754 --> along-track cloud probability:   5.5 %\nL2A_T26XNM_A023331_20210824T142741 --> along-track cloud probability:   8.0 %\nL2A_T27XVG_A023331_20210824T142741 --> along-track cloud probability:   7.9 %\nL2A_T26XNM_A032240_20210824T151911 --> along-track cloud probability:   7.5 %\nL2A_T27XVG_A032240_20210824T151911 --> along-track cloud probability:   7.5 %\nL2A_T26XNM_A032254_20210825T144920 --> along-track cloud probability:   7.7 %\nL2A_T27XVG_A032254_20210825T144920 --> along-track cloud probability:   7.8 %\nL2A_T26XNM_A023360_20210826T150906 --> along-track cloud probability:  15.8 %\nL2A_T27XVG_A023360_20210826T150906 --> along-track cloud probability:  15.8 %\nL2A_T26XNM_A023374_20210827T143745 --> along-track cloud probability:  10.3 %\nL2A_T27XVG_A023374_20210827T143745 --> along-track cloud probability:  10.1 %\nL2A_T26XNM_A032283_20210827T152908 --> along-track cloud probability:   9.8 %\nL2A_T27XVG_A032283_20210827T152908 --> along-track cloud probability:   9.8 %\n"}],"visibility":"show","key":"VsTfgBSMPV"}],"visibility":"show","key":"PKett5RLs7"},{"type":"block","kind":"notebook-content","data":{"tags":[],"user_expressions":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Filter cloudy images","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"SEGtf92oca"}],"identifier":"filter-cloudy-images","label":"Filter cloudy images","html_id":"filter-cloudy-images","implicit":true,"key":"wYrWKy2ahD"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"We specify a certain cloud probability threshold, and then only keep the images that fall below it. Here we are choosing a quite aggressive value of maximum 5% cloud probability...","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"oDy5wHgurP"}],"key":"G0wzSpz3x1"}],"visibility":"show","key":"iFRCfRVWrg"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"# filter by maximum allowable cloud probability (in percent)\nMAX_CLOUD_PROB_ALONG_TRACK = 5\ncloudfree_collection = collection.filter(ee.Filter.lt('ground_track_cloud_prob', MAX_CLOUD_PROB_ALONG_TRACK))\nprint('There are %i cloud-free scenes.' % cloudfree_collection.size().getInfo())","visibility":"show","key":"Jf3NpLCgCa"},{"type":"output","id":"eBYwXNdtPyxwVizQBTusA","data":[{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"\n            <style>\n                .geemap-dark {\n                    --jp-widgets-color: white;\n                    --jp-widgets-label-color: white;\n                    --jp-ui-font-color1: white;\n                    --jp-layout-color2: #454545;\n                    background-color: #383838;\n                }\n\n                .geemap-dark .jupyter-button {\n                    --jp-layout-color3: #383838;\n                }\n\n                .geemap-colab {\n                    background-color: var(--colab-primary-surface-color, white);\n                }\n\n                .geemap-colab .jupyter-button {\n                    --jp-layout-color3: var(--colab-primary-surface-color, white);\n                }\n            </style>\n            ","content_type":"text/html"},"text/plain":{"content":"<IPython.core.display.HTML object>","content_type":"text/plain"}}},{"name":"stdout","output_type":"stream","text":"There are 4 cloud-free scenes.\n"}],"visibility":"show","key":"WU6itRZyDk"}],"visibility":"show","key":"boJAozbJjJ"},{"type":"block","kind":"notebook-content","data":{"user_expressions":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Sort the collection by time difference from the ICESat-2 overpass","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"kBT78Fmx8e"}],"identifier":"sort-the-collection-by-time-difference-from-the-icesat-2-overpass","label":"Sort the collection by time difference from the ICESat-2 overpass","html_id":"sort-the-collection-by-time-difference-from-the-icesat-2-overpass","implicit":true,"key":"RNHH6hhFCS"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Using the image property ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"Ce3EE7Xr60"},{"type":"inlineCode","value":"'system:time_start'","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"qzeShGWQTN"},{"type":"text","value":" we can calculate the time difference from the ICESat-2 overpass and set it as a property. This allows us to sort the collection by it and to make sure that the first image in the collection is the closest-in-time to ICESat-2 image that is also cloud-free.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"Y0gcRVKfMB"}],"key":"JDJunCtyL3"}],"key":"BdGTvBiQVU"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"# get the time difference between ICESat-2 overpass and Sentinel-2 acquisitions, set as image property\nis2time = is2data.date + 'T12:00:00'\ndef set_time_difference(img, is2time=is2time):\n    timediff = ee.Date(is2time).difference(img.get('system:time_start'), 'second').abs()\n    return img.set('timediff', timediff)\ncloudfree_collection = cloudfree_collection.map(set_time_difference).sort('timediff')","visibility":"show","key":"d18YPpt8mD"},{"type":"output","id":"LiN9HTLcmJe-182Ab5PkS","data":[{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"\n            <style>\n                .geemap-dark {\n                    --jp-widgets-color: white;\n                    --jp-widgets-label-color: white;\n                    --jp-ui-font-color1: white;\n                    --jp-layout-color2: #454545;\n                    background-color: #383838;\n                }\n\n                .geemap-dark .jupyter-button {\n                    --jp-layout-color3: #383838;\n                }\n\n                .geemap-colab {\n                    background-color: var(--colab-primary-surface-color, white);\n                }\n\n                .geemap-colab .jupyter-button {\n                    --jp-layout-color3: var(--colab-primary-surface-color, white);\n                }\n            </style>\n            ","content_type":"text/html"},"text/plain":{"content":"<IPython.core.display.HTML object>","content_type":"text/plain"}}}],"visibility":"show","key":"LiMEZlPNu3"}],"visibility":"show","key":"gfKNrVPjnl"},{"type":"block","kind":"notebook-content","data":{"user_expressions":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Print some stats for the final collection to make sure everything looks alright.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"XKOwTxlTIg"}],"key":"oUYKTKFuGr"}],"key":"LHXzGUvCQz"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"info = cloudfree_collection.getInfo()\nfor feature in info['features']:\n    s2datetime = datetime.fromtimestamp(feature['properties']['system:time_start']/1e3)\n    is2datetime = datetime.strptime(is2time, '%Y-%m-%dT%H:%M:%S')\n    timediff = s2datetime - is2datetime\n    timediff -= timedelta(microseconds=timediff.microseconds)\n    diffsign = 'before' if timediff < timedelta(0) else 'after'\n    print('%s --> along-track cloud probability: %5.1f %%, %s %7s ICESat-2' % (feature['properties']['GRANULE_ID'],\n              feature['properties']['ground_track_cloud_prob'],np.abs(timediff), diffsign))","visibility":"show","key":"dQDhaPCy7R"},{"type":"output","id":"kdvkT52IEMXDjeOJDzTrv","data":[{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"\n            <style>\n                .geemap-dark {\n                    --jp-widgets-color: white;\n                    --jp-widgets-label-color: white;\n                    --jp-ui-font-color1: white;\n                    --jp-layout-color2: #454545;\n                    background-color: #383838;\n                }\n\n                .geemap-dark .jupyter-button {\n                    --jp-layout-color3: #383838;\n                }\n\n                .geemap-colab {\n                    background-color: var(--colab-primary-surface-color, white);\n                }\n\n                .geemap-colab .jupyter-button {\n                    --jp-layout-color3: var(--colab-primary-surface-color, white);\n                }\n            </style>\n            ","content_type":"text/html"},"text/plain":{"content":"<IPython.core.display.HTML object>","content_type":"text/plain"}}},{"name":"stdout","output_type":"stream","text":"L2A_T26XNM_A023274_20210820T144750 --> along-track cloud probability:   1.3 %, 2 days, 4:09:34  before ICESat-2\nL2A_T27XVG_A023274_20210820T144750 --> along-track cloud probability:   1.3 %, 2 days, 4:09:38  before ICESat-2\nL2A_T26XNM_A023231_20210817T143747 --> along-track cloud probability:   4.5 %, 5 days, 4:19:32  before ICESat-2\nL2A_T27XVG_A023231_20210817T143747 --> along-track cloud probability:   4.6 %, 5 days, 4:19:36  before ICESat-2\n"}],"visibility":"show","key":"RJKZNi0obT"}],"visibility":"show","key":"wRciOIImL4"},{"type":"block","kind":"notebook-content","data":{"user_expressions":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Show the final image and ground track on the map","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"xVhaVCo10o"}],"identifier":"show-the-final-image-and-ground-track-on-the-map","label":"Show the final image and ground track on the map","html_id":"show-the-final-image-and-ground-track-on-the-map","implicit":true,"key":"uW7MH1Gdem"}],"key":"HBhCGiykws"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"first_image_rgb = cloudfree_collection.first().select('B4', 'B3', 'B2')\nMap = geemap.Map(layout=Layout(width='70%', max_height='450px'))\nMap.add_basemap('SATELLITE')\nMap.addLayer(first_image_rgb, vis_params, name='my image')\nMap.addLayer(gtx_feature,{'color': 'red'},'ground track')\nMap.centerObject(gtx_feature, zoom=12)\nMap","visibility":"show","key":"zcqqytnrFI"},{"type":"output","id":"wawgapMjbBhs0eHoxXABA","data":[{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"\n            <style>\n                .geemap-dark {\n                    --jp-widgets-color: white;\n                    --jp-widgets-label-color: white;\n                    --jp-ui-font-color1: white;\n                    --jp-layout-color2: #454545;\n                    background-color: #383838;\n                }\n\n                .geemap-dark .jupyter-button {\n                    --jp-layout-color3: #383838;\n                }\n\n                .geemap-colab {\n                    background-color: var(--colab-primary-surface-color, white);\n                }\n\n                .geemap-colab .jupyter-button {\n                    --jp-layout-color3: var(--colab-primary-surface-color, white);\n                }\n            </style>\n            ","content_type":"text/html"},"text/plain":{"content":"<IPython.core.display.HTML object>","content_type":"text/plain"}}},{"output_type":"execute_result","execution_count":44,"metadata":{},"data":{"application/vnd.jupyter.widget-view+json":{"content":"{\"model_id\":\"57370294cc81413a96ac186e5b67a385\",\"version_major\":2,\"version_minor\":0}","content_type":"application/vnd.jupyter.widget-view+json"},"text/plain":{"content":"Map(center=[77.55243721126286, -23.970458522024117], controls=(WidgetControl(options=['position', 'transparent…","content_type":"text/plain"}}}],"visibility":"show","key":"W4dn72vhgR"}],"visibility":"show","key":"pYLwQCyhCQ"},{"type":"block","kind":"notebook-content","data":{"user_expressions":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Download images from Earth Engine","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"updX1vMnMT"}],"identifier":"download-images-from-earth-engine","label":"Download images from Earth Engine","html_id":"download-images-from-earth-engine","implicit":true,"key":"lKmt8eHqtJ"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"We can use ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Rktmr4MEt2"},{"type":"link","url":"https://developers.google.com/earth-engine/apidocs/ee-image-getdownloadurl","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"inlineCode","value":".getDownloadUrl()","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Z6WUXxHCyz"}],"urlSource":"https://developers.google.com/earth-engine/apidocs/ee-image-getdownloadurl","key":"wIkvvkiNYv"},{"type":"text","value":" on an Earth Engine image.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"u2wiktiRVC"}],"key":"TZdiJZ5QHj"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"It asks for a scale, which is just the pixel size in meters (10 m for Sentinel-2 visible bands). It also asks for the region we would like to export; here we use a ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"ZElIkJuoi3"},{"type":"link","url":"https://developers.google.com/earth-engine/apidocs/ee-geometry-buffer","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"inlineCode","value":".buffer","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"nevfsvl2Mg"}],"urlSource":"https://developers.google.com/earth-engine/apidocs/ee-geometry-buffer","key":"mjJW7nah6s"},{"type":"text","value":" around the center.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"LpAFpoCWcZ"}],"key":"UplcZ6DveN"},{"type":"mystDirective","name":"Note","value":"This function can only be effectively used for small download jobs because there is a request size limit. Here, we only download a small region around the ground track, and convert the image to an 8-bit RGB composite to keep file size low. For larger jobs you should use [`Export.image.toDrive`](https://developers.google.com/earth-engine/apidocs/export-image-todrive):::","position":{"start":{"line":7,"column":1},"end":{"line":8,"column":1}},"key":"kblMRg9Gbc"}],"key":"NqPkPP12Ea"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"# create a region around the ground track over which to download data\npoint_of_interest = ee.Geometry.Point(center_lon, center_lat)\nbuffer_around_center_meters = ground_track_length*0.52\nregion_of_interest = point_of_interest.buffer(buffer_around_center_meters)\n\n# make the image 8-bit RGB\ns2rgb = first_image_rgb.unitScale(ee.Number(0), ee.Number(10000)).clamp(0.0, 1.0).multiply(255.0).uint8()\n\n# get the download URL\ndownloadURL = s2rgb.getDownloadUrl({'name': 'mySatelliteImage',\n                                          'crs': s2rgb.projection().crs(),\n                                          'scale': 10,\n                                          'region': region_of_interest,\n                                          'filePerBand': False,\n                                          'format': 'GEO_TIFF'})\ndownloadURL","visibility":"show","key":"nUZdwQTndM"},{"type":"output","id":"1dNlFNT3605Hr2xvlkwQi","data":[{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"\n            <style>\n                .geemap-dark {\n                    --jp-widgets-color: white;\n                    --jp-widgets-label-color: white;\n                    --jp-ui-font-color1: white;\n                    --jp-layout-color2: #454545;\n                    background-color: #383838;\n                }\n\n                .geemap-dark .jupyter-button {\n                    --jp-layout-color3: #383838;\n                }\n\n                .geemap-colab {\n                    background-color: var(--colab-primary-surface-color, white);\n                }\n\n                .geemap-colab .jupyter-button {\n                    --jp-layout-color3: var(--colab-primary-surface-color, white);\n                }\n            </style>\n            ","content_type":"text/html"},"text/plain":{"content":"<IPython.core.display.HTML object>","content_type":"text/plain"}}},{"output_type":"execute_result","execution_count":45,"metadata":{},"data":{"text/plain":{"content":"'https://earthengine.googleapis.com/v1/projects/995399951136/thumbnails/1ddb4ba86090455713430a2d2ba22343-4eb2005d9eebf6810ef6058cea90976b:getPixels'","content_type":"text/plain"}}}],"visibility":"show","key":"apchxOR8Ch"}],"visibility":"show","key":"JBBTCcuJJF"},{"type":"block","kind":"notebook-content","data":{"user_expressions":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"We can save the content of the download URL with the ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"infUkvEQyj"},{"type":"link","url":"https://docs.python-requests.org/en/latest/","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"inlineCode","value":"requests","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"BG4qh24UyQ"}],"urlSource":"https://docs.python-requests.org/en/latest/","key":"a9JEM7oFEU"},{"type":"text","value":" library.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"eXURXAqiwV"}],"key":"C5Bwy3Ndfq"}],"key":"ffRzoFHn40"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"response = requests.get(downloadURL)\nfilename = 'my-satellite-image.tif'\nwith open(filename, 'wb') as f:\n    f.write(response.content)\nprint('Downloaded %s' % filename)","visibility":"show","key":"oDgPEKxPpX"},{"type":"output","id":"qCGQQQhYU-RCAix0QBpnm","data":[{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"\n            <style>\n                .geemap-dark {\n                    --jp-widgets-color: white;\n                    --jp-widgets-label-color: white;\n                    --jp-ui-font-color1: white;\n                    --jp-layout-color2: #454545;\n                    background-color: #383838;\n                }\n\n                .geemap-dark .jupyter-button {\n                    --jp-layout-color3: #383838;\n                }\n\n                .geemap-colab {\n                    background-color: var(--colab-primary-surface-color, white);\n                }\n\n                .geemap-colab .jupyter-button {\n                    --jp-layout-color3: var(--colab-primary-surface-color, white);\n                }\n            </style>\n            ","content_type":"text/html"},"text/plain":{"content":"<IPython.core.display.HTML object>","content_type":"text/plain"}}},{"name":"stdout","output_type":"stream","text":"Downloaded my-satellite-image.tif\n"}],"visibility":"show","key":"KXZ5Z1m3Sn"}],"visibility":"show","key":"a4RRqpWDnw"},{"type":"block","kind":"notebook-content","data":{"user_expressions":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Open a GeoTIFF in rasterio","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"J7331GpNMF"}],"identifier":"open-a-geotiff-in-rasterio","label":"Open a GeoTIFF in rasterio","html_id":"open-a-geotiff-in-rasterio","implicit":true,"key":"XUq5LABJnw"},{"type":"admonition","kind":"important","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Important","key":"dnjgJNzoLv"}],"key":"iiCJPFARZC"},{"type":"paragraph","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Now that we have saved the file, we can open it locally with the ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"yn1EjyxdE6"},{"type":"link","url":"https://rasterio.readthedocs.io/en/latest/intro.html","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"inlineCode","value":"rasterio","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"CCrZjNEVLK"}],"urlSource":"https://rasterio.readthedocs.io/en/latest/intro.html","key":"vJJnqupzlq"},{"type":"text","value":" library.","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"YP0TE3tOgy"}],"key":"osuO0idZBw"}],"key":"tocZom6Cuc"}],"key":"xSbkEywa8G"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"myImage = rio.open(filename)\nmyImage","visibility":"show","key":"gMnskOq8bu"},{"type":"output","id":"ffwz4LnD1dznNCd3bvj3W","data":[{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"\n            <style>\n                .geemap-dark {\n                    --jp-widgets-color: white;\n                    --jp-widgets-label-color: white;\n                    --jp-ui-font-color1: white;\n                    --jp-layout-color2: #454545;\n                    background-color: #383838;\n                }\n\n                .geemap-dark .jupyter-button {\n                    --jp-layout-color3: #383838;\n                }\n\n                .geemap-colab {\n                    background-color: var(--colab-primary-surface-color, white);\n                }\n\n                .geemap-colab .jupyter-button {\n                    --jp-layout-color3: var(--colab-primary-surface-color, white);\n                }\n            </style>\n            ","content_type":"text/html"},"text/plain":{"content":"<IPython.core.display.HTML object>","content_type":"text/plain"}}},{"output_type":"execute_result","execution_count":47,"metadata":{},"data":{"text/plain":{"content":"<open DatasetReader name='my-satellite-image.tif' mode='r'>","content_type":"text/plain"}}}],"visibility":"show","key":"hjROcrQ8JM"}],"visibility":"show","key":"rn9BtBMUrP"},{"type":"block","kind":"notebook-content","data":{"user_expressions":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Plot a GeoTIFF in Matplotlib","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"I2KhFDjzaM"}],"identifier":"plot-a-geotiff-in-matplotlib","label":"Plot a GeoTIFF in Matplotlib","html_id":"plot-a-geotiff-in-matplotlib","implicit":true,"key":"ghFFcey0zD"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Now we can easily plot the image in a matplotlib figure, just using the ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"TSd2E93ogG"},{"type":"link","url":"https://rasterio.readthedocs.io/en/latest/api/rasterio.plot.html","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"inlineCode","value":"rasterio.plot()","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"zCvLEyGU3t"}],"urlSource":"https://rasterio.readthedocs.io/en/latest/api/rasterio.plot.html","key":"rbwiZ7UWty"},{"type":"text","value":" module.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"mKNWrjlfDT"}],"key":"o4H9aByOGR"}],"key":"nb5jtj7hpV"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"fig, ax = plt.subplots(figsize=[4,4])\nrioplot.show(myImage, ax=ax);","visibility":"show","key":"nUzAhdFk7N"},{"type":"output","id":"2cLv3dx-mEzjQ0w5JiDRp","data":[{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"\n            <style>\n                .geemap-dark {\n                    --jp-widgets-color: white;\n                    --jp-widgets-label-color: white;\n                    --jp-ui-font-color1: white;\n                    --jp-layout-color2: #454545;\n                    background-color: #383838;\n                }\n\n                .geemap-dark .jupyter-button {\n                    --jp-layout-color3: #383838;\n                }\n\n                .geemap-colab {\n                    background-color: var(--colab-primary-surface-color, white);\n                }\n\n                .geemap-colab .jupyter-button {\n                    --jp-layout-color3: var(--colab-primary-surface-color, white);\n                }\n            </style>\n            ","content_type":"text/html"},"text/plain":{"content":"<IPython.core.display.HTML object>","content_type":"text/plain"}}},{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"90666f37782de92bb53403d9d91d79cc","path":"/icesat2-cookbook/_preview/24/build/90666f37782de92bb53403d9d91d79cc.png"},"text/plain":{"content":"<Figure size 400x400 with 1 Axes>","content_type":"text/plain"}}}],"visibility":"show","key":"Q9hET70dYo"}],"visibility":"show","key":"VncHhsb7FH"},{"type":"block","kind":"notebook-content","data":{"user_expressions":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"transform the ground track into the image CRS","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"yUSaDEDROa"}],"identifier":"transform-the-ground-track-into-the-image-crs","label":"transform the ground track into the image CRS","html_id":"transform-the-ground-track-into-the-image-crs","implicit":true,"key":"cyKf2044tu"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Because our plot is now in the Antarctic Polar Stereographic Coordrinate Reference System, we need to project the coordinates of the ground track from lon/lat values. The ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"a2WlCmq06L"},{"type":"link","url":"https://rasterio.readthedocs.io/en/latest/api/rasterio.warp.html","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"inlineCode","value":"rasterio.warp.transform","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"kaCBIlYmVm"}],"urlSource":"https://rasterio.readthedocs.io/en/latest/api/rasterio.warp.html","key":"LvKMLuufcN"},{"type":"text","value":" function has us covered. From then on, it’s just plotting in Matplotlib.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"ErBSnQ30VH"}],"key":"BKvuRVKi9X"}],"key":"mbAna80KcD"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"gtx_x, gtx_y = warp.transform(src_crs='epsg:4326', dst_crs=myImage.crs, xs=is2data.atl08.lon, ys=is2data.atl08.lat)\nax.plot(gtx_x, gtx_y, color='red', linestyle='-')\nax.axis('off')\n\ndisplay(fig)","visibility":"show","key":"QWRryfpdXC"},{"type":"output","id":"PQ9nU16oU8qYC4CZaVxP2","data":[{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"\n            <style>\n                .geemap-dark {\n                    --jp-widgets-color: white;\n                    --jp-widgets-label-color: white;\n                    --jp-ui-font-color1: white;\n                    --jp-layout-color2: #454545;\n                    background-color: #383838;\n                }\n\n                .geemap-dark .jupyter-button {\n                    --jp-layout-color3: #383838;\n                }\n\n                .geemap-colab {\n                    background-color: var(--colab-primary-surface-color, white);\n                }\n\n                .geemap-colab .jupyter-button {\n                    --jp-layout-color3: var(--colab-primary-surface-color, white);\n                }\n            </style>\n            ","content_type":"text/html"},"text/plain":{"content":"<IPython.core.display.HTML object>","content_type":"text/plain"}}},{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"ebc45419bbb28376e00cb1812af737b2","path":"/icesat2-cookbook/_preview/24/build/ebc45419bbb28376e00cb1812af737b2.png"},"text/plain":{"content":"<Figure size 400x400 with 1 Axes>","content_type":"text/plain"}}}],"visibility":"show","key":"njN1BidObP"}],"visibility":"show","key":"RTY2Bdq0bK"},{"type":"block","kind":"notebook-content","data":{"user_expressions":[]},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Summary","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"IQuViD5reU"}],"identifier":"summary","label":"Summary","html_id":"summary","implicit":true,"key":"KT9e8qpyUS"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"🎉 Congratulations! You’ve completed this tutorial and have seen how we can put ICESat-2 photon-level data into context using Google Earth Engine and the OpenAltimetry API.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"ToRUQYPRix"}],"key":"drLdCG4zN0"},{"type":"admonition","kind":"hint","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Hint","key":"bFGqrAG5ej"}],"key":"e5ExpOFTk9"},{"type":"paragraph","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"You can explore a few more use cases for this code in ","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"n8SmexQNOP"},{"type":"link","url":"./use_examples.ipynb","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"this notebook","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"QDVocOYi5r"}],"urlSource":"./use_examples.ipynb","key":"ZFBjypEJFb"},{"type":"text","value":".","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"HPCDthdSFF"}],"key":"sEPI1svCjg"}],"key":"OX6Yyy5uA1"}],"key":"X3dDJuhG04"},{"type":"block","kind":"notebook-content","data":{"user_expressions":[]},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"References","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"gOYQMQKEiM"}],"identifier":"references","label":"References","html_id":"references","implicit":true,"key":"Uc72rhc38l"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"To further explore the topics of this tutorial see the following detailed documentation:","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"OMFg8oBUAx"}],"key":"JJQDSBbVGf"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":5,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"link","url":"https://openaltimetry.org/data/swagger-ui/","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"The OpenAltimetry API","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"Q4rISc690x"}],"urlSource":"https://openaltimetry.org/data/swagger-ui/","key":"BXT76H5CQ5"}],"key":"BAEDgZpey1"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"link","url":"https://developers.google.com/earth-engine/guides","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Google Earth Engine JavaScript and Python Guides","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"WNRYq1Dftc"}],"urlSource":"https://developers.google.com/earth-engine/guides","key":"yNtQLoxnv4"}],"key":"rClHtfIvv0"},{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"link","url":"https://developers.google.com/earth-engine/tutorials/community/sentinel-2-s2cloudless","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Tutorial on Sentinel-2 cloud masking with s2cloudless","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"ibPUxlI2qD"}],"urlSource":"https://developers.google.com/earth-engine/tutorials/community/sentinel-2-s2cloudless","key":"A5FLwNPdnw"}],"key":"xj4Zw3v8My"},{"type":"listItem","spread":true,"position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"link","url":"https://geemap.org/","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"The geemap package","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"PbBUDwald3"}],"urlSource":"https://geemap.org/","key":"Qw66KNWLXi"},{"type":"text","value":" and ","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"Yovczq0YgB"},{"type":"link","url":"https://geemap.org/tutorials/","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"tutorials","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"s4bMyW3wBv"}],"urlSource":"https://geemap.org/tutorials/","key":"SFtksVSNyo"}],"key":"PcB6KlqHGn"}],"key":"xGIDoznhAj"}],"key":"fYk5rDG5j1"}],"key":"aZLUSkFrKJ"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"DRAFT: Machine Learning","url":"/notebooks/machine-learning","group":"Foundations"},"next":{"title":"Land Ice Applications","url":"/notebooks/land-ice","group":"Example Workflows"}}},"domain":"http://localhost:3000"}