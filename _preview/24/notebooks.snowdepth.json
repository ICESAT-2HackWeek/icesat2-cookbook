{"version":2,"kind":"Notebook","sha256":"165f37f0ca1086b5449de06df64564128ed4ae8f1bcca31e1f78f3a38a627995","slug":"notebooks.snowdepth","location":"/notebooks/snowdepth.ipynb","dependencies":[],"frontmatter":{"title":"Snow Depth Applications","content_includes_title":false,"kernelspec":{"name":"python3","display_name":"Python 3 (ipykernel)","language":"python"},"authors":[{"nameParsed":{"literal":"ICESat-2 team","given":"ICESat-2","family":"team"},"name":"ICESat-2 team","id":"contributors-myst-generated-uid-0"}],"open_access":true,"license":{"content":{"id":"CC-BY-4.0","url":"https://creativecommons.org/licenses/by/4.0/","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true},"code":{"id":"Apache-2.0","url":"https://opensource.org/licenses/Apache-2.0","name":"Apache License 2.0","free":true,"osi":true}},"github":"https://github.com/ICESAT-2HackWeek/icesat2-cookbook","copyright":"2025","affiliations":[{"id":"UAlbany","name":"University at Albany (SUNY)","department":"Atmospheric and Environmental Sciences","url":"https://www.albany.edu/daes"},{"id":"CISL","name":"NSF National Center for Atmospheric Research","department":"Computational and Information Systems Lab","url":"https://www.cisl.ucar.edu"},{"id":"Unidata","name":"NSF Unidata","url":"https://www.unidata.ucar.edu"},{"id":"Argonne","name":"Argonne National Laboratory","department":"Environmental Science Division","url":"https://www.anl.gov/evs"},{"id":"CarbonPlan","name":"CarbonPlan","url":"https://carbonplan.org"},{"id":"NVIDIA","name":"NVIDIA Corporation","url":"https://www.nvidia.com/"}],"numbering":{"title":{"offset":1}},"edit_url":"https://github.com/ICESAT-2HackWeek/icesat2-cookbook/blob/HEAD/notebooks/snowdepth.ipynb","exports":[{"format":"ipynb","filename":"snowdepth.ipynb","url":"/icesat2-cookbook/_preview/24/build/snowdepth-84ee2cf3c1101abcc88a12fe0c2a84d6.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Author(s)","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"l2rN9K1hFE"}],"identifier":"author-s","label":"Author(s)","html_id":"author-s","implicit":true,"key":"lXbrkXtDt8"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Karina Zikan, Zach Fair","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"k80xphpsSE"}],"key":"gtmm2aqWbh"},{"type":"heading","depth":2,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Learning Outcomes","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"GAvjtt7JfE"}],"identifier":"learning-outcomes","label":"Learning Outcomes","html_id":"learning-outcomes","implicit":true,"key":"RfV4NUlSeF"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":9,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":9,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"Gain experience in working with SlideRule to access and pre-process ICESat-2\ndata","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"mepj1Z7e7T"}],"key":"gNy2o7qRXy"},{"type":"listItem","spread":true,"position":{"start":{"line":11,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"text","value":"Learn how to use projections and interpolation to compare ICESat-2 track data\nwith gridded raster products","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"eRltjlry2v"}],"key":"BZomqABBJh"},{"type":"listItem","spread":true,"position":{"start":{"line":13,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"text","value":"Develop a general understanding of how to measure snow depths with LiDAR,\nand learn about opportunities and challenges when using ICEsat-2 along-track\nproducts","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"olSiNgoD2m"}],"key":"N5zhnZ9Wfv"}],"key":"L89Cb40vu5"}],"key":"ujhYJ2vL35"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Background","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"qlJFb4GqNo"}],"identifier":"background","label":"Background","html_id":"background","implicit":true,"key":"pZkhrWbZ77"},{"type":"heading","depth":3,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"How do we measure snow depth with LiDAR?","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"fAIrLrOdKi"}],"identifier":"how-do-we-measure-snow-depth-with-lidar","label":"How do we measure snow depth with LiDAR?","html_id":"how-do-we-measure-snow-depth-with-lidar","implicit":true,"key":"jHbhQJrAPt"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"LiDAR is a useful tool for collecting high resolution snow depth maps over large spatial areas.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"N01mc8OGsl"}],"key":"A1iLvUDz7r"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Snow depth is measured from LiDAR by differencing a snow-free LiDAR map from a snow-covered LiDAR map of the same area of interest.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"UFwgrWr7z7"}],"key":"mB4qhl7DpD"}],"key":"nEWY699wRv"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"TODO: Insert Figure 6 from Deems et al. here","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"w9tXrGRdgk"}],"key":"kremVd9GmK"}],"key":"TUWk1OZhDO"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"TODO: Insert Figure 7b from Deems et al","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"AJyZLxj6Fy"}],"key":"kWJPV7QANY"}],"key":"Wj77KknMME"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Can we do this with ICESat-2?","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"lyA6SF9Atk"}],"identifier":"can-we-do-this-with-icesat-2","label":"Can we do this with ICESat-2?","html_id":"can-we-do-this-with-icesat-2","implicit":true,"key":"g4zRGpgpkQ"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Yes! By differencing snow-covered ICESat-2 transects from snow-free maps, we can calculate snow depth!","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"e0UXvuo1JC"}],"key":"SQS68Cgis9"},{"type":"paragraph","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Performing the calculation with ICESat-2 is a little different from other LiDAR snow depth methods, given that ICESat-2 is a transect of points rather than gridded raster data. ICESat-2 also has sparse coverage in the mid-latitudes, so generating an effective snow-covered or snow-free map will be difficult.","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"z6HdTRPD03"}],"key":"sHJLgpmbWy"},{"type":"paragraph","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Because of these limitations, we need an independently-collected snow-free map of a region of interest for comparison. We also need to process the snow-free data into a form that can be differenced from snow-on ICESat-2 data.","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"zQ3LmVo8XN"}],"key":"pV4ss2CIn3"},{"type":"paragraph","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"In this tutorial, we will show an example of how to compare ICESat-2 data to raster data.","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"gOavq3TOt9"}],"key":"rqgJRFqijp"}],"key":"JLZjzB1GJn"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"TODO: Add Karina’s image over Dry Creek","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ZkZBOOP4lB"}],"key":"JxPB7h4WVm"}],"key":"AMkGfXBPhf"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"What do we need to calculate snow depth from ICESat-2?","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"gEPvUg6QyV"}],"identifier":"what-do-we-need-to-calculate-snow-depth-from-icesat-2","label":"What do we need to calculate snow depth from ICESat-2?","html_id":"what-do-we-need-to-calculate-snow-depth-from-icesat-2","implicit":true,"key":"TKTks9LAU1"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":2,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"A region of interest, where snow-free (and snow-covered, for validation) digital elevation models (DEMs) are available.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"Wn4KRihXCL"}],"key":"XFXgpPaWIR"},{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"ICESat-2 data, ideally from one of the lower-level products (ATL03, ATL06, ATL08, Sliderule Earth).","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"nyA7LHRxGO"}],"key":"mYYdx0Xl6o"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"A snow-free reference DEM for the snow depth calculation.","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"pitt6ZplaL"}],"key":"DrfBFaQis3"}],"key":"Nx34mCOWR1"}],"key":"Ktvfl83hao"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"What do we need to consider when comparing ICESat-2 and raster data?","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"G2d3GFso7j"}],"identifier":"what-do-we-need-to-consider-when-comparing-icesat-2-and-raster-data","label":"What do we need to consider when comparing ICESat-2 and raster data?","html_id":"what-do-we-need-to-consider-when-comparing-icesat-2-and-raster-data","implicit":true,"key":"Tyhv58SR6Y"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"strong","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Geolocation","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"Vil785CYWc"}],"key":"FKcabJGxVd"},{"type":"text","value":": To obtain usable results, it is important that we properly align the snow-free raster data with ICESat-2. Even small offsets can create large errors that worsen in rugged terrain.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"WF1Rx0JlXz"}],"key":"EoYkO74uoL"},{"type":"paragraph","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"TODO: Add Figure 9 from Nuth and Kabb","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"nOP8aJdgBH"}],"key":"ya9X2iaaRN"},{"type":"paragraph","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"strong","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Vegetation","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"L7H1eirHJQ"}],"key":"j0o7Lfyt8j"},{"type":"text","value":": Incorrectly categorized vegetation returns can positively bias ground or snow surface height estimation. Additionally, dense vegetation can reduce the number of photon returns, thereby increasing uncertainty in our height estimates.","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"L6AWQO7Ivn"}],"key":"dYVJ12iMGG"},{"type":"paragraph","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"strong","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Slope Effects","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"aDS7JqyUh5"}],"key":"dyIN8nKmzf"},{"type":"text","value":": Rugged terrain increases uncertainty in ICESat-2 returns and increases the impact of geolocation offsets between ICESat-2 and raster data. Additionally, steep slopes can negatively bias ground or snow surface height estimates.","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"IEV4quOI6D"}],"key":"azhpFbsjBT"}],"key":"TaH9FBB5LN"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Computing Environment","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"V9MFEIpCKc"}],"identifier":"computing-environment","label":"Computing Environment","html_id":"computing-environment","implicit":true,"key":"rXnDaGqmL5"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"We’ll be using the following open source Python libraries in this notebook:","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"lnTzdEi3Fk"}],"key":"Q7MrJBrjDw"}],"key":"HcaDZ908zm"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"import numpy as np\nimport pandas as pd\nimport geopandas as gpd\nimport rioxarray as rxr\nimport matplotlib.pyplot as plt\nfrom sliderule import icesat2, sliderule\nfrom scipy.interpolate import RectBivariateSpline","key":"lTW6B9RQug"},{"type":"output","id":"ys6C2PAQkzBUpp4ffpkKs","data":[],"key":"lltAdM4e9f"}],"key":"j533GMSCWF"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Data","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"md1FCrmVKs"}],"identifier":"data","label":"Data","html_id":"data","implicit":true,"key":"zPMAgZSa1P"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"We will use SlideRule to acquire customized ATL06 data. Specific customizations that we will implement include footprint averaging (i.e., along-track sampling rate) and photon identification (signal/noise and ground/vegetation).","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"ezz8g3rUku"}],"key":"KPidtNo8KZ"},{"type":"paragraph","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"We will look at snow depth data over Upper Kuparuk/Toolik (UKT) on the Arctic North Slope of Alaska. Because UKT is a relatively flat region with little vegetation, we should expect good agreement between ICESat-2 and our rasters of interest.","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"oMmSE89bRI"}],"key":"QzkFHz47ec"}],"key":"oy8ShJcLEG"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Initialize SlideRule","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"OcbSofwurE"}],"identifier":"initialize-sliderule","label":"Initialize SlideRule","html_id":"initialize-sliderule","implicit":true,"key":"r7NB5fdDsp"}],"key":"RPt3eouxzh"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"icesat2.init(\"slideruleearth.io\")","key":"MGbS4H5Ayb"},{"type":"output","id":"hPj33mEsbkhqi8J2_VlXg","data":[],"key":"kgoZ1sqXDz"}],"key":"ATsxO7Oxp8"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Define Region of Interest","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"XGRkJRPnJ8"}],"identifier":"define-region-of-interest","label":"Define Region of Interest","html_id":"define-region-of-interest","implicit":true,"key":"FA1zid0cNC"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"After we initialize SlideRule, we define our region of interest. Notice that there are two options given below. This is because SlideRule accepts either the coordinates of a box/polygon or a geoJSON for its ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"E5E2iF1jLH"},{"type":"inlineCode","value":"region","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"B40BRBAtSt"},{"type":"text","value":" input.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"QmJRA3j2sW"}],"key":"pobQ0A86Uj"},{"type":"paragraph","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"We are going to use the bounding box method in this tutorial, but the syntax for the geoJSON method is included for the user’s reference.","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"tX1P91LDvJ"}],"key":"cfEQjLF4FS"}],"key":"YaOhpDG4PR"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Define region of interest over Toolik, Alaska\nregion = [{\"lon\":-149.5992624418217, \"lat\":68.63358948385529}, \n          {\"lon\":-149.5954459662985, \"lat\":68.60200878043223}, \n          {\"lon\":-149.2821268688734, \"lat\":68.60675802967609}, \n          {\"lon\":-149.2855031235162, \"lat\":68.63834638180673},\n          {\"lon\":-149.5992624418217, \"lat\":68.63358948385529}]\n\nprint(region)","key":"hNvUodsTob"},{"type":"output","id":"eIThKPnG7LS8vQP9CZIub","data":[{"output_type":"stream","name":"stdout","text":"[{'lon': -149.5992624418217, 'lat': 68.63358948385529}, {'lon': -149.5954459662985, 'lat': 68.60200878043223}, {'lon': -149.2821268688734, 'lat': 68.60675802967609}, {'lon': -149.2855031235162, 'lat': 68.63834638180673}, {'lon': -149.5992624418217, 'lat': 68.63358948385529}]\n"}],"key":"D2nTGl9iAr"}],"key":"swdMa9X35b"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Alternate method, with geoJSON\npath = \"/path/to/geojson/\"\nregion = sliderule.toregion(path)[\"poly\"]\nprint(region)","key":"iLU0xP3FSR"},{"type":"output","id":"rfjzMXPmaYawwsJD6oEvU","data":[{"output_type":"error","traceback":"\u001b[31m---------------------------------------------------------------------------\u001b[39m\n\u001b[31mFatalError\u001b[39m                                Traceback (most recent call last)\n\u001b[36mCell\u001b[39m\u001b[36m \u001b[39m\u001b[32mIn[4]\u001b[39m\u001b[32m, line 3\u001b[39m\n\u001b[32m      1\u001b[39m \u001b[38;5;66;03m# Alternate method, with geoJSON\u001b[39;00m\n\u001b[32m      2\u001b[39m path = \u001b[33m\"\u001b[39m\u001b[33m/path/to/geojson/\u001b[39m\u001b[33m\"\u001b[39m\n\u001b[32m----> \u001b[39m\u001b[32m3\u001b[39m region = \u001b[43msliderule\u001b[49m\u001b[43m.\u001b[49m\u001b[43mtoregion\u001b[49m\u001b[43m(\u001b[49m\u001b[43mpath\u001b[49m\u001b[43m)\u001b[49m[\u001b[33m\"\u001b[39m\u001b[33mpoly\u001b[39m\u001b[33m\"\u001b[39m]\n\u001b[32m      4\u001b[39m \u001b[38;5;28mprint\u001b[39m(region)\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/cookbook-dev/lib/python3.13/site-packages/sliderule/sliderule.py:658\u001b[39m, in \u001b[36mtoregion\u001b[39m\u001b[34m(source, tolerance, cellsize, n_clusters)\u001b[39m\n\u001b[32m    654\u001b[39m     datafile = gdf.to_json()\n\u001b[32m    656\u001b[39m \u001b[38;5;66;03m# Unsupported\u001b[39;00m\n\u001b[32m    657\u001b[39m \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[32m--> \u001b[39m\u001b[32m658\u001b[39m     \u001b[38;5;28;01mraise\u001b[39;00m FatalError(\u001b[33m\"\u001b[39m\u001b[33mincorrect filetype: please use a .geojson, .shp, or a geodataframe\u001b[39m\u001b[33m\"\u001b[39m)\n\u001b[32m    660\u001b[39m \u001b[38;5;66;03m# If user provided raster we don't have gdf, geopandas cannot easily convert it\u001b[39;00m\n\u001b[32m    661\u001b[39m polygon = clusters = \u001b[38;5;28;01mNone\u001b[39;00m\n\n\u001b[31mFatalError\u001b[39m: incorrect filetype: please use a .geojson, .shp, or a geodataframe","ename":"FatalError","evalue":"incorrect filetype: please use a .geojson, .shp, or a geodataframe"}],"key":"SulZOLTzzV"}],"key":"MrhEKaqExz"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Build SlideRule Request","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"FUt0dma64s"}],"identifier":"build-sliderule-request","label":"Build SlideRule Request","html_id":"build-sliderule-request","implicit":true,"key":"Yv0XUSAUMc"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Now we are going to build our SlideRule request by defining ICESat-2 parameters.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"y1D4v5VkLB"}],"key":"CU1m9LVzWP"},{"type":"paragraph","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Since we want something close to the ATL06 product, we will use the ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"J3VUGQYJLf"},{"type":"inlineCode","value":"icesat2.atl06p()","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"Hgd6EcCjMf"},{"type":"text","value":" function in this tutorial. You can find other SlideRule functions and more detail on the ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"Auo8KGYKeW"},{"type":"inlineCode","value":"icesat2.atl06p()","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"Tujord4PtX"},{"type":"text","value":" function on the SlideRule API reference. (TODO: Add link to API reference)","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"IA5rBM2RQM"}],"key":"kFBasjAC9s"},{"type":"paragraph","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"We won’t use every parameter in this tutorial, but here is a reference list for some of them. More information can be found in the SlideRule users guide (TODO: Add link to users guide)","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"THDs2L4q6M"}],"key":"lEtBWFPSmX"}],"key":"sM6RiPFQmo"},{"type":"block","kind":"notebook-content","children":[{"type":"admonition","kind":"note","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Parameters","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"VgrJ6G3ngm"}],"key":"J8JqkpfzzO"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":16,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"inlineCode","value":"poly","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"wMk6GAaFJ3"},{"type":"text","value":": Polygon defining region of interest.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"jyYouGuMYe"}],"key":"E52Vb9JiJr"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"inlineCode","value":"track","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"k5BqsX0dNw"},{"type":"text","value":": Reference pair track number (1, 2, 3; 0 to include all three; defaults to 0).","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"dThMSLTTP5"}],"key":"WLnuowT1Tc"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"inlineCode","value":"rgt","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"ASiPzH4zHm"},{"type":"text","value":": Reference ground track (defaults to all).","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"bUVq8JVPBF"}],"key":"ITt3BZN1nr"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"inlineCode","value":"cycle","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"wwxDr8Mh1E"},{"type":"text","value":": Counter of 91-day repeat cycles completed by the mission (defaults to all).","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"lKEWgS8KXy"}],"key":"gYdpkZMiSK"},{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"inlineCode","value":"region","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"GCaCvo6jBL"},{"type":"text","value":": Geographic region for data product (defaults to global).","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"DauQUqP5Jw"}],"key":"YkgV6F2J3Q"},{"type":"listItem","spread":true,"position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"inlineCode","value":"t0","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"y0sX8wnpb4"},{"type":"text","value":": Start time for filtering granules (%Y-%m%dT%h:%M:%SZ format)","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"WHXutS9qQW"}],"key":"WhrnCei6hC"},{"type":"listItem","spread":true,"position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"inlineCode","value":"t1","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"GIcygA5kVJ"},{"type":"text","value":": Stop time for filtering granules (%Y-%m%dT%h:%M:%SZ format).","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"dDRgsMPvCD"}],"key":"nhyGoIk9k8"},{"type":"listItem","spread":true,"position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"inlineCode","value":"srt","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"QAuVHsgeol"},{"type":"text","value":": Surface type (0=land, 1=ocean, 2=sea ice, 3=land ice, 4=inland water).","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"XkUgwThnTe"}],"key":"tX6CnbQUof"},{"type":"listItem","spread":true,"position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"inlineCode","value":"cnf","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"XHBTGtQIi1"},{"type":"text","value":": Confidence level for photon selection, in integer or list format.","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"Iy6Zn0SMZO"}],"key":"ZTobHzHiq0"},{"type":"listItem","spread":true,"position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"inlineCode","value":"atl08_class","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"onzDVHCnHi"},{"type":"text","value":": List of ATL08 classifications for photon processing (“atl08_noise”, “atl08_ground”, “atl08_canopy”, “atl08_top_of_canopy”, “atl08_unclassified”).","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"hpsGnRbGpS"}],"key":"JUW1GLOnQ8"},{"type":"listItem","spread":true,"position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"inlineCode","value":"maxi","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"TRLZphv5rF"},{"type":"text","value":": Maximum interations of algorithm, not including initial least-squares-fit selection.","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"Xp7ob88Aoe"}],"key":"EY5gf5i8vh"},{"type":"listItem","spread":true,"position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"inlineCode","value":"H_min_win","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"sBATRHAfD8"},{"type":"text","value":": Minimum height to which the refined photon-selection window is allowed to shrink, in meters.","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"siMzLzZMr0"}],"key":"BMkZ5nEufR"},{"type":"listItem","spread":true,"position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"inlineCode","value":"sigma_r_max","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"cPP0MGAira"},{"type":"text","value":": Maximum robust spread (uncertainty) in meters.","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"GKQ0B6sO3E"}],"key":"mulRRCPeSp"},{"type":"listItem","spread":true,"position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"children":[{"type":"inlineCode","value":"compact","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"xsjHgUewJI"},{"type":"text","value":": Return results without most metadata.","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"EkmWOLjurs"}],"key":"X5Kb9G8BBa"}],"key":"Ej70pm93y5"}],"key":"kpzymkbpN6"}],"key":"F6A9oSvywR"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"## Build SlideRule request\n# Define parameters (described below)\nparms = {\n    \"poly\": region,\n    \"srt\": icesat2.SRT_LAND,\n    \"cnf\": icesat2.CNF_SURFACE_HIGH,\n    \"atl08_class\": [\"atl08_ground\"],\n    \"ats\": 5.0,\n    \"len\": 20.0,\n    \"res\": 10.0,\n    \"maxi\": 5\n}\n\n# Calculated ATL06 dataframe\nis2_df = icesat2.atl06p(parms)\n\n# Print SlideRule output\nprint(is2_df.head())","key":"b84JE09IW5"},{"type":"output","id":"CYOlufxHDrtogd6_8-iW6","data":[],"key":"tMjbdhqRSX"}],"key":"mWjr9vJAvw"},{"type":"block","kind":"notebook-content","children":[{"type":"admonition","kind":"note","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Note","key":"K5hwNKpTFH"}],"key":"M1MT5mWHwp"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"We defined our ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"aGyYxXf5WV"},{"type":"inlineCode","value":"region","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"ArNeZVT9Mn"},{"type":"text","value":" above, so let’s run through the remaining parameters in our query:","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"kNJpjhjfXv"}],"key":"YZPXFNZavl"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":4,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"inlineCode","value":"srt","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"CG5Nl72zkj"},{"type":"text","value":": Only land photons will be considered.","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"QxCKaEBaie"}],"key":"AfEJKS26CF"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"inlineCode","value":"cnf","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"QUpJg0AHKB"},{"type":"text","value":": Only high-confidence photons.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"NFbuRmPT7c"}],"key":"ysnuNbftjl"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"inlineCode","value":"atl08_class","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"qJUN94sCpT"},{"type":"text","value":": Only ground photons, as identified by the ATL08 algorithm.","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"xmEEEKbVfQ"}],"key":"Yb0iqkaAD3"},{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"inlineCode","value":"ats","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"pb6fPSrnwP"},{"type":"text","value":": The maximum along-track spread (uncertainty) in aggregated photons will be 5 m.","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"xhYA5ldlMu"}],"key":"tLiVgZ9OUi"},{"type":"listItem","spread":true,"position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"inlineCode","value":"len","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"P7RK90siTb"},{"type":"text","value":": The length of each segment of aggregated photons will be 20 m.","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"TmlewsHV2W"}],"key":"qNqcPZemdj"},{"type":"listItem","spread":true,"position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"inlineCode","value":"res","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"N2P4Gv9NvM"},{"type":"text","value":": The along-track resolution will be 10 m. Because each segment will be 20 m long, there will be overlap between successive data points.","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"IQubWg6jsE"}],"key":"BptUnCiTcV"},{"type":"listItem","spread":true,"position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"inlineCode","value":"maxi","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"d0W0NZpwRM"},{"type":"text","value":": The SlideRule refinement algorithm will iterate 5 times per segment at maximum.","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"yZ5qE2X51v"}],"key":"pLCm0si6HK"}],"key":"CAinKEUou6"}],"key":"Ccjn6gcIJj"}],"key":"tOlsJkdr2D"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Subsetting the Data","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"oW3ye3Cld3"}],"identifier":"subsetting-the-data","label":"Subsetting the Data","html_id":"subsetting-the-data","implicit":true,"key":"ZFQVu9JgQG"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"One may notice that the algorithm took a long time to generate the GeoDataFrame. That is because (i) our region of interest was rather large and (ii) we obtained all ICESat-2 tracks in the ROI since its launch (2018).","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Db6q0wUrIG"}],"key":"PBt4iGjJwH"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"For the sake of interest, let’s take a look at all of the ICESat-2 tracks over Upper Kuparuk/Toolik.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"xguSn2VVWW"}],"key":"APiezXVkMi"}],"key":"OEn2JxBdDX"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"import contextily as ctx\nfrom shapely.geometry import Polygon\n\n# Convert region to a Polygon\ncoords = [(point[\"lon\"], point[\"lat\"]) for point in region]\npolygon = Polygon(coords)\nregion_gdf = gpd.GeoDataFrame([1], geometry=[polygon], crs=\"EPSG:4326\")\n\n# Reproject to Web Mercator for contextily\nis2_df_mercator = is2_df.to_crs(epsg=3857)\nregion_mercator = region_gdf.to_crs(epsg=3857)\n\n\nfig, ax = plt.subplots(figsize=(12, 8))\n# Plot surface height\nis2_df_mercator.plot(column='h_mean', \n                  ax=ax, \n                  cmap='viridis',\n                  legend=True,\n                  markersize=10,\n                  alpha=0.8)\n\n# Plot the region bounding box\nregion_mercator.plot(ax=ax, \n                     facecolor='none', \n                     edgecolor='red', \n                     linewidth=2)\n\n# Add ESRI World Imagery basemap\nctx.add_basemap(ax, \n                crs=is2_df_mercator.crs, \n                source=ctx.providers.Esri.WorldImagery)\nplt.tight_layout()\nplt.show()","key":"itCJqu9JZr"},{"type":"output","id":"Xtg8gffndC8Boq8A2_Nc4","data":[],"key":"wAKjx3pOb2"}],"key":"KHnxelFIQ4"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"It is cool to see all of the available data, but we only have snow-free lidar DEMs available from March 2022. So, we are going to subset the data to include one ICESat-2 track (","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ZAJsyCvlDK"},{"type":"strong","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"RGT 152","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"RoOCZHDvRS"}],"key":"TWL6JLyMGu"},{"type":"text","value":") in ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"LOzgVvzID5"},{"type":"strong","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"March 2023","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"K0ivDYF3iy"}],"key":"dLDLgcjAQy"},{"type":"text","value":".","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"dUBlOcCU0V"}],"key":"OhFTTdECkV"}],"key":"j7jnt62jz3"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Subset ICESat-2 data to single RGT, time of year\nis2_df_subset = is2_df[is2_df['rgt']==152]\nis2_df_subset = is2_df_subset.loc['2023-03-31']\n\n# Display top of dataframe\nprint(is2_df_subset.head())","key":"BWDysgA5Mj"},{"type":"output","id":"lzK73VvvS3V6h_FMCFvIG","data":[],"key":"K4D6Jv7YqK"}],"key":"WECI2miFm3"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Sample the Lidar DTM to ICESat-2 ground track","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"MNhLHf1bo9"}],"identifier":"sample-the-lidar-dtm-to-icesat-2-ground-track","label":"Sample the Lidar DTM to ICESat-2 ground track","html_id":"sample-the-lidar-dtm-to-icesat-2-ground-track","implicit":true,"key":"vcIQ1FAIFh"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"The ICESat-2 data is ready to go! Now it’s time to load the airborne lidar data, and co-register it with ICESat-2.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"CvkDfkaw7J"}],"key":"XeiO73lJqQ"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"The lidar data used here is from the University of Alaska, Fairbanks (UAF). The UAF lidar obtains snow-on and snow-off DEMs/digital terrain models (DTMs) with a 1064 nm (near-infrared) laser, from which it can also derive snow depth.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"IBtZwase59"}],"key":"Ar9N64Xfqv"},{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"UAF lidar rasters normally have a spatial resolution of 0.5 m, which can take a long time to process. As a compromise between computation speed and resolution, we will coarsen the rasters to 3 m resolution.","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"LeQfXjmjD2"}],"key":"OnSaTnWuRa"},{"type":"paragraph","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"The best way to handle lidar DEMs/DTMs is through ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"MiYPYxk7CZ"},{"type":"inlineCode","value":"rioxarray","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"jF9MqP632N"},{"type":"text","value":":","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"e9Whl04Jar"}],"key":"fprlIrEz8U"},{"type":"paragraph","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"TODO: Access UAF lidar data without needing it locally.","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"gTGRJznzRV"}],"key":"MZXgSqM9ts"}],"key":"rwbUTTpZWR"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"import earthaccess\nearthaccess.login(strategy='interactive', persist=True)\nauth = earthaccess.login()","key":"ZmRvevXJPG"},{"type":"output","id":"hiiA_11stE90snYluB0MF","data":[],"key":"JZq7B3VE3v"}],"key":"QuKkU4RCO7"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Coordinates for SW/NE corners\nlon_min = min([coord[0] for coord in coords])\nlat_min = min([coord[1] for coord in coords])\nlon_max = max([coord[0] for coord in coords])\nlat_max = max([coord[1] for coord in coords])\n\n# Data query for lidar point clouds over Fairbanks, AK\nresults = earthaccess.search_data(\n    short_name='SNEX23_Lidar',\n    bounding_box = (lon_min, lat_min, lon_max, lat_max),\n    temporal = ('2023-03-13', '2023-03-14')\n)","key":"H0BR4F0fna"},{"type":"output","id":"Zzp_2gdqDXxGsGcxg18x5","data":[],"key":"riFbQPXCkY"}],"key":"Xo94SPp998"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# File paths for UAF rasters (TODO: Add lidar files, and update names)\ntifpath = \"/your/path/here\"\nf_snow_off = f\"{tifpath}/uaf_lidar_snowoff.tif\"\nf_snow_on = f\"{tifpath}/uaf_lidar_snowon.tif\"\n\n# Load files as rioxarray datasets\nlidar_snow_off = rxr.open_rasterio(f_snow_off)\nlidar_snow_on = rxr.open_rasterio(f_snow_on)","key":"yEI9LU2BPA"},{"type":"output","id":"6Hdy9FBgrDQJcInTCilCv","data":[],"key":"vC5bxJTM7l"}],"key":"wNDrCq2xI1"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"It is not immediately obvious, but the uAF rasters are in a different spatial projection than ICESat-2. UAF is in ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Bk05pJPxxK"},{"type":"strong","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"EPSG:32606","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Oae4rMG8zY"}],"key":"kCeceV1WHK"},{"type":"text","value":", and ICESat-2 is in ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ZOMzXmb9lL"},{"type":"strong","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"WGS84/EPSG:4326","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"tu7ujvEMQa"}],"key":"YzoPNVn1qf"},{"type":"text","value":".","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"VjlC94altq"}],"key":"DNfo3vqahx"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"In order to directly compare these two datasets, we are going to add reprojected coordinates to the ICESat-2 GeoDataFrame. In essence, we will go from ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"TA51N8z60I"},{"type":"strong","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"latitude/longitude","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"SWOwQAAAm4"}],"key":"wNDsE5ZhnC"},{"type":"text","value":" to ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"i5GCt7dmVH"},{"type":"strong","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"northing/easting","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"fgLbQxXXTO"}],"key":"F7OfvdTr1K"},{"type":"text","value":". Luckily, there is an easy way to do this with GeoPandas, specifically with the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"sAaHT5tBUp"},{"type":"inlineCode","value":"geopandas.to_crs()","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"OfVf1lA71c"},{"type":"text","value":" function.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"YNxSJxhcky"}],"key":"CZs3mLWYaJ"}],"key":"bJaSn1eL9p"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Initialize ICESat-2 coordinate projection\nis2_df_subset = is2_df_subset.set_crs(\"EPSG:4326\")\n\n# Change to EPSG:32606\nis2_df_subset = is2_df_subset.to_crs(\"EPSG:32606\")\n\n# Display top of dataframe\nprint(is2_df_subset.head())","key":"GwbGbiqOKo"},{"type":"output","id":"D53fzZbAiJFhjVgjS1Fn0","data":[],"key":"lqLANu8YWy"}],"key":"J9vLn1l3Ta"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Co-register rasters and ICESat-2","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"OnDiGZrN8H"}],"identifier":"co-register-rasters-and-icesat-2","label":"Co-register rasters and ICESat-2","html_id":"co-register-rasters-and-icesat-2","implicit":true,"key":"xZMHhlspQM"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Now, we are going to co-register both rasters to the queried ICESat-2 data. The function below is fairly long, but the gist is that we a re using a spline interpolant to match both the snow-off UAF data (surface height) and UAF snow depths with ICESat-2 surface heights. The resulting GeoDataFrame will have both ICESat-2 and UAF data in it.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"RZcJ0gxvec"}],"key":"cv85mTeUq8"}],"key":"NkkU9cat4c"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Make coregistration function\ndef coregister_is2(lidar_snow_off, lidar_snow_on, is2_df):\n    \"\"\"\n    Co-registers UAF data with ICESat-2 data with a rectangular \n    bivariate spline.\n\n    Parameters\n    ------------\n    lidar_snow_off: rioxarray dataset\n        Lidar DEM/DTM in rioxarray format.\n    lidar_snow_on: rioxarray dataset\n        Lidar-derived snow depth in rioxarray format.\n    is2_df: GeodataFrame\n        GeoDataFrame for the ICESat-2 data generated with SlideRule.\n\n    Returns\n    ------------\n    is2_uaf_df: GeoDataFrame\n        Contains the coordinate and elevation data that matches best\n        between ICESat-2 and UAF.\n    \"\"\"\n\n    # Helper function to prepare lidar data\n    def prepare_lidar_data(raster):\n        coords_x = np.array(raster.x)\n        coords_y = np.array(raster.y)\n        values = np.array(raster.sel(band=1))[::-1, :]\n        values[np.isnan(values)] = -9999\n        return coords_x, coords_y, values\n\n    # Get coordinates and height/depth values from lidar data\n    x0, y0, dem_heights = prepare_lidar_data(lidar_snow_off)\n    xs, ys, dem_depths = prepare_lidar_data(lidar_snow_on)\n\n    # Generate interpolators\n    interp_height = RectBivariateSpline(y0[::-1], x0, dem_heights)\n    interp_height = RectBivariateSpline(ys[::-1], xs, dem_depths)\n\n    # Pre-filter IS2 data to bounds (apply once instead of per beam)\n    x_bounds = (is2_df.geometry.x > np.min(x0)) & (is2_df.geometry.x < np.max(x0))\n    y_bounds = (is2_df.geometry.y > np.min(y0)) & (is2_df.geometry.y < np.max(y0))\n    is2_filtered = is2_df[x_bounds & y_bounds].copy()\n\n    if is2_filtered.empty:\n        print('Error with GeoDataFrame or raster bounds.')\n        return gpd.GeoDataFrame()\n\n    # Extract coordinates once\n    xn = is2_filtered.geometry.x.values\n    yn = is2_filtered.geometry.y.values\n\n    # Estimate lidar height and snow depth at the ICESat-2 coordinates\n    lidar_heights = interp_height(yn, xn, grid=False)\n    lidar_snow_depths = interp_depth(yn, xn, grid=False)\n\n    # Create result DataFrame in one operation\n    is2_uaf_df = gpd.GeoDataFrame({\n        'x': xn,\n        'y': yn,\n        'time': is2_filtered.index.values,\n        'beam': is2_filtered['gt'].values,\n        'lidar_height': lidar_heights,\n        'lidar_snow_depth': lidar_snow_depths,\n        'is2_height': is2_filtered['h_mean'].values,\n        'h_sigma': is2_filtered['h_sigma'].values,\n        'dh_fit_dx': is2_filtered['dh_fit_dx'].values\n    })\n\n    # Add coordinate transformation\n    transformer = Transformer.from_crs(\"EPSG:32606\", \"EPSG:4326\", always_xy=True)\n    is2_uaf_df['lon'], is2_uaf_df['lat'] = transformer.transform(\n        is2_uaf_df['x'], is2_uaf_df['y']\n    )\n\n    return is2_uaf_df","key":"Ax7nKfCZaX"},{"type":"output","id":"wwNKzaoirKCIE-BC44Lvx","data":[],"key":"lpOXK8Ifrr"}],"key":"lnVxXL3bq3"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Co-locate ICESat-2 and UAF using the above function\nis2_uaf_df = coregister_is2(lidar_snow_off, \n                            lidar_snow_on, \n                            is2_df_subset\n                           )\n# Convert to a GeoDataFrame\ngeom = gpd.points_from_xy(is2_uaf_df.lon, is2_uaf_df.lat)\nis2_uaf_gdf = gpd.GeoDataFrame(is2_uaf_df,\n                               geometry=geom,\n                               crs=\"EPSG:4326\"\n                              )\n# Print head of GeoDataFrame\nis2_uaf_gdf.head()","key":"UTsf4AEB32"},{"type":"output","id":"HF--mg21a0jurwRTnj75w","data":[],"key":"Md7Rxy9zsp"}],"key":"BFOLoD2Yki"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"As one can see, we now have a GeoDataFrame that includes several useful variables:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"fKAjDubSVp"}],"key":"vxG4sk31XZ"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":2,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"inlineCode","value":"beam","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"ZHkT4lt5sN"},{"type":"text","value":": ICESat-2 beam (gt1l, gt2l, etc.)","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"wxNc44ztGb"}],"key":"NzSSr5V8k7"},{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"inlineCode","value":"lidar_height","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"CH3JCmK2kz"},{"type":"text","value":": Snow-off surface height from UAF lidar.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"P4vFr1AjcP"}],"key":"summjaXc9G"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"inlineCode","value":"lidar_snow_depth","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"U7sA2Y6Uxs"},{"type":"text","value":": Snow depth derived from UAF.","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"NglWJiIv6e"}],"key":"Vs5TaINloC"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"inlineCode","value":"is2_height","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"kYULa40Gsx"},{"type":"text","value":": ICESat-2 surface height (snow-on, in this case).","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"oFoYK8oiTt"}],"key":"fsywg9dxjn"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"inlineCode","value":"h_sigma","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"KG2ZRKBVeo"},{"type":"text","value":": ICESat-2 height uncertainty.","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"fECrpLJKGj"}],"key":"G1tcdwu0xJ"},{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"inlineCode","value":"dh_fit_dx","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"OwN8fOdNzW"},{"type":"text","value":": Along-track slope of the terrain.","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"yxjTYPHaRv"}],"key":"eduq0jTEQG"}],"key":"oQR6Hd5VpN"},{"type":"paragraph","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"With this GeoDataFrame, it is very simple to derive snow depth!","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"si7Af2GrKl"}],"key":"F7QykXVpg8"}],"key":"gwMqbLR3Y0"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Derive snow depth using snow-on/snow-off differencing\nis2_uaf_gdf['is2_snow_depth'] = is2_uaf_gdf['is2_height'] - is2_uaf_gdf['lidar_height']\n\n# Estimate the residual (bias) between IS-2 and UAF depths\nis2_uaf_gdf['snow_depth_residual'] = is2_uaf_gdf['is2_snow_depth'] - is2_uaf_gdf['lidar_snow_depth']","key":"fkhAFejnyX"},{"type":"output","id":"cpKvSyuR1xrVaNycMMF5F","data":[],"key":"pQbZcrpA2y"}],"key":"iniruHiBca"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Horray! We finally have ICESat-2 snow depths! Let’s make a couple of plots with the data we have.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Lg0APzJsXv"}],"key":"C5gXqjTnPU"}],"key":"yQ27E7igOI"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Map Plot","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"MtYH1dVndH"}],"identifier":"map-plot","label":"Map Plot","html_id":"map-plot","implicit":true,"key":"PAQLm5mvkC"}],"key":"QKS1ex12Ro"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Create plot\nfig, ax = plt.subplots(figsize=(12, 8))\n# Plot surface height\nis2_uaf_gdf.to_crs(\"EPSG:3857\").plot(column='is2_snow_depth', \n                  ax=ax, \n                  cmap='viridis',\n                  legend=True,\n                  markersize=10,\n                  alpha=0.8)\n\n# Plot the region bounding box\nregion_mercator.plot(ax=ax, \n                     facecolor='none', \n                     edgecolor='red', \n                     linewidth=2)\n\n# Add ESRI World Imagery basemap\nctx.add_basemap(ax, \n                crs=\"EPSG:3857\", \n                source=ctx.providers.Esri.WorldImagery)\nplt.tight_layout()\nplt.show()","key":"K467N0qWdY"},{"type":"output","id":"8DxGdQBv6X-hVwkkoYGH2","data":[],"key":"tmg7lrEgQ9"}],"key":"OEVQitElG9"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Along-track plots","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"tiwkWEAzGN"}],"identifier":"along-track-plots","label":"Along-track plots","html_id":"along-track-plots","implicit":true,"key":"nxfXXOztxC"}],"key":"R65KHTl4yz"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Plot snow depths for the three strong beams\nfig,axs = plt.subplots(3)\n\n#Left strong beam\ntmp_df = is2_uaf_gdf[is2_uaf_gdf['beam']==10]\naxs[0].plot(tmp_df['lat'], tmp_df['is2_snow_depth'], label='ICESat-2')\naxs[0].plot(tmp_df['lat'], tmp_df['lidar_snow_depth'], label='UAF')\naxs[0].set_title('gt1l')\naxs[0].legend()\n\n# Central strong beam\ntmp_df = is2_uaf_gdf[is2_uaf_gdf['beam']==30]\naxs[1].plot(tmp_df['lat'], tmp_df['is2_snow_depth'])\naxs[1].plot(tmp_df['lat'], tmp_df['lidar_snow_depth'])\naxs[1].set_ylabel('Snow depth [m]', fontsize=18)\naxs[1].set_title('gt2l')\n\n# Right strong beam\ntmp_df = is2_uaf_gdf[is2_uaf_gdf['beam']==50]\naxs[2].plot(tmp_df['lat'], tmp_df['is2_snow_depth'])\naxs[2].plot(tmp_df['lat'], tmp_df['lidar_snow_depth'])\naxs[2].set_xlabel('Latitude [m]', fontsize=18)\naxs[2].set_title('gt3l')\nplt.tight_layout()\n\n# Only include outer axis labels\nfor ax in axs:\n    ax.label_outer()\n    ax.set_ylim([0, 1.5])","key":"N2gWQiTXM8"},{"type":"output","id":"bCkrWFrpznmGkGS-FGWXv","data":[],"key":"kIcIm4jOXW"}],"key":"sdXwuLZ86R"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Scatter Plot","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Q08qf9N5Fa"}],"identifier":"scatter-plot","label":"Scatter Plot","html_id":"scatter-plot","implicit":true,"key":"IGOFSc6fst"}],"key":"uaUqNczyPM"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"fig, ax = plt.subplots(figsize=(12,6))\ns = is2_uaf_gpd.plot.scatter(ax=ax,\n                             x='lidar_snow_depth',\n                             y='is2_snow_depth',\n                             c='snow_depth_residual',\n                             vmin=-0.5, vmax=0.5\n                            )\nax.set_xlabel(\"UAF snow depth [m]\", fontsize=18)\nax.set_ylabel(\"ICESat-2 snow depth [m]\", fontsize=18)\nax.set_xlim([0, 1.5])\nax.set_ylim([0, 1.5])\ncbar = fig.colorbar(s, ax=ax)\ncbar.set_label(\"Snow depth residual [m]\")\nplt.tight_layout()","key":"F0GqlWog8z"},{"type":"output","id":"NMiqX8KYE8wblcfLGBH-I","data":[],"key":"DyxA4lpfF7"}],"key":"Ii9gTjPgxz"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Summary","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"BhDuSuwyhh"}],"identifier":"summary","label":"Summary","html_id":"summary","implicit":true,"key":"JD7QdHryDH"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"🎉 Congratulations! You have completed this tutorial and have seen how to compare ICESat-2 to raster data, how to obtain ICESat-2 data with SlideRule, and how to calculate snow depths from ICESat-2 data.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"jbU4KMUWGO"}],"key":"qQ3frvRk3S"}],"key":"kZKLM49lOL"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Reference","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"L9o9HUX9v0"}],"identifier":"reference","label":"Reference","html_id":"reference","implicit":true,"key":"nUTgTN8qj5"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"To further explore the topics of this tutorial, see the following detailed documentation: (TODO: ADD LINKS TO SITES AND PAPERS)","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"fNNW3Upqsi"}],"key":"cj6RkNrRot"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"SlideRule Website","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"gX6XXefDgR"}],"key":"gRyMWOMurY"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"SlideRule online demo","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"qPgtsz6m2e"}],"key":"YBcowUg4Pu"}],"key":"LkWepNZKSa"},{"type":"heading","depth":3,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Papers","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"oPy1vHarXB"}],"identifier":"papers","label":"Papers","html_id":"papers","implicit":true,"key":"vhkjlNlvB6"},{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Deems, Jeffrey S., et al. “Lidar Measurement of Snow Depth: A Review.” Journal of Glaciology, vol. 59, no. 215, 2013, pp. 467–79. ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"Q6XNuuXpG3"},{"type":"link","url":"http://DOI.org","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"DOI.org","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"by1K9iDvyP"}],"urlSource":"http://DOI.org","key":"e4MBj9RfiA"},{"type":"text","value":" (Crossref), ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"MgSN0ne9tI"},{"type":"cite","url":"https://doi.org/10.3189/2013JoG12J154","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Deems ","key":"kvfGjf3wdx"},{"type":"emphasis","children":[{"type":"text","value":"et al.","key":"fZpWYR1Pks"}],"key":"rf9XM8dA4n"},{"type":"text","value":" (2013)","key":"VSYiOGeANj"}],"kind":"narrative","label":"Deems_2013","identifier":"https://doi.org/10.3189/2013JoG12J154","enumerator":"1","key":"CVIJJj8V2D"},{"type":"text","value":".","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"uvqECT1RZU"}],"key":"pnijCGRmey"},{"type":"paragraph","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Nuth, C., and A. Kääb. “Co-Registration and Bias Corrections of Satellite Elevation Data Sets for Quantifying Glacier Thickness Change.” The Cryosphere, vol. 5, no. 1, Mar. 2011, pp. 271–90. ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"hqLuacpPwM"},{"type":"link","url":"http://DOI.org","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"DOI.org","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"mMLK3JotF7"}],"urlSource":"http://DOI.org","key":"JpVGljkgiQ"},{"type":"text","value":" (Crossref), ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"aKLg6DLCZA"},{"type":"cite","url":"https://doi.org/10.5194/tc-5-271-2011","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Nuth & Kääb (2011)","key":"G4T713daKA"}],"kind":"narrative","label":"Nuth_2011","identifier":"https://doi.org/10.5194/tc-5-271-2011","enumerator":"2","key":"uOnsPNknAR"},{"type":"text","value":".","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"ZuUbdwm5Ea"}],"key":"bEUqlpGhzJ"}],"key":"EiEZARCPY4"}],"key":"ulsrzoHYcm"},"references":{"cite":{"order":["Deems_2013","Nuth_2011"],"data":{"Deems_2013":{"label":"Deems_2013","enumerator":"1","doi":"10.3189/2013jog12j154","html":"Deems, J. S., Painter, T. H., & Finnegan, D. C. (2013). Lidar measurement of snow depth: a review. <i>Journal of Glaciology</i>, <i>59</i>(215), 467–479. <a target=\"_blank\" rel=\"noreferrer\" href=\"https://doi.org/10.3189/2013jog12j154\">10.3189/2013jog12j154</a>","url":"https://doi.org/10.3189/2013jog12j154"},"Nuth_2011":{"label":"Nuth_2011","enumerator":"2","doi":"10.5194/tc-5-271-2011","html":"Nuth, C., & Kääb, A. (2011). Co-registration and bias corrections of satellite elevation data sets for quantifying glacier thickness change. <i>The Cryosphere</i>, <i>5</i>(1), 271–290. <a target=\"_blank\" rel=\"noreferrer\" href=\"https://doi.org/10.5194/tc-5-271-2011\">10.5194/tc-5-271-2011</a>","url":"https://doi.org/10.5194/tc-5-271-2011"}}}},"footer":{"navigation":{"prev":{"title":"DRAFT: Bathymetry Applications","url":"/notebooks/bathymetry","group":"Example Workflows"},"next":{"title":"Awesome ICESat-2","url":"/additional-resources/awesome","group":"Additional Resources"}}},"domain":"http://localhost:3000"}