{"version":2,"kind":"Notebook","sha256":"165f37f0ca1086b5449de06df64564128ed4ae8f1bcca31e1f78f3a38a627995","slug":"notebooks.snowdepth","location":"/notebooks/snowdepth.ipynb","dependencies":[],"frontmatter":{"title":"Snow Depth Applications","content_includes_title":false,"kernelspec":{"name":"python3","display_name":"Python 3 (ipykernel)","language":"python"},"authors":[{"nameParsed":{"literal":"ICESat-2 team","given":"ICESat-2","family":"team"},"name":"ICESat-2 team","id":"contributors-myst-generated-uid-0"}],"open_access":true,"license":{"content":{"id":"CC-BY-4.0","url":"https://creativecommons.org/licenses/by/4.0/","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true},"code":{"id":"Apache-2.0","url":"https://opensource.org/licenses/Apache-2.0","name":"Apache License 2.0","free":true,"osi":true}},"github":"https://github.com/ICESAT-2HackWeek/icesat2-cookbook","copyright":"2025","affiliations":[{"id":"UAlbany","name":"University at Albany (SUNY)","department":"Atmospheric and Environmental Sciences","url":"https://www.albany.edu/daes"},{"id":"CISL","name":"NSF National Center for Atmospheric Research","department":"Computational and Information Systems Lab","url":"https://www.cisl.ucar.edu"},{"id":"Unidata","name":"NSF Unidata","url":"https://www.unidata.ucar.edu"},{"id":"Argonne","name":"Argonne National Laboratory","department":"Environmental Science Division","url":"https://www.anl.gov/evs"},{"id":"CarbonPlan","name":"CarbonPlan","url":"https://carbonplan.org"},{"id":"NVIDIA","name":"NVIDIA Corporation","url":"https://www.nvidia.com/"}],"numbering":{"title":{"offset":1}},"source_url":"https://github.com/ICESAT-2HackWeek/icesat2-cookbook/blob/main/notebooks/snowdepth.ipynb","edit_url":"https://github.com/ICESAT-2HackWeek/icesat2-cookbook/edit/main/notebooks/snowdepth.ipynb","exports":[{"format":"ipynb","filename":"snowdepth.ipynb","url":"/icesat2-cookbook/build/snowdepth-63d46400c54d5cd9ef9c3418e50c3ffe.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Author(s)","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"VknLuTb93q"}],"identifier":"author-s","label":"Author(s)","html_id":"author-s","implicit":true,"key":"KXfRYoOWjE"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Karina Zikan, Zach Fair","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"dkICXPIYp3"}],"key":"sREMhiIimc"},{"type":"heading","depth":2,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Learning Outcomes","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"XF7Efruv8V"}],"identifier":"learning-outcomes","label":"Learning Outcomes","html_id":"learning-outcomes","implicit":true,"key":"iYEq4avTE3"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":9,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":9,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"Gain experience in working with SlideRule to access and pre-process ICESat-2\ndata","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"z6inmVZzW9"}],"key":"lDphOKjBN2"}],"key":"M2UiHgd2Pc"},{"type":"listItem","spread":true,"position":{"start":{"line":11,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"Learn how to use projections and interpolation to compare ICESat-2 track data\nwith gridded raster products","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"RS0GsMb4EQ"}],"key":"zz7r6ftRYg"}],"key":"zNUNhOzacN"},{"type":"listItem","spread":true,"position":{"start":{"line":13,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"Develop a general understanding of how to measure snow depths with LiDAR,\nand learn about opportunities and challenges when using ICEsat-2 along-track\nproducts","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"P6d18dbyWZ"}],"key":"utY2K2AhH3"}],"key":"ftUuFSO5G8"}],"key":"RH5XcfGxZG"}],"key":"J6JpASIcpG"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Background","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"wtjlTRAI5B"}],"identifier":"background","label":"Background","html_id":"background","implicit":true,"key":"ZZZe1ZWNbY"},{"type":"heading","depth":3,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"How do we measure snow depth with LiDAR?","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"fwuaexZLem"}],"identifier":"how-do-we-measure-snow-depth-with-lidar","label":"How do we measure snow depth with LiDAR?","html_id":"how-do-we-measure-snow-depth-with-lidar","implicit":true,"key":"VOZUNeCz6n"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"LiDAR is a useful tool for collecting high resolution snow depth maps over large spatial areas.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"GMyc1IXEt4"}],"key":"zN6oxShQ7W"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Snow depth is measured from LiDAR by differencing a snow-free LiDAR map from a snow-covered LiDAR map of the same area of interest.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"HaYwSxV1fB"}],"key":"kHp6WOaaN8"}],"key":"SfqXYsXVTj"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"TODO: Insert Figure 6 from Deems et al. here","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Rvtl7mmoCe"}],"key":"dMZFR4FkCk"}],"key":"siPEeHazD0"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"TODO: Insert Figure 7b from Deems et al","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Qp0SvJWDSH"}],"key":"xhpIWPi5W8"}],"key":"udSHJH7Q80"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Can we do this with ICESat-2?","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"QlLDW0Sy2E"}],"identifier":"can-we-do-this-with-icesat-2","label":"Can we do this with ICESat-2?","html_id":"can-we-do-this-with-icesat-2","implicit":true,"key":"bO6pMPDKlb"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Yes! By differencing snow-covered ICESat-2 transects from snow-free maps, we can calculate snow depth!","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"EofM5pMTPv"}],"key":"syDen75X0R"},{"type":"paragraph","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Performing the calculation with ICESat-2 is a little different from other LiDAR snow depth methods, given that ICESat-2 is a transect of points rather than gridded raster data. ICESat-2 also has sparse coverage in the mid-latitudes, so generating an effective snow-covered or snow-free map will be difficult.","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"LsSNkcfXsi"}],"key":"w4l6IcHIiW"},{"type":"paragraph","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Because of these limitations, we need an independently-collected snow-free map of a region of interest for comparison. We also need to process the snow-free data into a form that can be differenced from snow-on ICESat-2 data.","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"BjVj8a9yHf"}],"key":"Vlswbfqp9F"},{"type":"paragraph","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"In this tutorial, we will show an example of how to compare ICESat-2 data to raster data.","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"KgjJMsAAXy"}],"key":"AsWm7Mi25H"}],"key":"Pho8LNQbsq"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"TODO: Add Karina’s image over Dry Creek","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"GTYXSF7tVW"}],"key":"iubHIg2ugk"}],"key":"jG6Nj6z88n"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"What do we need to calculate snow depth from ICESat-2?","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"sKw3FtWrFH"}],"identifier":"what-do-we-need-to-calculate-snow-depth-from-icesat-2","label":"What do we need to calculate snow depth from ICESat-2?","html_id":"what-do-we-need-to-calculate-snow-depth-from-icesat-2","implicit":true,"key":"IjOG8xutYK"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":2,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"A region of interest, where snow-free (and snow-covered, for validation) digital elevation models (DEMs) are available.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"X6ncJPuUsg"}],"key":"Ald6wZ7kCY"}],"key":"Hcq3qkzXG8"},{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"ICESat-2 data, ideally from one of the lower-level products (ATL03, ATL06, ATL08, Sliderule Earth).","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"KLWrQ7pjPs"}],"key":"Vs8patNxFY"}],"key":"zPl7KrUGUk"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"A snow-free reference DEM for the snow depth calculation.","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"yA5Vw9ffK5"}],"key":"FfUOXJorOW"}],"key":"o9EffqYXa7"}],"key":"tpZ5H9okud"}],"key":"utVUB62akS"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"What do we need to consider when comparing ICESat-2 and raster data?","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"oFh1JrDnom"}],"identifier":"what-do-we-need-to-consider-when-comparing-icesat-2-and-raster-data","label":"What do we need to consider when comparing ICESat-2 and raster data?","html_id":"what-do-we-need-to-consider-when-comparing-icesat-2-and-raster-data","implicit":true,"key":"GB1Kk3axkR"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"strong","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Geolocation","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"suJr1L3up2"}],"key":"Dtgi4o1oK8"},{"type":"text","value":": To obtain usable results, it is important that we properly align the snow-free raster data with ICESat-2. Even small offsets can create large errors that worsen in rugged terrain.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"bqGcwADJA7"}],"key":"V5z3JhMjLd"},{"type":"paragraph","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"TODO: Add Figure 9 from Nuth and Kabb","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"o7HkunCbGk"}],"key":"xLFPGQedz5"},{"type":"paragraph","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"strong","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Vegetation","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"eEAUEAL6MB"}],"key":"oCRq2nae45"},{"type":"text","value":": Incorrectly categorized vegetation returns can positively bias ground or snow surface height estimation. Additionally, dense vegetation can reduce the number of photon returns, thereby increasing uncertainty in our height estimates.","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"MD8btX7pSz"}],"key":"tnd5j9Wiu0"},{"type":"paragraph","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"strong","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Slope Effects","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"GY5rKuVXII"}],"key":"qCQ5W8bddV"},{"type":"text","value":": Rugged terrain increases uncertainty in ICESat-2 returns and increases the impact of geolocation offsets between ICESat-2 and raster data. Additionally, steep slopes can negatively bias ground or snow surface height estimates.","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"cSVn637AI7"}],"key":"lC6RjjWNpY"}],"key":"NjNAqO7VLi"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Computing Environment","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"WiaHCd69Pg"}],"identifier":"computing-environment","label":"Computing Environment","html_id":"computing-environment","implicit":true,"key":"DB9d0fJWkx"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"We’ll be using the following open source Python libraries in this notebook:","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"zSgnOskO23"}],"key":"I92jq5XNhh"}],"key":"ACke3PodlZ"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"import numpy as np\nimport pandas as pd\nimport geopandas as gpd\nimport rioxarray as rxr\nimport matplotlib.pyplot as plt\nfrom sliderule import icesat2, sliderule\nfrom scipy.interpolate import RectBivariateSpline","key":"qOQaDpS7g1"},{"type":"output","id":"-Zz7RJhk_GFZrCvdevpnF","data":[],"key":"VoCNZHXeqN"}],"key":"bHAoRbv3r6"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Data","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"XzytpBJMUo"}],"identifier":"data","label":"Data","html_id":"data","implicit":true,"key":"A7ol66PNnC"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"We will use SlideRule to acquire customized ATL06 data. Specific customizations that we will implement include footprint averaging (i.e., along-track sampling rate) and photon identification (signal/noise and ground/vegetation).","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"aLAcXZjTte"}],"key":"uPsilWIH5X"},{"type":"paragraph","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"We will look at snow depth data over Upper Kuparuk/Toolik (UKT) on the Arctic North Slope of Alaska. Because UKT is a relatively flat region with little vegetation, we should expect good agreement between ICESat-2 and our rasters of interest.","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"NY88nzG3lK"}],"key":"DStvl6Zdvi"}],"key":"YrfOtY4tZ5"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Initialize SlideRule","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"nu08dCTXj9"}],"identifier":"initialize-sliderule","label":"Initialize SlideRule","html_id":"initialize-sliderule","implicit":true,"key":"YZpbW9qbNu"}],"key":"FhNiESnsYb"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"icesat2.init(\"slideruleearth.io\")","key":"hRjer2j48l"},{"type":"output","id":"UkCYLcklAUaUdAPgBgcYd","data":[],"key":"vzRWgWJR4K"}],"key":"nz4ByKNJ1d"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Define Region of Interest","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"eW730f8TVM"}],"identifier":"define-region-of-interest","label":"Define Region of Interest","html_id":"define-region-of-interest","implicit":true,"key":"WhQ8U8xSIb"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"After we initialize SlideRule, we define our region of interest. Notice that there are two options given below. This is because SlideRule accepts either the coordinates of a box/polygon or a geoJSON for its ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"JqQmMfw4X2"},{"type":"inlineCode","value":"region","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"INdccddgFh"},{"type":"text","value":" input.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"BX5AFefKsj"}],"key":"pqGoFLlKCc"},{"type":"paragraph","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"We are going to use the bounding box method in this tutorial, but the syntax for the geoJSON method is included for the user’s reference.","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"OyT0pkuYmH"}],"key":"P4IfCndD8x"}],"key":"U4L7auKI1y"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Define region of interest over Toolik, Alaska\nregion = [{\"lon\":-149.5992624418217, \"lat\":68.63358948385529}, \n          {\"lon\":-149.5954459662985, \"lat\":68.60200878043223}, \n          {\"lon\":-149.2821268688734, \"lat\":68.60675802967609}, \n          {\"lon\":-149.2855031235162, \"lat\":68.63834638180673},\n          {\"lon\":-149.5992624418217, \"lat\":68.63358948385529}]\n\nprint(region)","key":"d979HfI3BI"},{"type":"output","id":"GGPdJ4me1PdVyvSTyw_or","data":[{"output_type":"stream","name":"stdout","text":"[{'lon': -149.5992624418217, 'lat': 68.63358948385529}, {'lon': -149.5954459662985, 'lat': 68.60200878043223}, {'lon': -149.2821268688734, 'lat': 68.60675802967609}, {'lon': -149.2855031235162, 'lat': 68.63834638180673}, {'lon': -149.5992624418217, 'lat': 68.63358948385529}]\n"}],"key":"GHQUy5a2nD"}],"key":"UNFC6D55sf"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Alternate method, with geoJSON\npath = \"/path/to/geojson/\"\nregion = sliderule.toregion(path)[\"poly\"]\nprint(region)","key":"sBhg46NLkA"},{"type":"output","id":"sgB8MKA-bGwNpohjuPdt-","data":[{"output_type":"error","traceback":"\u001b[31m---------------------------------------------------------------------------\u001b[39m\n\u001b[31mFatalError\u001b[39m                                Traceback (most recent call last)\n\u001b[36mCell\u001b[39m\u001b[36m \u001b[39m\u001b[32mIn[4]\u001b[39m\u001b[32m, line 3\u001b[39m\n\u001b[32m      1\u001b[39m \u001b[38;5;66;03m# Alternate method, with geoJSON\u001b[39;00m\n\u001b[32m      2\u001b[39m path = \u001b[33m\"\u001b[39m\u001b[33m/path/to/geojson/\u001b[39m\u001b[33m\"\u001b[39m\n\u001b[32m----> \u001b[39m\u001b[32m3\u001b[39m region = \u001b[43msliderule\u001b[49m\u001b[43m.\u001b[49m\u001b[43mtoregion\u001b[49m\u001b[43m(\u001b[49m\u001b[43mpath\u001b[49m\u001b[43m)\u001b[49m[\u001b[33m\"\u001b[39m\u001b[33mpoly\u001b[39m\u001b[33m\"\u001b[39m]\n\u001b[32m      4\u001b[39m \u001b[38;5;28mprint\u001b[39m(region)\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/cookbook-dev/lib/python3.13/site-packages/sliderule/sliderule.py:658\u001b[39m, in \u001b[36mtoregion\u001b[39m\u001b[34m(source, tolerance, cellsize, n_clusters)\u001b[39m\n\u001b[32m    654\u001b[39m     datafile = gdf.to_json()\n\u001b[32m    656\u001b[39m \u001b[38;5;66;03m# Unsupported\u001b[39;00m\n\u001b[32m    657\u001b[39m \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[32m--> \u001b[39m\u001b[32m658\u001b[39m     \u001b[38;5;28;01mraise\u001b[39;00m FatalError(\u001b[33m\"\u001b[39m\u001b[33mincorrect filetype: please use a .geojson, .shp, or a geodataframe\u001b[39m\u001b[33m\"\u001b[39m)\n\u001b[32m    660\u001b[39m \u001b[38;5;66;03m# If user provided raster we don't have gdf, geopandas cannot easily convert it\u001b[39;00m\n\u001b[32m    661\u001b[39m polygon = clusters = \u001b[38;5;28;01mNone\u001b[39;00m\n\n\u001b[31mFatalError\u001b[39m: incorrect filetype: please use a .geojson, .shp, or a geodataframe","ename":"FatalError","evalue":"incorrect filetype: please use a .geojson, .shp, or a geodataframe"}],"key":"OZ4o5DJT54"}],"key":"mzpKYv6XLP"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Build SlideRule Request","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"tI9edCf8nb"}],"identifier":"build-sliderule-request","label":"Build SlideRule Request","html_id":"build-sliderule-request","implicit":true,"key":"QdBSHmOMQX"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Now we are going to build our SlideRule request by defining ICESat-2 parameters.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"Gy58hliK4q"}],"key":"Vbx9z4rlKD"},{"type":"paragraph","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Since we want something close to the ATL06 product, we will use the ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"E3SWybZNmi"},{"type":"inlineCode","value":"icesat2.atl06p()","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"HRHQWkaCqO"},{"type":"text","value":" function in this tutorial. You can find other SlideRule functions and more detail on the ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"cnc7v7mwku"},{"type":"inlineCode","value":"icesat2.atl06p()","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"XsxbRTylYm"},{"type":"text","value":" function on the SlideRule API reference. (TODO: Add link to API reference)","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"SaIxEuELYT"}],"key":"Wrv0IMQfU0"},{"type":"paragraph","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"We won’t use every parameter in this tutorial, but here is a reference list for some of them. More information can be found in the SlideRule users guide (TODO: Add link to users guide)","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"mCmSQdW1ZY"}],"key":"VpnFazAOlU"}],"key":"k3ecGTjIRN"},{"type":"block","kind":"notebook-content","children":[{"type":"admonition","kind":"note","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Parameters","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"qyXV3MfuOa"}],"key":"b6WylAiMTV"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":16,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"poly","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"bTraZjr07n"},{"type":"text","value":": Polygon defining region of interest.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"ZZNh0JuGxW"}],"key":"OGKxp9YmE1"}],"key":"ZHmT8nrm95"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"track","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"VlwSQ4SdIo"},{"type":"text","value":": Reference pair track number (1, 2, 3; 0 to include all three; defaults to 0).","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"Byagx1awB8"}],"key":"XK8RFyjgNs"}],"key":"kmJnk2YkDM"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"rgt","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"CE5UfNgSR8"},{"type":"text","value":": Reference ground track (defaults to all).","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"nFW9crdXCk"}],"key":"U0AgCexw4c"}],"key":"k3vlyFXvQ9"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"cycle","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"NJkKQ6LKdS"},{"type":"text","value":": Counter of 91-day repeat cycles completed by the mission (defaults to all).","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"HSrptTN2Zq"}],"key":"Hxqj4ZijuQ"}],"key":"Z4sszTRBgV"},{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"region","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"bK1f8DwRZB"},{"type":"text","value":": Geographic region for data product (defaults to global).","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"EzaHaPTkj7"}],"key":"fwQsuuBFBW"}],"key":"mGlQF4PoQY"},{"type":"listItem","spread":true,"position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"t0","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"m0wFYABXCI"},{"type":"text","value":": Start time for filtering granules (%Y-%m%dT%h:%M:%SZ format)","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"YSPqoneTE0"}],"key":"bcQfYSFlWP"}],"key":"ouBwN4mDXx"},{"type":"listItem","spread":true,"position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"t1","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"UBB0KgPc0W"},{"type":"text","value":": Stop time for filtering granules (%Y-%m%dT%h:%M:%SZ format).","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"PwW2g4FxrA"}],"key":"p2L7Ughqv2"}],"key":"hKq9CQMWPv"},{"type":"listItem","spread":true,"position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"srt","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"M3rv6p8lWZ"},{"type":"text","value":": Surface type (0=land, 1=ocean, 2=sea ice, 3=land ice, 4=inland water).","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"GJgdvTmAZX"}],"key":"ZYbyq01Odk"}],"key":"YIzmrHHAHp"},{"type":"listItem","spread":true,"position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"cnf","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"qqtZTmeMBr"},{"type":"text","value":": Confidence level for photon selection, in integer or list format.","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"aUacXqK4Yj"}],"key":"dXWNmK7qxl"}],"key":"yFCmdUFBI9"},{"type":"listItem","spread":true,"position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"atl08_class","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"CDqRO53auy"},{"type":"text","value":": List of ATL08 classifications for photon processing (“atl08_noise”, “atl08_ground”, “atl08_canopy”, “atl08_top_of_canopy”, “atl08_unclassified”).","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"LuTYf7RqAI"}],"key":"gCVTD7Qrsf"}],"key":"soaBr4w34K"},{"type":"listItem","spread":true,"position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"maxi","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"qeOclEKFnm"},{"type":"text","value":": Maximum interations of algorithm, not including initial least-squares-fit selection.","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"Kmsb17swM3"}],"key":"yoURaJa3oc"}],"key":"RhHHkGn3lF"},{"type":"listItem","spread":true,"position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"H_min_win","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"BDb7wLzP5l"},{"type":"text","value":": Minimum height to which the refined photon-selection window is allowed to shrink, in meters.","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"W5gbqjx4Vy"}],"key":"g8vb3H5OE3"}],"key":"ohYMf4j11y"},{"type":"listItem","spread":true,"position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"sigma_r_max","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"aFZ7vrexpO"},{"type":"text","value":": Maximum robust spread (uncertainty) in meters.","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"ysxvwxaywh"}],"key":"qxrYnNXvc7"}],"key":"g3soKMdAsU"},{"type":"listItem","spread":true,"position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"compact","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"eJOzn7CYyB"},{"type":"text","value":": Return results without most metadata.","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"ggK8QdsN15"}],"key":"lwCAzFtXL5"}],"key":"OE0VfHKKDZ"}],"key":"BF20NZU261"}],"key":"rds0KEVJoZ"}],"key":"mkLqMRtEVp"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"## Build SlideRule request\n# Define parameters (described below)\nparms = {\n    \"poly\": region,\n    \"srt\": icesat2.SRT_LAND,\n    \"cnf\": icesat2.CNF_SURFACE_HIGH,\n    \"atl08_class\": [\"atl08_ground\"],\n    \"ats\": 5.0,\n    \"len\": 20.0,\n    \"res\": 10.0,\n    \"maxi\": 5\n}\n\n# Calculated ATL06 dataframe\nis2_df = icesat2.atl06p(parms)\n\n# Print SlideRule output\nprint(is2_df.head())","key":"VjrpjngNs5"},{"type":"output","id":"8G9ZD192mUkNPl_4ddjni","data":[],"key":"EaFMOGaVVW"}],"key":"BzHxhQ0qMD"},{"type":"block","kind":"notebook-content","children":[{"type":"admonition","kind":"note","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Note","key":"GMi1Ni33UL"}],"key":"DJfUwVr1hB"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"We defined our ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"tUrEQ0E39t"},{"type":"inlineCode","value":"region","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"x5UsbaoEH9"},{"type":"text","value":" above, so let’s run through the remaining parameters in our query:","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"k8LLfMBgPY"}],"key":"XEbFHi6oGX"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":4,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"srt","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"JynGFTpfS8"},{"type":"text","value":": Only land photons will be considered.","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"pUUo7EfxFE"}],"key":"Nnq1xs4I6K"}],"key":"bZCxFqCSia"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"cnf","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"sqZcjPr6j7"},{"type":"text","value":": Only high-confidence photons.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"LuxrLVpvGc"}],"key":"tNWnBRSkU5"}],"key":"LuThwo5cWS"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"atl08_class","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"eSYK6CPzwM"},{"type":"text","value":": Only ground photons, as identified by the ATL08 algorithm.","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"jJIykEq4jk"}],"key":"s0BxQ8S5x2"}],"key":"eECUDkwjAK"},{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"ats","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"hckOehtkJn"},{"type":"text","value":": The maximum along-track spread (uncertainty) in aggregated photons will be 5 m.","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"qBcIfiie9e"}],"key":"dS0m7RMM6B"}],"key":"rpqCcTo7N3"},{"type":"listItem","spread":true,"position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"len","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"ZGZ5zXjrUo"},{"type":"text","value":": The length of each segment of aggregated photons will be 20 m.","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"NiFovNZehs"}],"key":"mtp9SLglJS"}],"key":"c2PRvdz88K"},{"type":"listItem","spread":true,"position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"res","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"YKzmuMboZH"},{"type":"text","value":": The along-track resolution will be 10 m. Because each segment will be 20 m long, there will be overlap between successive data points.","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"h0Qr8sXixb"}],"key":"Q3D9pFUH6s"}],"key":"a6WPTSTIHE"},{"type":"listItem","spread":true,"position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"maxi","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"iziB52kKEi"},{"type":"text","value":": The SlideRule refinement algorithm will iterate 5 times per segment at maximum.","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"CtvbR8vR1v"}],"key":"ZGZUyQkUgS"}],"key":"LTvJ5xRRO6"}],"key":"eEp1mvGebb"}],"key":"VntVcpzFCo"}],"key":"rp1y41cN5V"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Subsetting the Data","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"PPDvoc0cI0"}],"identifier":"subsetting-the-data","label":"Subsetting the Data","html_id":"subsetting-the-data","implicit":true,"key":"poqQgO7iFq"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"One may notice that the algorithm took a long time to generate the GeoDataFrame. That is because (i) our region of interest was rather large and (ii) we obtained all ICESat-2 tracks in the ROI since its launch (2018).","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"XCy19BI95z"}],"key":"dzZxs4eDW6"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"For the sake of interest, let’s take a look at all of the ICESat-2 tracks over Upper Kuparuk/Toolik.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"EL74vEYIos"}],"key":"Gs4N3OpZPn"}],"key":"io0FjVGV2q"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"import contextily as ctx\nfrom shapely.geometry import Polygon\n\n# Convert region to a Polygon\ncoords = [(point[\"lon\"], point[\"lat\"]) for point in region]\npolygon = Polygon(coords)\nregion_gdf = gpd.GeoDataFrame([1], geometry=[polygon], crs=\"EPSG:4326\")\n\n# Reproject to Web Mercator for contextily\nis2_df_mercator = is2_df.to_crs(epsg=3857)\nregion_mercator = region_gdf.to_crs(epsg=3857)\n\n\nfig, ax = plt.subplots(figsize=(12, 8))\n# Plot surface height\nis2_df_mercator.plot(column='h_mean', \n                  ax=ax, \n                  cmap='viridis',\n                  legend=True,\n                  markersize=10,\n                  alpha=0.8)\n\n# Plot the region bounding box\nregion_mercator.plot(ax=ax, \n                     facecolor='none', \n                     edgecolor='red', \n                     linewidth=2)\n\n# Add ESRI World Imagery basemap\nctx.add_basemap(ax, \n                crs=is2_df_mercator.crs, \n                source=ctx.providers.Esri.WorldImagery)\nplt.tight_layout()\nplt.show()","key":"YsTESTS5ju"},{"type":"output","id":"XD_z4GPCvqBQl8TdlNovS","data":[],"key":"QS40yvgTTH"}],"key":"LkXyJiQMLv"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"It is cool to see all of the available data, but we only have snow-free lidar DEMs available from March 2022. So, we are going to subset the data to include one ICESat-2 track (","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"PHzax1rLJ5"},{"type":"strong","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"RGT 152","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ID1BozSuev"}],"key":"Wj9fRD28J3"},{"type":"text","value":") in ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"TrYAtCmv0n"},{"type":"strong","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"March 2023","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"J74OJ7fVAC"}],"key":"XnC4Ff5nvL"},{"type":"text","value":".","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"xmp1IKbtrB"}],"key":"fr0tdq4WKR"}],"key":"ggn7xD8WlD"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Subset ICESat-2 data to single RGT, time of year\nis2_df_subset = is2_df[is2_df['rgt']==152]\nis2_df_subset = is2_df_subset.loc['2023-03-31']\n\n# Display top of dataframe\nprint(is2_df_subset.head())","key":"iC6gouL4CD"},{"type":"output","id":"zvQeXKIil3a0cwZCzF-Lt","data":[],"key":"PXsnzgDqW0"}],"key":"QmeWqLDwoi"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Sample the Lidar DTM to ICESat-2 ground track","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"a1r5c6o4Ic"}],"identifier":"sample-the-lidar-dtm-to-icesat-2-ground-track","label":"Sample the Lidar DTM to ICESat-2 ground track","html_id":"sample-the-lidar-dtm-to-icesat-2-ground-track","implicit":true,"key":"RRTOAoxYBT"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"The ICESat-2 data is ready to go! Now it’s time to load the airborne lidar data, and co-register it with ICESat-2.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"ClvzOtdfwG"}],"key":"NUoVSDkz34"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"The lidar data used here is from the University of Alaska, Fairbanks (UAF). The UAF lidar obtains snow-on and snow-off DEMs/digital terrain models (DTMs) with a 1064 nm (near-infrared) laser, from which it can also derive snow depth.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"cQoRS3wLiM"}],"key":"ZAtapTPk2Q"},{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"UAF lidar rasters normally have a spatial resolution of 0.5 m, which can take a long time to process. As a compromise between computation speed and resolution, we will coarsen the rasters to 3 m resolution.","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"RuSwZyncPd"}],"key":"RmA9uFuWy6"},{"type":"paragraph","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"The best way to handle lidar DEMs/DTMs is through ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"NNS4HbtvjO"},{"type":"inlineCode","value":"rioxarray","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"JhiF3dXa4B"},{"type":"text","value":":","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"tOeZVXHleM"}],"key":"aJDgi4yCIM"},{"type":"paragraph","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"TODO: Access UAF lidar data without needing it locally.","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"oc5BgArPOy"}],"key":"uGFWWkC7dX"}],"key":"ZdC7NWedGo"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"import earthaccess\nearthaccess.login(strategy='interactive', persist=True)\nauth = earthaccess.login()","key":"BVJ35GcF0U"},{"type":"output","id":"kswLOQCektc4qJuE1KIsr","data":[],"key":"DRIWsrqJVe"}],"key":"PoL6sTVe3n"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Coordinates for SW/NE corners\nlon_min = min([coord[0] for coord in coords])\nlat_min = min([coord[1] for coord in coords])\nlon_max = max([coord[0] for coord in coords])\nlat_max = max([coord[1] for coord in coords])\n\n# Data query for lidar point clouds over Fairbanks, AK\nresults = earthaccess.search_data(\n    short_name='SNEX23_Lidar',\n    bounding_box = (lon_min, lat_min, lon_max, lat_max),\n    temporal = ('2023-03-13', '2023-03-14')\n)","key":"OpirKzRunb"},{"type":"output","id":"lzJW2d3GUEpIw8LndOS2z","data":[],"key":"pxpgVND90e"}],"key":"Ja7O3bKLRm"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# File paths for UAF rasters (TODO: Add lidar files, and update names)\ntifpath = \"/your/path/here\"\nf_snow_off = f\"{tifpath}/uaf_lidar_snowoff.tif\"\nf_snow_on = f\"{tifpath}/uaf_lidar_snowon.tif\"\n\n# Load files as rioxarray datasets\nlidar_snow_off = rxr.open_rasterio(f_snow_off)\nlidar_snow_on = rxr.open_rasterio(f_snow_on)","key":"nKNGWxwSZi"},{"type":"output","id":"TDhZQtBCIP0HoXgCrB6I5","data":[],"key":"gZpjIHNOU1"}],"key":"vXfpdfxi7O"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"It is not immediately obvious, but the uAF rasters are in a different spatial projection than ICESat-2. UAF is in ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"SEiRSbFL88"},{"type":"strong","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"EPSG:32606","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"TruKwF3SkC"}],"key":"pyNQDQtA0Q"},{"type":"text","value":", and ICESat-2 is in ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"nKxOpREyBB"},{"type":"strong","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"WGS84/EPSG:4326","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"bA9GWu8vOy"}],"key":"VbYYHx4aW9"},{"type":"text","value":".","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"rB1yjquYpp"}],"key":"Mnk0LdG0nF"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"In order to directly compare these two datasets, we are going to add reprojected coordinates to the ICESat-2 GeoDataFrame. In essence, we will go from ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"h3uBvPFTtV"},{"type":"strong","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"latitude/longitude","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"IoZwlAYZa7"}],"key":"JydA47MmUT"},{"type":"text","value":" to ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"ijdzJC68dc"},{"type":"strong","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"northing/easting","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"CZ88vvWJPe"}],"key":"bt3VZudQxf"},{"type":"text","value":". Luckily, there is an easy way to do this with GeoPandas, specifically with the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Wk3PtvHh0W"},{"type":"inlineCode","value":"geopandas.to_crs()","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"uWBpEMrZtr"},{"type":"text","value":" function.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"t42dTn3iEs"}],"key":"GEfxhYYq0D"}],"key":"hWzpZneOFD"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Initialize ICESat-2 coordinate projection\nis2_df_subset = is2_df_subset.set_crs(\"EPSG:4326\")\n\n# Change to EPSG:32606\nis2_df_subset = is2_df_subset.to_crs(\"EPSG:32606\")\n\n# Display top of dataframe\nprint(is2_df_subset.head())","key":"Pkf3hyMSFS"},{"type":"output","id":"VoGE6-STTfcZqI_1vR_ua","data":[],"key":"x7seZjbq7c"}],"key":"umHZrzE3te"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Co-register rasters and ICESat-2","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"pldcDoY2nm"}],"identifier":"co-register-rasters-and-icesat-2","label":"Co-register rasters and ICESat-2","html_id":"co-register-rasters-and-icesat-2","implicit":true,"key":"WiQYXoHCOR"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Now, we are going to co-register both rasters to the queried ICESat-2 data. The function below is fairly long, but the gist is that we a re using a spline interpolant to match both the snow-off UAF data (surface height) and UAF snow depths with ICESat-2 surface heights. The resulting GeoDataFrame will have both ICESat-2 and UAF data in it.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"sz0DSpWbzS"}],"key":"LJlX72y7vz"}],"key":"KckUG5oMDU"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Make coregistration function\ndef coregister_is2(lidar_snow_off, lidar_snow_on, is2_df):\n    \"\"\"\n    Co-registers UAF data with ICESat-2 data with a rectangular \n    bivariate spline.\n\n    Parameters\n    ------------\n    lidar_snow_off: rioxarray dataset\n        Lidar DEM/DTM in rioxarray format.\n    lidar_snow_on: rioxarray dataset\n        Lidar-derived snow depth in rioxarray format.\n    is2_df: GeodataFrame\n        GeoDataFrame for the ICESat-2 data generated with SlideRule.\n\n    Returns\n    ------------\n    is2_uaf_df: GeoDataFrame\n        Contains the coordinate and elevation data that matches best\n        between ICESat-2 and UAF.\n    \"\"\"\n\n    # Helper function to prepare lidar data\n    def prepare_lidar_data(raster):\n        coords_x = np.array(raster.x)\n        coords_y = np.array(raster.y)\n        values = np.array(raster.sel(band=1))[::-1, :]\n        values[np.isnan(values)] = -9999\n        return coords_x, coords_y, values\n\n    # Get coordinates and height/depth values from lidar data\n    x0, y0, dem_heights = prepare_lidar_data(lidar_snow_off)\n    xs, ys, dem_depths = prepare_lidar_data(lidar_snow_on)\n\n    # Generate interpolators\n    interp_height = RectBivariateSpline(y0[::-1], x0, dem_heights)\n    interp_height = RectBivariateSpline(ys[::-1], xs, dem_depths)\n\n    # Pre-filter IS2 data to bounds (apply once instead of per beam)\n    x_bounds = (is2_df.geometry.x > np.min(x0)) & (is2_df.geometry.x < np.max(x0))\n    y_bounds = (is2_df.geometry.y > np.min(y0)) & (is2_df.geometry.y < np.max(y0))\n    is2_filtered = is2_df[x_bounds & y_bounds].copy()\n\n    if is2_filtered.empty:\n        print('Error with GeoDataFrame or raster bounds.')\n        return gpd.GeoDataFrame()\n\n    # Extract coordinates once\n    xn = is2_filtered.geometry.x.values\n    yn = is2_filtered.geometry.y.values\n\n    # Estimate lidar height and snow depth at the ICESat-2 coordinates\n    lidar_heights = interp_height(yn, xn, grid=False)\n    lidar_snow_depths = interp_depth(yn, xn, grid=False)\n\n    # Create result DataFrame in one operation\n    is2_uaf_df = gpd.GeoDataFrame({\n        'x': xn,\n        'y': yn,\n        'time': is2_filtered.index.values,\n        'beam': is2_filtered['gt'].values,\n        'lidar_height': lidar_heights,\n        'lidar_snow_depth': lidar_snow_depths,\n        'is2_height': is2_filtered['h_mean'].values,\n        'h_sigma': is2_filtered['h_sigma'].values,\n        'dh_fit_dx': is2_filtered['dh_fit_dx'].values\n    })\n\n    # Add coordinate transformation\n    transformer = Transformer.from_crs(\"EPSG:32606\", \"EPSG:4326\", always_xy=True)\n    is2_uaf_df['lon'], is2_uaf_df['lat'] = transformer.transform(\n        is2_uaf_df['x'], is2_uaf_df['y']\n    )\n\n    return is2_uaf_df","key":"m2Olni41sk"},{"type":"output","id":"QhQEaoRWS4XevbE4go-Nd","data":[],"key":"guMaRJGfPc"}],"key":"EfBlpXsFUC"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Co-locate ICESat-2 and UAF using the above function\nis2_uaf_df = coregister_is2(lidar_snow_off, \n                            lidar_snow_on, \n                            is2_df_subset\n                           )\n# Convert to a GeoDataFrame\ngeom = gpd.points_from_xy(is2_uaf_df.lon, is2_uaf_df.lat)\nis2_uaf_gdf = gpd.GeoDataFrame(is2_uaf_df,\n                               geometry=geom,\n                               crs=\"EPSG:4326\"\n                              )\n# Print head of GeoDataFrame\nis2_uaf_gdf.head()","key":"JRwR7XFHHU"},{"type":"output","id":"Am3cJwANiKfWnrbVV6qCU","data":[],"key":"UggjrPyk9y"}],"key":"jjvvjAGt5J"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"As one can see, we now have a GeoDataFrame that includes several useful variables:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"vdbbxQgig9"}],"key":"fnx1ehtJ1y"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":2,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"beam","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"sG2YdVoxgv"},{"type":"text","value":": ICESat-2 beam (gt1l, gt2l, etc.)","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"WwMYQPpBXw"}],"key":"k92rbmgqJt"}],"key":"nNfNmd02Vs"},{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"lidar_height","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"osMsn1rPcj"},{"type":"text","value":": Snow-off surface height from UAF lidar.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"TJmzSi486w"}],"key":"rGi2i7p3u9"}],"key":"BQf8QFZYZr"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"lidar_snow_depth","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"p1ws6Dqmr3"},{"type":"text","value":": Snow depth derived from UAF.","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"TdDxVU3ih7"}],"key":"p2nwiG1kQH"}],"key":"XvNEYe24Oz"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"is2_height","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"NM1euEUJHE"},{"type":"text","value":": ICESat-2 surface height (snow-on, in this case).","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"TL7nYZzcCY"}],"key":"tR3uSwISlD"}],"key":"Qb9fpg9gdv"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"h_sigma","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"iBj35TZGVI"},{"type":"text","value":": ICESat-2 height uncertainty.","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"tT65rZqkln"}],"key":"sfXsnUTt6t"}],"key":"uv4nys8X46"},{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"dh_fit_dx","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"lYp4nSYo8V"},{"type":"text","value":": Along-track slope of the terrain.","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"cdrlzlwzwx"}],"key":"Rfz4wEI88w"}],"key":"CLrGJtvF4D"}],"key":"WuVl6E8z3n"},{"type":"paragraph","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"With this GeoDataFrame, it is very simple to derive snow depth!","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"PG8o4pBv7c"}],"key":"WhZabulaes"}],"key":"WR4i7CyJmr"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Derive snow depth using snow-on/snow-off differencing\nis2_uaf_gdf['is2_snow_depth'] = is2_uaf_gdf['is2_height'] - is2_uaf_gdf['lidar_height']\n\n# Estimate the residual (bias) between IS-2 and UAF depths\nis2_uaf_gdf['snow_depth_residual'] = is2_uaf_gdf['is2_snow_depth'] - is2_uaf_gdf['lidar_snow_depth']","key":"UJHESJbOhn"},{"type":"output","id":"z9ZSMwo-FudR9vPVOPyTn","data":[],"key":"nqPgnPR6h0"}],"key":"dFpa5Af5js"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Horray! We finally have ICESat-2 snow depths! Let’s make a couple of plots with the data we have.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"qaFJJs9QVV"}],"key":"CTKpzrA9eF"}],"key":"F4WmHwQaUO"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Map Plot","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"UZbV5veeUb"}],"identifier":"map-plot","label":"Map Plot","html_id":"map-plot","implicit":true,"key":"WbvCtxNWMP"}],"key":"uUteWm8llY"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Create plot\nfig, ax = plt.subplots(figsize=(12, 8))\n# Plot surface height\nis2_uaf_gdf.to_crs(\"EPSG:3857\").plot(column='is2_snow_depth', \n                  ax=ax, \n                  cmap='viridis',\n                  legend=True,\n                  markersize=10,\n                  alpha=0.8)\n\n# Plot the region bounding box\nregion_mercator.plot(ax=ax, \n                     facecolor='none', \n                     edgecolor='red', \n                     linewidth=2)\n\n# Add ESRI World Imagery basemap\nctx.add_basemap(ax, \n                crs=\"EPSG:3857\", \n                source=ctx.providers.Esri.WorldImagery)\nplt.tight_layout()\nplt.show()","key":"ecDVLJBzBZ"},{"type":"output","id":"tlR5Zoncwdjc7xqRNnmN3","data":[],"key":"wXJHN2IHFc"}],"key":"Mh7eejmp3u"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Along-track plots","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"V8Duy5mr3D"}],"identifier":"along-track-plots","label":"Along-track plots","html_id":"along-track-plots","implicit":true,"key":"H4oxLRYrRn"}],"key":"ykbC3Vr2Uq"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Plot snow depths for the three strong beams\nfig,axs = plt.subplots(3)\n\n#Left strong beam\ntmp_df = is2_uaf_gdf[is2_uaf_gdf['beam']==10]\naxs[0].plot(tmp_df['lat'], tmp_df['is2_snow_depth'], label='ICESat-2')\naxs[0].plot(tmp_df['lat'], tmp_df['lidar_snow_depth'], label='UAF')\naxs[0].set_title('gt1l')\naxs[0].legend()\n\n# Central strong beam\ntmp_df = is2_uaf_gdf[is2_uaf_gdf['beam']==30]\naxs[1].plot(tmp_df['lat'], tmp_df['is2_snow_depth'])\naxs[1].plot(tmp_df['lat'], tmp_df['lidar_snow_depth'])\naxs[1].set_ylabel('Snow depth [m]', fontsize=18)\naxs[1].set_title('gt2l')\n\n# Right strong beam\ntmp_df = is2_uaf_gdf[is2_uaf_gdf['beam']==50]\naxs[2].plot(tmp_df['lat'], tmp_df['is2_snow_depth'])\naxs[2].plot(tmp_df['lat'], tmp_df['lidar_snow_depth'])\naxs[2].set_xlabel('Latitude [m]', fontsize=18)\naxs[2].set_title('gt3l')\nplt.tight_layout()\n\n# Only include outer axis labels\nfor ax in axs:\n    ax.label_outer()\n    ax.set_ylim([0, 1.5])","key":"ll8gv8Nz1n"},{"type":"output","id":"TUrU499VRI4-Icp3xkaHN","data":[],"key":"rpTB5exHbG"}],"key":"jMnYhd5kaC"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Scatter Plot","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"bQyLbqraa3"}],"identifier":"scatter-plot","label":"Scatter Plot","html_id":"scatter-plot","implicit":true,"key":"MSiLceDvND"}],"key":"M6hxygG8Ll"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"fig, ax = plt.subplots(figsize=(12,6))\ns = is2_uaf_gpd.plot.scatter(ax=ax,\n                             x='lidar_snow_depth',\n                             y='is2_snow_depth',\n                             c='snow_depth_residual',\n                             vmin=-0.5, vmax=0.5\n                            )\nax.set_xlabel(\"UAF snow depth [m]\", fontsize=18)\nax.set_ylabel(\"ICESat-2 snow depth [m]\", fontsize=18)\nax.set_xlim([0, 1.5])\nax.set_ylim([0, 1.5])\ncbar = fig.colorbar(s, ax=ax)\ncbar.set_label(\"Snow depth residual [m]\")\nplt.tight_layout()","key":"AvxcgjMp2K"},{"type":"output","id":"Rv-MAdqOOcmcQiZS6cPGS","data":[],"key":"yLAscFmcHA"}],"key":"FNhTWbQCht"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Summary","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"NoeLKo7Mz3"}],"identifier":"summary","label":"Summary","html_id":"summary","implicit":true,"key":"u0X7frrp7i"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"🎉 Congratulations! You have completed this tutorial and have seen how to compare ICESat-2 to raster data, how to obtain ICESat-2 data with SlideRule, and how to calculate snow depths from ICESat-2 data.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"eHmwJJD2di"}],"key":"bKsDZkqfVL"}],"key":"fI5GyLQX2J"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Reference","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"RoMfc4oJW3"}],"identifier":"reference","label":"Reference","html_id":"reference","implicit":true,"key":"s18HIn9N2V"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"To further explore the topics of this tutorial, see the following detailed documentation: (TODO: ADD LINKS TO SITES AND PAPERS)","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"KWRhajjYtD"}],"key":"NoWqI3tqbx"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"SlideRule Website","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"innkI3vVWn"}],"key":"X7n2lE9Aqo"}],"key":"MSMUXn6scl"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"SlideRule online demo","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"TVMnxYuami"}],"key":"Q3pQPwxGMs"}],"key":"lXHeLoVLya"}],"key":"c5rQCzoV9V"},{"type":"heading","depth":3,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Papers","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"OHwGp9m3hW"}],"identifier":"papers","label":"Papers","html_id":"papers","implicit":true,"key":"JLDNOYPKFv"},{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Deems, Jeffrey S., et al. “Lidar Measurement of Snow Depth: A Review.” Journal of Glaciology, vol. 59, no. 215, 2013, pp. 467–79. ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"VvYoZv6xHZ"},{"type":"link","url":"http://DOI.org","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"DOI.org","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"gF2pZjyJX7"}],"urlSource":"http://DOI.org","key":"PFiwC7Iqlx"},{"type":"text","value":" (Crossref), ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"F1YnHPlxzd"},{"type":"cite","url":"https://doi.org/10.3189/2013JoG12J154","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Deems ","key":"HCOHeUwpDB"},{"type":"emphasis","children":[{"type":"text","value":"et al.","key":"Bb5GLPLsWI"}],"key":"VgLFIHNY06"},{"type":"text","value":" (2013)","key":"ZiGfqhIk5i"}],"kind":"narrative","label":"Deems_2013","identifier":"https://doi.org/10.3189/2013JoG12J154","enumerator":"1","key":"Co66kamGOP"},{"type":"text","value":".","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"uVCsK3D1rt"}],"key":"q31NBrK8ZN"},{"type":"paragraph","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Nuth, C., and A. Kääb. “Co-Registration and Bias Corrections of Satellite Elevation Data Sets for Quantifying Glacier Thickness Change.” The Cryosphere, vol. 5, no. 1, Mar. 2011, pp. 271–90. ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"J6W4wSRnO8"},{"type":"link","url":"http://DOI.org","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"DOI.org","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"uPXACflizf"}],"urlSource":"http://DOI.org","key":"JqWvah2NkO"},{"type":"text","value":" (Crossref), ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"OoUSpg8kD1"},{"type":"cite","url":"https://doi.org/10.5194/tc-5-271-2011","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Nuth & Kääb (2011)","key":"AQbPl26ZAz"}],"kind":"narrative","label":"Nuth_2011","identifier":"https://doi.org/10.5194/tc-5-271-2011","enumerator":"2","key":"NwTfuGE0e2"},{"type":"text","value":".","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"vkBoHe3PLa"}],"key":"ZQuVErhLDZ"}],"key":"WHg5D5EoPJ"}],"key":"c5gK6oYjeI"},"references":{"cite":{"order":["Deems_2013","Nuth_2011"],"data":{"Deems_2013":{"label":"Deems_2013","enumerator":"1","doi":"10.3189/2013jog12j154","html":"Deems, J. S., Painter, T. H., & Finnegan, D. C. (2013). Lidar measurement of snow depth: a review. <i>Journal of Glaciology</i>, <i>59</i>(215), 467–479. <a target=\"_blank\" rel=\"noreferrer\" href=\"https://doi.org/10.3189/2013jog12j154\">10.3189/2013jog12j154</a>","url":"https://doi.org/10.3189/2013jog12j154"},"Nuth_2011":{"label":"Nuth_2011","enumerator":"2","doi":"10.5194/tc-5-271-2011","html":"Nuth, C., & Kääb, A. (2011). Co-registration and bias corrections of satellite elevation data sets for quantifying glacier thickness change. <i>The Cryosphere</i>, <i>5</i>(1), 271–290. <a target=\"_blank\" rel=\"noreferrer\" href=\"https://doi.org/10.5194/tc-5-271-2011\">10.5194/tc-5-271-2011</a>","url":"https://doi.org/10.5194/tc-5-271-2011"}}}},"footer":{"navigation":{"prev":{"title":"DRAFT: Bathymetry Applications","url":"/notebooks/bathymetry","group":"Example Workflows"},"next":{"title":"Awesome ICESat-2","url":"/additional-resources/awesome","group":"Additional Resources"}}},"domain":"http://localhost:3000"}